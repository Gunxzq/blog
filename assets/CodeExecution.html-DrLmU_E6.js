import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,o}from"./app-Cpaph37u.js";const a="/blog/assets/%E5%AE%BF%E4%B8%BB%E7%8E%AF%E5%A2%83%E5%9B%BE-CTmak7h9.jpg",s={};function l(i,t){return o(),r("div",null,t[0]||(t[0]=[n('<h1 id="执行环境" tabindex="-1"><a class="header-anchor" href="#执行环境"><span>执行环境</span></a></h1><p>JavaScript必须依赖一个宿主环境才能实现完整的功能。</p><ol><li>宿主环境中有多个<strong>Agent</strong>，每个<strong>Agent</strong>对于一个js程序，也就是说Agent是程序的执行环境。</li><li>Agent集群中的agent可以共享内存。</li><li>每个<strong>Agent</strong>包含一个<strong>执行上下文栈</strong>，一个<strong>执行线程</strong>。</li><li><strong>执行上下文</strong>是代码的执行环境，包含一个<strong>Realm</strong>，代码创建的执行上下文还有一个<strong>词法环境</strong>。</li><li><strong>Realm</strong>提供了代码执行需要的基础资源，<strong>词法环境</strong>是作用域链的起点。<br><img src="'+a+'" alt="宿主环境" loading="lazy"></li></ol><h2 id="agent-程序的执行环境" tabindex="-1"><a class="header-anchor" href="#agent-程序的执行环境"><span><strong>Agent：程序的执行环境</strong></span></a></h2><p><strong>Agent</strong>是程序的执行环境，包括一个<strong>执行上下文栈</strong>、一个<strong>Agent记录器</strong>和一个<strong>执行线程</strong>。</p><h2 id="执行上下文栈-调用栈" tabindex="-1"><a class="header-anchor" href="#执行上下文栈-调用栈"><span><strong>执行上下文栈：调用栈</strong></span></a></h2><p><strong>执行上下文栈</strong>用于跟踪执行上下文。<strong>正在运行的执行上下文</strong>始终是该栈<strong>顶部元素</strong>。</p><p>以下情况会创建执行上下文：</p><ol><li>程序初始化：<a href="https://ecma262.com/2024/#sec-initializehostdefinedrealm" target="_blank" rel="noopener noreferrer">程序初始化操作</a></li><li>脚本执行：<a href="https://ecma262.com/2024/#sec-runtime-semantics-scriptevaluation" target="_blank" rel="noopener noreferrer">脚本求值</a></li><li>模块环境初始化：<a href="https://ecma262.com/2024/#sec-source-text-module-record-initialize-environment" target="_blank" rel="noopener noreferrer">模块环境初始化</a></li><li>模块执行：<a href="https://ecma262.com/2024/#sec-source-text-module-record-execute-module" target="_blank" rel="noopener noreferrer">模块执行</a></li><li>函数执行：</li><li>会创建迭代器的内置对象方法：</li></ol><h2 id="执行上下文-代码的执行环境" tabindex="-1"><a class="header-anchor" href="#执行上下文-代码的执行环境"><span><strong>执行上下文：代码的执行环境</strong></span></a></h2><p>用于跟踪运行时执行的代码。在任何时候，每个agent至多只有一个正在实际执行代码的执行上下文。</p><table><thead><tr><th>组件</th><th>作用</th></tr></thead><tbody><tr><td>code evaluation state</td><td>执行、暂停、恢复与此执行上下文的关联代码所需的任何状态。</td></tr><tr><td>Function</td><td>如果正在求值函数对象的代码，值为该函数对象。如果正在求值脚本、模块，则值为null。</td></tr><tr><td>Realm</td><td>执行上下文的关联代码所需的资源的Realm记录器。(<mark>不同的执行上下文可能有不同的realm</mark>)</td></tr><tr><td>ScriptOrModule</td><td>关联代码来源的模块记录器、脚本记录器（源文本解析结果）。</td></tr></tbody></table><div class="hint-container important"><p class="hint-container-title">ECMAScript代码的执行上下文还有额外的三个组件</p><table><thead><tr><th>组件</th><th>作用</th></tr></thead><tbody><tr><td>LexicalEnvironment</td><td><strong>指向</strong>代码中创建的<strong>标识符引用</strong>(存放在环境记录器)。</td></tr><tr><td>VariableEnvironment</td><td><strong>指向</strong>代码中创建的<strong>变量声明</strong>(存放在环境记录器)</td></tr><tr><td>PrivateEnvironment</td><td><strong>指向</strong>包含类中的类元素创建的私有名称(存放在私有环境记录)</td></tr></tbody></table></div><h2 id="realm-执行所需的资源总和" tabindex="-1"><a class="header-anchor" href="#realm-执行所需的资源总和"><span><strong>Realm：执行所需的资源总和</strong></span></a></h2><p>一个Realm由一组内置对象、一个ECMAscript全局环境、该全局环境范围内加载的所有ECMAscript代码、以及其他相关状态和资源组成。<br> Realm包含了代码需要执行的最小资源。</p><table><thead><tr><th>字段</th><th>值</th><th>含义</th></tr></thead><tbody><tr><td>[[AgentSignifier]]</td><td>Agent标识符</td><td>拥有此Realm的Agent代理</td></tr><tr><td>[[Intrinsics]]</td><td>记录器</td><td>关联代码使用的内置值</td></tr><tr><td>[[GlobalObject]]</td><td>全局对象</td><td>此范围使用的全局对象</td></tr><tr><td>[[GlobalEnv]]</td><td>全局环境记录器</td><td>范围的全局环境</td></tr><tr><td>[[TemplateMap]]</td><td>列表</td><td></td></tr><tr><td>[[LoadedModules]]</td><td>列表</td><td></td></tr><tr><td>[[HostDefined]]</td><td>默认值为undefined</td><td>宿主环境保留字段</td></tr></tbody></table>',16)]))}const c=e(s,[["render",l],["__file","CodeExecution.html.vue"]]),p=JSON.parse('{"path":"/posts/ECMA/CodeExecution.html","title":"执行环境","lang":"zh-CN","frontmatter":{"date":"2025-02-06T00:00:00.000Z","order":2,"category":["ECMA标准"],"description":"执行环境 JavaScript必须依赖一个宿主环境才能实现完整的功能。 宿主环境中有多个Agent，每个Agent对于一个js程序，也就是说Agent是程序的执行环境。 Agent集群中的agent可以共享内存。 每个Agent包含一个执行上下文栈，一个执行线程。 执行上下文是代码的执行环境，包含一个Realm，代码创建的执行上下文还有一个词法环境。 ...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/ECMA/CodeExecution.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"执行环境"}],["meta",{"property":"og:description","content":"执行环境 JavaScript必须依赖一个宿主环境才能实现完整的功能。 宿主环境中有多个Agent，每个Agent对于一个js程序，也就是说Agent是程序的执行环境。 Agent集群中的agent可以共享内存。 每个Agent包含一个执行上下文栈，一个执行线程。 执行上下文是代码的执行环境，包含一个Realm，代码创建的执行上下文还有一个词法环境。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-11T06:36:39.000Z"}],["meta",{"property":"article:published_time","content":"2025-02-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-11T06:36:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"执行环境\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-11T06:36:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Agent：程序的执行环境","slug":"agent-程序的执行环境","link":"#agent-程序的执行环境","children":[]},{"level":2,"title":"执行上下文栈：调用栈","slug":"执行上下文栈-调用栈","link":"#执行上下文栈-调用栈","children":[]},{"level":2,"title":"执行上下文：代码的执行环境","slug":"执行上下文-代码的执行环境","link":"#执行上下文-代码的执行环境","children":[]},{"level":2,"title":"Realm：执行所需的资源总和","slug":"realm-执行所需的资源总和","link":"#realm-执行所需的资源总和","children":[]}],"git":{"createdTime":1744353399000,"updatedTime":1744353399000,"contributors":[{"name":"GUNxzq","username":"GUNxzq","email":"3219988985@qq.com","commits":1,"url":"https://github.com/GUNxzq"}]},"readingTime":{"minutes":2.64,"words":791},"filePathRelative":"posts/ECMA/CodeExecution.md","localizedDate":"2025年2月6日","excerpt":"\\n<p>JavaScript必须依赖一个宿主环境才能实现完整的功能。</p>\\n<ol>\\n<li>宿主环境中有多个<strong>Agent</strong>，每个<strong>Agent</strong>对于一个js程序，也就是说Agent是程序的执行环境。</li>\\n<li>Agent集群中的agent可以共享内存。</li>\\n<li>每个<strong>Agent</strong>包含一个<strong>执行上下文栈</strong>，一个<strong>执行线程</strong>。</li>\\n<li><strong>执行上下文</strong>是代码的执行环境，包含一个<strong>Realm</strong>，代码创建的执行上下文还有一个<strong>词法环境</strong>。</li>\\n<li><strong>Realm</strong>提供了代码执行需要的基础资源，<strong>词法环境</strong>是作用域链的起点。<br>\\n</li>\\n</ol>","autoDesc":true}');export{c as comp,p as data};
