import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as r,o as n}from"./app-o8wfpQUt.js";const i={};function p(l,e){return n(),o("div",null,e[0]||(e[0]=[r('<h1 id="跨域问题" tabindex="-1"><a class="header-anchor" href="#跨域问题"><span>跨域问题</span></a></h1><p>跨域是浏览器基于同源策略的安全手段</p><p>同源有三个部分：</p><ol><li>协议相同</li><li>主机相同</li><li>端口相同</li></ol><p>非同源请求，则发生了跨域</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><ol><li>jsonp</li><li>cors<br> 跨域资源共享，一系列的HTTP头组成，决定了是否阻止前端代码获取跨域请求的响应</li><li>proxy<br> 代理，网络代理，允许一个通过这个服务与另一个网络终端进行非直接的连接<br> vue.config.js文件配置，最终发布上线时如果web应用和接口服务器不在一起仍会跨域<br> 通过服务端实现代理请求转发，express、nginx</li></ol>',7)]))}const c=t(i,[["render",p],["__file","cors.html.vue"]]),m=JSON.parse('{"path":"/posts/Vue/cors.html","title":"跨域问题","lang":"zh-CN","frontmatter":{"date":"2025-03-13T00:00:00.000Z","category":["JS框架"],"tag":["Vue"],"description":"跨域问题 跨域是浏览器基于同源策略的安全手段 同源有三个部分： 协议相同 主机相同 端口相同 非同源请求，则发生了跨域 方法 jsonp cors 跨域资源共享，一系列的HTTP头组成，决定了是否阻止前端代码获取跨域请求的响应 proxy 代理，网络代理，允许一个通过这个服务与另一个网络终端进行非直接的连接 vue.config.js文件配置，最终发布...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/Vue/cors.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"跨域问题"}],["meta",{"property":"og:description","content":"跨域问题 跨域是浏览器基于同源策略的安全手段 同源有三个部分： 协议相同 主机相同 端口相同 非同源请求，则发生了跨域 方法 jsonp cors 跨域资源共享，一系列的HTTP头组成，决定了是否阻止前端代码获取跨域请求的响应 proxy 代理，网络代理，允许一个通过这个服务与另一个网络终端进行非直接的连接 vue.config.js文件配置，最终发布..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T06:14:43.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2025-03-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-14T06:14:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"跨域问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-14T06:14:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[]}],"git":{"createdTime":1752055862000,"updatedTime":1752473683000,"contributors":[{"name":"Gunxzq","username":"Gunxzq","email":"3219988985@qq.com","commits":2,"url":"https://github.com/Gunxzq"}]},"readingTime":{"minutes":0.61,"words":184},"filePathRelative":"posts/Vue/cors.md","localizedDate":"2025年3月13日","excerpt":"\\n<p>跨域是浏览器基于同源策略的安全手段</p>\\n<p>同源有三个部分：</p>\\n<ol>\\n<li>协议相同</li>\\n<li>主机相同</li>\\n<li>端口相同</li>\\n</ol>\\n<p>非同源请求，则发生了跨域</p>\\n<h2>方法</h2>\\n<ol>\\n<li>jsonp</li>\\n<li>cors<br>\\n跨域资源共享，一系列的HTTP头组成，决定了是否阻止前端代码获取跨域请求的响应</li>\\n<li>proxy<br>\\n代理，网络代理，允许一个通过这个服务与另一个网络终端进行非直接的连接<br>\\nvue.config.js文件配置，最终发布上线时如果web应用和接口服务器不在一起仍会跨域<br>\\n通过服务端实现代理请求转发，express、nginx</li>\\n</ol>","autoDesc":true}');export{c as comp,m as data};
