import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as s,b as r,o as a,r as l}from"./app-BV1qhzpx.js";const i={};function p(g,e){const t=l("Catalog");return a(),o("div",null,[s(t),e[0]||(e[0]=r('<p>共有八大数据类型</p><h2 id="undefined-类型" tabindex="-1"><a class="header-anchor" href="#undefined-类型"><span><strong>Undefined 类型</strong></span></a></h2><p>只有一个值，<strong>undefined</strong>。任何未被赋值的变量具有值<strong>undefined</strong>。</p><h2 id="null-类型" tabindex="-1"><a class="header-anchor" href="#null-类型"><span><strong>Null 类型</strong></span></a></h2><p>只有一个值，<strong>nulll</strong>。</p><h2 id="boolean-类型" tabindex="-1"><a class="header-anchor" href="#boolean-类型"><span><strong>Boolean 类型</strong></span></a></h2><p><em>Boolean</em> 类型表示具有两个值的<strong>逻辑实体</strong>，称为 <strong>true</strong> 和 <strong>false</strong>。</p><h2 id="string-类型" tabindex="-1"><a class="header-anchor" href="#string-类型"><span><strong>String 类型</strong></span></a></h2><p><em>String</em> 类型是零个或多个 16 位无符号整数值(称为元素)的所有有序序列的集合，最大长度为 <strong>2<sup>53</sup> - 1</strong>个元素。</p><h2 id="符号类型-symbol-type" tabindex="-1"><a class="header-anchor" href="#符号类型-symbol-type"><span><strong>符号类型：Symbol Type</strong></span></a></h2><p>Symbol 类型是可用作 Object 属性键的所有非 String 值的集合。在对象中这是个具有唯一实例且不可改变的属性.</p><h3 id="数值类型-the-number-type" tabindex="-1"><a class="header-anchor" href="#数值类型-the-number-type"><span><strong>数值类型：The Number Type</strong></span></a></h3><p><em>Number</em>类型（即 2<sup>64</sup> - 2<sup>53</sup> + 3）表示 IEEE 二进制浮点算术标准中指定的双精度 64 位格式值。<br> 在ES中,&quot;非数字&quot;值表示为单个特殊的<strong>NaN</strong>值.另外的两个特殊值,称为<strong>正 Infinity</strong>和<strong>负 Infinity</strong>。</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>所有大小不大于 2****53 的正整数和负整数都可以在 Number 类型中表示。</p></div><h3 id="bigint-类型" tabindex="-1"><a class="header-anchor" href="#bigint-类型"><span><strong>BigInt 类型</strong></span></a></h3><p><em>BigInt</em> 类型表示整数值,该值可以是任何大小。</p><h2 id="object类型" tabindex="-1"><a class="header-anchor" href="#object类型"><span><strong>object类型</strong></span></a></h2><p>对象的实例也称为&quot;an Object&quot;,表示属性的集合.每个属性要么是<strong>数据属性</strong>,要么是<strong>访问器属性(accessor property)</strong>。</p>',18))])}const d=n(i,[["render",p],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/posts/ECMA/DataTypes/LanguageTypes/","title":"ES语言类型","lang":"zh-CN","frontmatter":{"title":"ES语言类型","index":false,"icon":"laptop-code","category":["ECMA标准"],"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/ECMA/DataTypes/LanguageTypes/"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"ES语言类型"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ES语言类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Undefined 类型","slug":"undefined-类型","link":"#undefined-类型","children":[]},{"level":2,"title":"Null 类型","slug":"null-类型","link":"#null-类型","children":[]},{"level":2,"title":"Boolean 类型","slug":"boolean-类型","link":"#boolean-类型","children":[]},{"level":2,"title":"String 类型","slug":"string-类型","link":"#string-类型","children":[]},{"level":2,"title":"符号类型：Symbol Type","slug":"符号类型-symbol-type","link":"#符号类型-symbol-type","children":[{"level":3,"title":"数值类型：The Number Type","slug":"数值类型-the-number-type","link":"#数值类型-the-number-type","children":[]},{"level":3,"title":"BigInt 类型","slug":"bigint-类型","link":"#bigint-类型","children":[]}]},{"level":2,"title":"object类型","slug":"object类型","link":"#object类型","children":[]}],"git":{},"readingTime":{"minutes":1.12,"words":335},"filePathRelative":"posts/ECMA/DataTypes/LanguageTypes/README.md","excerpt":""}');export{d as comp,u as data};
