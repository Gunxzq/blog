import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as h,o as t}from"./app-o8wfpQUt.js";const n={};function l(e,i){return t(),a("div",null,i[0]||(i[0]=[h(`<h1 id="php" tabindex="-1"><a class="header-anchor" href="#php"><span>PHP</span></a></h1><p>PHP 不仅限于输出 HTML。PHP 的功能包括输出丰富的文件类型，例如图像或 PDF 文件、加密数据和发送电子邮件。还可以轻松输出任何文本，例如 JSON 或 XML。PHP 可以自动生成这些文件，并将它们保存在文件系统中，而不是将其打印出来，从而形成动态内容的服务器端缓存。</p><h2 id="php标记" tabindex="-1"><a class="header-anchor" href="#php标记"><span>PHP标记</span></a></h2><p>PHP标记表示了一段可以被PHP解析器解析的代码。</p><ol><li>当解析一个文件时，PHP 会寻找起始和结束标记，也就是 <mark>&lt;?php</mark> 和 <mark>?&gt;</mark> ，这告诉 PHP 开始和停止解析二者之间的代码。</li><li>此种解析方式使得 PHP 可以被嵌入到各种不同的文档中去，而任何起始和结束标记之外的部分都会被 PHP 解析器忽略。</li></ol><div class="hint-container important"><p class="hint-container-title">三种PHP标记</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 标准 &lt;?php </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;if you want to serve PHP code in XHTML or XML documents,use these tags&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// &lt;?= </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> 是</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> echo</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">的简写</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">  You</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> can</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> use</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> the</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> short</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> echo</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> tag</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;?= &#39;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">print</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> this</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&#39; </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">    It</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;s equivalent to &lt;?php echo &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> this</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39; ?&gt;.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">// 短标记 &lt;? ?&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">3.  &lt;? echo &#39;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">this</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> code</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> is</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> within</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> short</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> tags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">but</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> will</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> only</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> work</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> short_open_tag</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> is</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> enabled</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;; ?&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>短标记是被默认开启的，但是也可以通过 short_open_tag( <mark>php.ini</mark> ) 来直接禁用。如果 PHP 在被安装时使用了 --disable-short-tags 的配置，该功能则是被默认禁用的。<br> 如果文件内容仅仅包含 PHP 代码，最好在文件末尾删除 PHP 结束标记。这可以避免在 PHP 结束标记之后万一意外加入了空格或者换行符，会导致 PHP 开始输出这些空白，而脚本中此时并无输出的意图。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello world&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ... 更多代码</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Last statement&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 脚本在此处结束，没有 PHP 结束标记</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="与html文档的混合" tabindex="-1"><a class="header-anchor" href="#与html文档的混合"><span>与HTML文档的混合</span></a></h2><p>在PHP标记以外的内容都会被PHP解析器忽略，这可以使php混合其他内容。</p><div class="hint-container important"><p class="hint-container-title">混合HTML</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">This</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> is</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> going</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> to</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> be</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> ignored</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> by</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> PHP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> and</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> displayed</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> by</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> the</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> browser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;While this is going to be parsed.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">This</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> will</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> also</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> be</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> ignored</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> by</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> PHP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> and</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> displayed</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> by</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> the</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> browser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>这将如预期中的运行，因为当 PHP 解释器碰到 ?&gt; 结束标记时就简单地将其后内容原样输出（除非马上紧接换行 - 见 指令分隔符）直到碰到下一个开始标记；例外是处于条件语句中间时，此时 PHP 解释器会根据条件判断来决定哪些输出，哪些跳过。见下例。<br> 使用条件结构：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$expression</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">  This</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> will</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> show</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> the</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> expression</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> is</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> else</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">  Otherwise</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> this</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> will</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上例中 PHP 将跳过条件语句未达成的段落，即使该段落位于 PHP 开始和结束标记之外。由于 PHP 解释器会在条件未达成时直接跳过该段条件语句块，因此 PHP 会根据条件来忽略之。<br> 要输出大段文本时，跳出 PHP 解析模式通常比将文本通过 echo 或 print 输出更有效率。<br> 注意:<br> 此外注意如果将 PHP 嵌入到 XML 或 XHTML 中则需要使用 <mark>&lt;?php</mark> <mark>?&gt;</mark> 标记以保持符合标准。</p><h2 id="指令分隔符" tabindex="-1"><a class="header-anchor" href="#指令分隔符"><span>指令分隔符</span></a></h2><p>同 C 或 Perl 一样，PHP 需要在每个语句后用分号结束指令。一段 PHP 代码中的结束标记隐含表示了一个分号；在一个 PHP 代码段中的最后一行可以不用分号结束。如果后面还有新行，则代码段的结束标记包含了行结束。<br> 示例 #1 包含末尾换行符的结束标记的例子</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Some text&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">No</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> newline</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;But newline now&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上示例会输出：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">Some</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> textNo</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> newline</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">But</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> newline</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> now</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>进入和退出 PHP 解析的例子：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;This is a test&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;This is a test&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;We omitted the last closing tag&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意:<br> 文件末尾的 PHP 代码段结束标记可以不要，有些情况下当使用 include 或者 require 时省略掉会更好些，这样不期望的空白符就不会出现在文件末尾，之后仍然可以输出响应标头。在使用输出缓冲时也很便利，就不会看到由包含文件生成的不期望的空白符。</p><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h2><p>PHP 支持 C，C++ 和 Unix Shell 风格（Perl 风格）的注释。例如:</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;This is a test&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这是单行 c++ 样式注释</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 这是一条多行注释</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       另一行也是注释 */</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;This is yet another test&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;One Final Test&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这是单行 shell 风格的注释</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>单行注释仅仅注释到行末或者当前的 PHP 代码块，视乎哪个首先出现。这意味着在 // ... ?&gt; 或者 # ... ?&gt; 之后的 HTML 代码将被显示出来：?&gt; 跳出了 PHP 模式并返回了 HTML 模式，// 或 # 并不能影响到这一点。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">This</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> is</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> an</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # echo &#39;simple&#39;;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> example</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">The</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> header</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> above</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> will</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> say</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;This is an  example&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>C 风格的注释在碰到第一个 */ 时结束。要确保不要嵌套 C 风格的注释。试图注释掉一大块代码时很容易出现该错误。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> /*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    echo &#39;This is a test&#39;; /* 这个注释会引发问题 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29)]))}const r=s(n,[["render",l],["__file","introduce.html.vue"]]),d=JSON.parse('{"path":"/posts/PHP/introduce.html","title":"PHP","lang":"zh-CN","frontmatter":{"date":"2025-04-09T00:00:00.000Z","order":2,"category":["PHP"],"tag":["PHP"],"description":"PHP PHP 不仅限于输出 HTML。PHP 的功能包括输出丰富的文件类型，例如图像或 PDF 文件、加密数据和发送电子邮件。还可以轻松输出任何文本，例如 JSON 或 XML。PHP 可以自动生成这些文件，并将它们保存在文件系统中，而不是将其打印出来，从而形成动态内容的服务器端缓存。 PHP标记 PHP标记表示了一段可以被PHP解析器解析的代码。 ...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/PHP/introduce.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"PHP"}],["meta",{"property":"og:description","content":"PHP PHP 不仅限于输出 HTML。PHP 的功能包括输出丰富的文件类型，例如图像或 PDF 文件、加密数据和发送电子邮件。还可以轻松输出任何文本，例如 JSON 或 XML。PHP 可以自动生成这些文件，并将它们保存在文件系统中，而不是将其打印出来，从而形成动态内容的服务器端缓存。 PHP标记 PHP标记表示了一段可以被PHP解析器解析的代码。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-11T06:36:39.000Z"}],["meta",{"property":"article:tag","content":"PHP"}],["meta",{"property":"article:published_time","content":"2025-04-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-11T06:36:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PHP\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-11T06:36:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"PHP标记","slug":"php标记","link":"#php标记","children":[]},{"level":2,"title":"与HTML文档的混合","slug":"与html文档的混合","link":"#与html文档的混合","children":[]},{"level":2,"title":"指令分隔符","slug":"指令分隔符","link":"#指令分隔符","children":[]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[]}],"git":{"createdTime":1744353399000,"updatedTime":1744353399000,"contributors":[{"name":"GUNxzq","username":"GUNxzq","email":"3219988985@qq.com","commits":1,"url":"https://github.com/GUNxzq"}]},"readingTime":{"minutes":4.4,"words":1319},"filePathRelative":"posts/PHP/introduce.md","localizedDate":"2025年4月9日","excerpt":"\\n<p>PHP 不仅限于输出 HTML。PHP 的功能包括输出丰富的文件类型，例如图像或 PDF 文件、加密数据和发送电子邮件。还可以轻松输出任何文本，例如 JSON 或 XML。PHP 可以自动生成这些文件，并将它们保存在文件系统中，而不是将其打印出来，从而形成动态内容的服务器端缓存。</p>\\n<h2>PHP标记</h2>\\n<p>PHP标记表示了一段可以被PHP解析器解析的代码。</p>\\n<ol>\\n<li>当解析一个文件时，PHP 会寻找起始和结束标记，也就是 <mark>&lt;?php</mark> 和 <mark>?&gt;</mark> ，这告诉 PHP 开始和停止解析二者之间的代码。</li>\\n<li>此种解析方式使得 PHP 可以被嵌入到各种不同的文档中去，而任何起始和结束标记之外的部分都会被 PHP 解析器忽略。</li>\\n</ol>","autoDesc":true}');export{r as comp,d as data};
