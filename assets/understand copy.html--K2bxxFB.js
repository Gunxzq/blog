import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,e as n,o as r}from"./app-BPNakhlZ.js";const s={};function a(i,t){return r(),o("div",null,t[0]||(t[0]=[n('<h1 id="d" tabindex="-1"><a class="header-anchor" href="#d"><span><strong>d</strong></span></a></h1><p>ECMA是一个js标准，他只提供抽象定义，具体实现取决于实际环境。例如Node和浏览器环境就有不同的全局对象。</p><p>阅读ECMA有以下难点：</p><ol><li><strong>概念</strong>：大量的概念横跨整个文档。</li><li><strong>代换式的上下标</strong>：简略的表达。</li><li><strong>伪代码</strong>：只提供抽象定义。</li><li><strong>省略语义</strong>：有很多的操作序列被简化成简单的词汇存在于各种代换式中。</li></ol>',4)]))}const d=e(s,[["render",a],["__file","understand copy.html.vue"]]),c=JSON.parse('{"path":"/posts/ECMA/understand%20copy.html","title":"d","lang":"zh-CN","frontmatter":{"date":"2025-02-01T00:00:00.000Z","order":2,"category":["ECMA"],"description":"d ECMA是一个js标准，他只提供抽象定义，具体实现取决于实际环境。例如Node和浏览器环境就有不同的全局对象。 阅读ECMA有以下难点： 概念：大量的概念横跨整个文档。 代换式的上下标：简略的表达。 伪代码：只提供抽象定义。 省略语义：有很多的操作序列被简化成简单的词汇存在于各种代换式中。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/ECMA/understand%20copy.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"d"}],["meta",{"property":"og:description","content":"d ECMA是一个js标准，他只提供抽象定义，具体实现取决于实际环境。例如Node和浏览器环境就有不同的全局对象。 阅读ECMA有以下难点： 概念：大量的概念横跨整个文档。 代换式的上下标：简略的表达。 伪代码：只提供抽象定义。 省略语义：有很多的操作序列被简化成简单的词汇存在于各种代换式中。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2025-02-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"d\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.44,"words":133},"filePathRelative":"posts/ECMA/understand copy.md","localizedDate":"2025年2月1日","excerpt":"\\n<p>ECMA是一个js标准，他只提供抽象定义，具体实现取决于实际环境。例如Node和浏览器环境就有不同的全局对象。</p>\\n<p>阅读ECMA有以下难点：</p>\\n<ol>\\n<li><strong>概念</strong>：大量的概念横跨整个文档。</li>\\n<li><strong>代换式的上下标</strong>：简略的表达。</li>\\n<li><strong>伪代码</strong>：只提供抽象定义。</li>\\n<li><strong>省略语义</strong>：有很多的操作序列被简化成简单的词汇存在于各种代换式中。</li>\\n</ol>\\n","autoDesc":true}');export{d as comp,c as data};
