import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as l,o as r}from"./app-o8wfpQUt.js";const a="/blog/assets/WH2WS~N_UZ9)_8Z8651L7C8-C6KjQUby.png",n={};function o(p,e){return r(),i("div",null,e[0]||(e[0]=[l('<h1 id="vue3" tabindex="-1"><a class="header-anchor" href="#vue3"><span>vue3</span></a></h1><p>速度更快、体积减少、更易维护、更接近原生、更易于使用</p><p>比较：</p><ol><li>重写了虚拟dom实现</li><li>编译模板优化</li><li>更高效的组件初始化</li><li>undate性能提高</li><li>SSR速度提高2~3倍</li></ol><h2 id="新特性" tabindex="-1"><a class="header-anchor" href="#新特性"><span>新特性</span></a></h2><ol><li>framents<br> 支持多个根节点</li><li>teleport<br> 传送，在逻辑位置写模板代码，然后再vue范围之外渲染他<br> 它可以出现在任何地方</li><li>组合式api<br><img src="'+a+'" alt="alt text" loading="lazy"></li><li>createRenderer<br> 自定义渲染器，将vue的开发模型扩展到其他平台</li></ol><h2 id="vue3优化" tabindex="-1"><a class="header-anchor" href="#vue3优化"><span>vue3优化</span></a></h2><ol><li>diff算法优化：<br> 对会发生变化的地方增加了flag标记，变化时直接找到该地方进行比较</li><li>静态提升：<br> 对不参与更新的元素，会做静态提升，只会被创建一次，渲染时直接复用</li><li>事件监听缓存：<br> 默认情况下绑定事件行为会被视为动态绑定，所以每次都会追踪他的变化</li><li>SSR优化：<br> 当静态内容大到一定量级时候，会用createStaticVNode方法在客户端去生成一个static node，这些静态node，会被直接innerHtml，就不需要创建对象，然后根据对象渲染</li><li>源码体积<br> 移除了一些不常用的API，使用了TreeShanking，不使用的内容都会被摇掉</li></ol><h2 id="响应式系统" tabindex="-1"><a class="header-anchor" href="#响应式系统"><span>响应式系统</span></a></h2><p>vue2使用defineProperty来劫持整个对象，深度遍历为每个属性添加getter和setter实现响应式<br> vue3采用proxy重写了响应式系统，proxy可以对整个对象进行监听，不需要深度遍历</p><ol><li>监听动态属性的添加</li><li>监听数组的索引和length属性</li><li>监听删除属性</li></ol><p>defineproperty和proxy实现的区别：<br> 原理，数据更新后，通知相关的依赖函数<br> defineproperty无法劫持到对象的删除和添加属性的操作，动态的属性不具备响应式，深层的监听也造成了性能的极大问题<br> proxy劫持整个对象的基本操作，而不是某个属性，多达13种拦截方法</p>',12)]))}const d=t(n,[["render",o],["__file","vue3.html.vue"]]),u=JSON.parse('{"path":"/posts/Vue/vue3.html","title":"vue3","lang":"zh-CN","frontmatter":{"date":"2025-03-16T00:00:00.000Z","category":["JS框架"],"tag":["Vue"],"description":"vue3 速度更快、体积减少、更易维护、更接近原生、更易于使用 比较： 重写了虚拟dom实现 编译模板优化 更高效的组件初始化 undate性能提高 SSR速度提高2~3倍 新特性 framents 支持多个根节点 teleport 传送，在逻辑位置写模板代码，然后再vue范围之外渲染他 它可以出现在任何地方 组合式api alt text creat...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/Vue/vue3.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"vue3"}],["meta",{"property":"og:description","content":"vue3 速度更快、体积减少、更易维护、更接近原生、更易于使用 比较： 重写了虚拟dom实现 编译模板优化 更高效的组件初始化 undate性能提高 SSR速度提高2~3倍 新特性 framents 支持多个根节点 teleport 传送，在逻辑位置写模板代码，然后再vue范围之外渲染他 它可以出现在任何地方 组合式api alt text creat..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T06:14:43.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2025-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-14T06:14:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-14T06:14:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"新特性","slug":"新特性","link":"#新特性","children":[]},{"level":2,"title":"vue3优化","slug":"vue3优化","link":"#vue3优化","children":[]},{"level":2,"title":"响应式系统","slug":"响应式系统","link":"#响应式系统","children":[]}],"git":{"createdTime":1752055862000,"updatedTime":1752473683000,"contributors":[{"name":"Gunxzq","username":"Gunxzq","email":"3219988985@qq.com","commits":2,"url":"https://github.com/Gunxzq"}]},"readingTime":{"minutes":1.82,"words":547},"filePathRelative":"posts/Vue/vue3.md","localizedDate":"2025年3月16日","excerpt":"\\n<p>速度更快、体积减少、更易维护、更接近原生、更易于使用</p>\\n<p>比较：</p>\\n<ol>\\n<li>重写了虚拟dom实现</li>\\n<li>编译模板优化</li>\\n<li>更高效的组件初始化</li>\\n<li>undate性能提高</li>\\n<li>SSR速度提高2~3倍</li>\\n</ol>\\n<h2>新特性</h2>\\n<ol>\\n<li>framents<br>\\n支持多个根节点</li>\\n<li>teleport<br>\\n传送，在逻辑位置写模板代码，然后再vue范围之外渲染他<br>\\n它可以出现在任何地方</li>\\n<li>组合式api<br>\\n</li>\\n<li>createRenderer<br>\\n自定义渲染器，将vue的开发模型扩展到其他平台</li>\\n</ol>","autoDesc":true}');export{d as comp,u as data};
