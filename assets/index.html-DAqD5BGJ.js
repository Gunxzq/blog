import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as a,d as e,o as l,r}from"./app-9LJUsthK.js";const h="/blog/assets/F)W@5F(C))(YCQ_NHT)J7D-CK0_iXDU.png",p={};function o(k,i){const s=r("Catalog");return l(),n("div",null,[a(s),i[0]||(i[0]=e(`<h2 id="性能优化指标" tabindex="-1"><a class="header-anchor" href="#性能优化指标"><span><strong>性能优化指标</strong></span></a></h2><h3 id="fcp-first-contentful-paint" tabindex="-1"><a class="header-anchor" href="#fcp-first-contentful-paint"><span><strong>FCP:First Contentful Paint</strong></span></a></h3><p><strong>首次内容渲染 (FCP)</strong> 是指用户首次导航到网页到网页<strong>任何一部分内容</strong>呈现在屏幕上的时间。<br> 内容指的是<strong>文本、图片、svg</strong>元素或<strong>非白色的canvas</strong>元素。</p><h4 id="在js中衡量fcp" tabindex="-1"><a class="header-anchor" href="#在js中衡量fcp"><span>在JS中衡量FCP</span></a></h4><p>使用<strong>Paint Timing API</strong>创建一个 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceObserver" target="_blank" rel="noopener noreferrer">PerformanceObserver</a>，用于监听名称为 first-contentful-paint 的 paint 条目并将其记录到控制台。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> PerformanceObserver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> entry</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> of</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getEntriesByName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;first-contentful-paint&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 输出第一个有内容的元素的时间</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;FCP candidate:&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">observe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;paint&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">buffered</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lcp-largest-contentful-paint" tabindex="-1"><a class="header-anchor" href="#lcp-largest-contentful-paint"><span><strong>LCP：Largest Contentful Paint</strong></span></a></h3><p><strong>最大内容渲染 (FCP)</strong> 是指可见的最大<strong>图片、文本块、视频</strong>的渲染时间(相对于用户首次导航到网页的时间)。</p><p>有关的DOM元素：</p><ol><li><strong>img</strong>元素（第一帧呈现时间适用于 GIF 或动画 PNG 等动画内容）</li><li><strong>svg</strong>元素中的<strong>image</strong>元素</li><li><strong>video</strong>元素（使用海报图片加载时间或视频的第一帧呈现时间，以时间较短者为准）</li><li>使用 url() 函数加载背景图片的元素（而不是 CSS 渐变）</li><li>包含<strong>文本节点</strong>或其他<strong>内嵌级文本元素子元素的块级元素。</strong></li></ol><div class="hint-container important"><p class="hint-container-title">与FCP的区别</p><p>FCP 衡量的是任何内容绘制到屏幕上的时间，LCP 衡量的是主要内容绘制到屏幕上的时间，因此 LCP 旨在更具选择性。</p></div><h3 id="cls-cumulative-layout-shift" tabindex="-1"><a class="header-anchor" href="#cls-cumulative-layout-shift"><span><strong>CLS:Cumulative Layout Shift</strong></span></a></h3><p><a href="https://web.developers.google.cn/articles/cls?hl=zh_cn" target="_blank" rel="noopener noreferrer">web上的说明</a></p><p>CLS 是用于衡量网页的整个生命周期内发生的每一次<strong>意外布局偏移</strong>。</p><div class="hint-container important"><p class="hint-container-title">布局偏移</p><p><a href="https://github.com/WICG/layout-instability" target="_blank" rel="noopener noreferrer">Layout Instability API</a>会在视口中可见元素在两帧之间更改起始位置时报告<strong>layout-shift</strong>集合。此类元素被视为<strong>不稳定元素</strong>。</p></div><h3 id="fid-first-input-delay" tabindex="-1"><a class="header-anchor" href="#fid-first-input-delay"><span><strong>FID:First Input Delay</strong></span></a></h3><p><strong>首次互动延迟(FID) <strong>是指衡量从用户</strong>首次与网页互动</strong>（即点击链接、点按按钮）到浏览器实际能够开始处理事件处理脚本以<strong>响应该互动</strong>的时间。</p><div class="hint-container important"><p class="hint-container-title">即使没有事件监听器也会衡量</p><p>FID 用于衡量收到输入事件与主线程下次空闲之间的时间差。这意味着，即使未注册事件监听器，系统也会衡量 FID。原因在于，许多用户互动不需要事件监听器，但需要主线程处于空闲状态才能运行。<br> 例如，以下所有 HTML 元素都需要等待主线程上的进行中任务完成，然后才能响应用户互动：</p><ol><li>文本字段、复选框和单选按钮 (input、textarea)</li><li>选择下拉菜单 (select)</li><li>链接 (a)</li></ol></div><h3 id="inp-interaction-to-next-paint" tabindex="-1"><a class="header-anchor" href="#inp-interaction-to-next-paint"><span><strong>INP:Interaction to Next Paint</strong></span></a></h3><p><a href="https://web.developers.google.cn/articles/inp?hl=zh_cn#what-is-inp" target="_blank" rel="noopener noreferrer">web上的说明</a></p><p><strong>互动延迟时间(INP)</strong> 指的是用户访问网页期间发生的所有互动（点击、点按和键盘互动等）的延迟时间中的最大值。<br> 描述了网页对互动的整体响应能力。</p><div class="hint-container important"><p class="hint-container-title">与FID的不同</p><p>FID 仅衡量网页上首次互动的输入延迟。INP 通过观察网页上的所有互动（从输入延迟开始，到运行事件处理脚本所需的时间，最后到浏览器绘制下一个帧为止）来改进 FID。</p></div><h3 id="ttfb-time-to-first-byte" tabindex="-1"><a class="header-anchor" href="#ttfb-time-to-first-byte"><span><strong>TTFB:Time To First Byte</strong></span></a></h3><p><a href="https://web.developers.google.cn/articles/ttfb?hl=zh_cn" target="_blank" rel="noopener noreferrer">web上的说明</a></p><p><strong>首字节到达时间(INP)</strong> 指的是请求资源到响应第一个字节开始到达之间的时间。</p><p>TTFB 是以下请求阶段的总和：</p><ol><li>重定向时间</li><li>Service Worker 启动时间（如果适用）</li><li>DNS 查找</li><li>连接和 TLS 协商</li><li>请求，直到响应的第一个字节到达</li></ol><h4 id="在js中衡量ttfb" tabindex="-1"><a class="header-anchor" href="#在js中衡量ttfb"><span>在JS中衡量TTFB</span></a></h4><p>用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Performance_API/Navigation_timing" target="_blank" rel="noopener noreferrer">Navigation Timing API</a> 在浏览器中衡量导航请求的 TTFB。以下示例展示了如何创建一个监听 navigation 条目并将其记录到控制台的 PerformanceObserver：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> PerformanceObserver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">pageNav</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getEntriesByType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;navigation&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`TTFB: </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">pageNav</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">responseStart</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">observe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;navigation&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  buffered</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>web-vitals JavaScript 库还可以更简洁地在浏览器中衡量 TTFB：</p><div class="language-js&#39; line-numbers-mode" data-highlighter="shiki" data-ext="js&#39;" data-title="js&#39;" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>import {onTTFB} from &#39;web-vitals&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// Measure and log TTFB as soon as it&#39;s available.</span></span>
<span class="line"><span>onTTFB(console.log);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tbt-total-blocking-time" tabindex="-1"><a class="header-anchor" href="#tbt-total-blocking-time"><span><strong>TBT:Total Blocking Time</strong></span></a></h3><p><strong>总阻塞时间 (TBT)<strong>指标用于衡量在</strong>First Contentful Paint (FCP)<strong>之后主线程被</strong>阻塞</strong>的时间足以<strong>阻止输入响应</strong>的总时间。</p><div class="hint-container important"><p class="hint-container-title">何时视为阻塞</p><p>当存在<strong>长任务</strong>（<strong>主线程上运行超过 50 毫秒</strong>的任务）时，主线程都会被视为<strong>阻塞</strong>。<br> 我们之所以说主线程处于“阻塞”状态，是因为浏览器无法中断正在执行的任务。因此，如果用户在长时间运行的任务过程中与网页互动，浏览器必须等待任务完成后才能响应。</p><ol><li>给定长任务的阻塞时间是指其超过 50 毫秒的时长。</li><li>网页的<strong>总阻塞时间</strong>是在 FCP 后发生的每项长任务的<strong>阻塞时间的总和。</strong></li></ol></div><h3 id="fmp-first-meaningful-paint" tabindex="-1"><a class="header-anchor" href="#fmp-first-meaningful-paint"><span><strong>FMP:First Meaningful Paint</strong></span></a></h3><div class="hint-container important"><p class="hint-container-title">警告</p><p><strong>Lighthouse 6.0</strong> 已弃用首次有效绘制时间 (FMP)。</p></div><p>首次有意义内容绘制(FMP) 用于衡量网页的主要内容何时对用户可见。从用户发起网页加载到网页呈现主要的页首内容之间的时间（以秒为单位）。</p><div class="hint-container important"><p class="hint-container-title">与FCP的区别</p><p>当网页上渲染的首个内容包含可见区域上的内容时，首次内容渲染 (FCP) 和 FMP 通常相同。<br> 不过，如果 iframe 中包含可见区域上方的内容，这些指标可能会有所不同。FMP 会在用户可见 iframe 中的内容时注册，而 FCP 不包含 iframe 内容。</p></div><h2 id="性能分析工具" tabindex="-1"><a class="header-anchor" href="#性能分析工具"><span>性能分析工具</span></a></h2><h3 id="ligthouse" tabindex="-1"><a class="header-anchor" href="#ligthouse"><span><strong>Ligthouse</strong></span></a></h3><p><a href="https://learn.microsoft.com/zh-cn/microsoft-edge/devtools-guide-chromium/accessibility/lighthouse" target="_blank" rel="noopener noreferrer">Edge上的使用 Lighthouse 测试辅助功能</a></p><p><strong>Ligthouse</strong>可以对网页的各项性能进行评分，并给出相应的建议。<br> chrome和edge提供了<strong>Ligthouse</strong>扩展，可以在DevTool查看。</p><figure><img src="`+h+'" alt="edge开发者工具" tabindex="0" loading="lazy"><figcaption>edge开发者工具</figcaption></figure><h3 id="perfance选项卡" tabindex="-1"><a class="header-anchor" href="#perfance选项卡"><span><strong>perfance选项卡</strong></span></a></h3><h3 id="web-vitals库" tabindex="-1"><a class="header-anchor" href="#web-vitals库"><span>web-vitals库</span></a></h3><p><a href="https://github.com/GoogleChrome/web-vitals" target="_blank" rel="noopener noreferrer">github仓库链接</a><br> web-vitals 是一个轻量级的JavaScript库，它专注于测量核心Web Vitals和其他关键性能指标，确保你的网站在真实用户的设备上表现卓越。</p><p>web-vitals 库约有1.5KB（压缩后），并以模块化的方式提供了所有Web Vitals的测量功能，包括 <strong>Cumulative Layout Shift (CLS)、First Input Delay (FID) 和 Largest Contentful Paint (LCP)</strong>，以及其他有用的诊断性性能指标。通过这个库，你可以精确地跟踪这些指标，即使是在库加载之前发生的性能事件也能准确捕获。</p>',48))])}const c=t(p,[["render",o],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/posts/performance/","title":"性能优化","lang":"zh-CN","frontmatter":{"title":"性能优化","index":false,"icon":"laptop-code","category":["性能优化"],"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/performance/"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"性能优化"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"性能优化\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"性能优化指标","slug":"性能优化指标","link":"#性能优化指标","children":[{"level":3,"title":"FCP:First Contentful Paint","slug":"fcp-first-contentful-paint","link":"#fcp-first-contentful-paint","children":[]},{"level":3,"title":"LCP：Largest Contentful Paint","slug":"lcp-largest-contentful-paint","link":"#lcp-largest-contentful-paint","children":[]},{"level":3,"title":"CLS:Cumulative Layout Shift","slug":"cls-cumulative-layout-shift","link":"#cls-cumulative-layout-shift","children":[]},{"level":3,"title":"FID:First Input Delay","slug":"fid-first-input-delay","link":"#fid-first-input-delay","children":[]},{"level":3,"title":"INP:Interaction to Next Paint","slug":"inp-interaction-to-next-paint","link":"#inp-interaction-to-next-paint","children":[]},{"level":3,"title":"TTFB:Time To First Byte","slug":"ttfb-time-to-first-byte","link":"#ttfb-time-to-first-byte","children":[]},{"level":3,"title":"TBT:Total Blocking Time","slug":"tbt-total-blocking-time","link":"#tbt-total-blocking-time","children":[]},{"level":3,"title":"FMP:First Meaningful Paint","slug":"fmp-first-meaningful-paint","link":"#fmp-first-meaningful-paint","children":[]}]},{"level":2,"title":"性能分析工具","slug":"性能分析工具","link":"#性能分析工具","children":[{"level":3,"title":"Ligthouse","slug":"ligthouse","link":"#ligthouse","children":[]},{"level":3,"title":"perfance选项卡","slug":"perfance选项卡","link":"#perfance选项卡","children":[]},{"level":3,"title":"web-vitals库","slug":"web-vitals库","link":"#web-vitals库","children":[]}]}],"git":{},"readingTime":{"minutes":5.53,"words":1659},"filePathRelative":"posts/performance/README.md","excerpt":""}');export{c as comp,f as data};
