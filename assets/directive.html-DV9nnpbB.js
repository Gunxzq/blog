import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as n,o as l}from"./app-Cpaph37u.js";const o={};function a(d,e){return l(),i("div",null,e[0]||(e[0]=[n('<h1 id="自定义指令" tabindex="-1"><a class="header-anchor" href="#自定义指令"><span>自定义指令</span></a></h1><p>在vue中提供了一套数据驱动视图更为方便的操作，称之为指令</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h2><p>通过Vue.directive方法进行注册<br> 第一个参数是指令的名字，第二个参数可以是对象数据，也可以是一个指令函数<br> 自定义指令也存在钩子函数：</p><ol><li>bind：只调用一次，指令第一次绑定到元素时调用</li><li>inserted：被绑定元素插入父节点时调用</li><li>update：所在组件的Vnode更新时调用，可能发生在其子Vnode更新之前。</li><li>componentUpdated：指令所在的组件Vnode及其子Vnode全部更新后调用</li><li>unbind：只调用一次，指令与元素解绑时调用<br> 钩子函数的参数：</li><li>el：指令绑定的元素，可以操作dom</li><li>binding：包含余下属性的对象 <ol><li>name</li><li>value：绑定值</li><li>oldValue：指令绑定的前一个值，只在update、componentUpdated可使用</li><li>expression：字符串形式的指令表达式</li><li>arg：传给指令的参数，可选</li><li>modifiers：一个包含修饰符的对象</li></ol></li><li>vnode：虚拟节点</li><li>oldVnode：上一个虚拟节点，只在update、componentUpdated可使用</li></ol><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><p>防止表单重复提交<br> 图片懒加载<br> 一键copy的功能</p>',7)]))}const c=t(o,[["render",a],["__file","directive.html.vue"]]),s=JSON.parse('{"path":"/posts/Vue/directive.html","title":"自定义指令","lang":"zh-CN","frontmatter":{"date":"2025-03-13T00:00:00.000Z","category":["JS框架"],"tag":["Vue"],"description":"自定义指令 在vue中提供了一套数据驱动视图更为方便的操作，称之为指令 实现 通过Vue.directive方法进行注册 第一个参数是指令的名字，第二个参数可以是对象数据，也可以是一个指令函数 自定义指令也存在钩子函数： bind：只调用一次，指令第一次绑定到元素时调用 inserted：被绑定元素插入父节点时调用 update：所在组件的Vnode更...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/Vue/directive.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"自定义指令"}],["meta",{"property":"og:description","content":"自定义指令 在vue中提供了一套数据驱动视图更为方便的操作，称之为指令 实现 通过Vue.directive方法进行注册 第一个参数是指令的名字，第二个参数可以是对象数据，也可以是一个指令函数 自定义指令也存在钩子函数： bind：只调用一次，指令第一次绑定到元素时调用 inserted：被绑定元素插入父节点时调用 update：所在组件的Vnode更..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T06:14:43.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2025-03-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-14T06:14:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自定义指令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-14T06:14:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]}],"git":{"createdTime":1752055862000,"updatedTime":1752473683000,"contributors":[{"name":"Gunxzq","username":"Gunxzq","email":"3219988985@qq.com","commits":2,"url":"https://github.com/Gunxzq"}]},"readingTime":{"minutes":1.1,"words":331},"filePathRelative":"posts/Vue/directive.md","localizedDate":"2025年3月13日","excerpt":"\\n<p>在vue中提供了一套数据驱动视图更为方便的操作，称之为指令</p>\\n<h2>实现</h2>\\n<p>通过Vue.directive方法进行注册<br>\\n第一个参数是指令的名字，第二个参数可以是对象数据，也可以是一个指令函数<br>\\n自定义指令也存在钩子函数：</p>\\n<ol>\\n<li>bind：只调用一次，指令第一次绑定到元素时调用</li>\\n<li>inserted：被绑定元素插入父节点时调用</li>\\n<li>update：所在组件的Vnode更新时调用，可能发生在其子Vnode更新之前。</li>\\n<li>componentUpdated：指令所在的组件Vnode及其子Vnode全部更新后调用</li>\\n<li>unbind：只调用一次，指令与元素解绑时调用<br>\\n钩子函数的参数：</li>\\n<li>el：指令绑定的元素，可以操作dom</li>\\n<li>binding：包含余下属性的对象\\n<ol>\\n<li>name</li>\\n<li>value：绑定值</li>\\n<li>oldValue：指令绑定的前一个值，只在update、componentUpdated可使用</li>\\n<li>expression：字符串形式的指令表达式</li>\\n<li>arg：传给指令的参数，可选</li>\\n<li>modifiers：一个包含修饰符的对象</li>\\n</ol>\\n</li>\\n<li>vnode：虚拟节点</li>\\n<li>oldVnode：上一个虚拟节点，只在update、componentUpdated可使用</li>\\n</ol>","autoDesc":true}');export{c as comp,s as data};
