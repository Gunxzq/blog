import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as p,o as l}from"./app-Bqkh5_iM.js";const i="/blog/assets/image-BhUplgF7.png",r={};function T(n,t){return l(),a("div",null,t[0]||(t[0]=[p('<h1 id="http和https" tabindex="-1"><a class="header-anchor" href="#http和https"><span>HTTP和HTTPS</span></a></h1><p>HTTP (HyperText Transfer Protocol)，即超文本运输协议，是实现网络通信的一种规范。即将数据由A传到B或将B传输到A，并且 A 与 B 之间能够存放很多第三方，如： A&lt;=&gt;X&lt;=&gt;Y&lt;=&gt;Z&lt;=&gt;B</p><p>传输的数据并不是计算机底层中的二进制包，而是完整的、有意义的数据，如HTML 文件, 图片文件, 查询结果等超文本，能够被上层应用识别</p><p>在实际应用中，HTTP常被用于在Web浏览器和网站服务器之间传递信息，以<strong>明文方式</strong>发送内容，不提供任何方式的数据加密</p><p>特点如下：</p><ul><li>支持客户/服务器模式</li><li>简单快速：客户向服务器请求服务时，只需传送请求方法和路径。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快</li><li>灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记</li><li>无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间</li><li>无状态：HTTP协议无法根据之前的状态进行本次的请求处理</li></ul><h2 id="https" tabindex="-1"><a class="header-anchor" href="#https"><span>HTTPS</span></a></h2><p>HTTPS出现是为了解决HTTP不安全的特性。<br> 为了保证这些隐私数据能加密传输，让HTTP运行安全的SSL/TLS协议上，即 HTTPS = HTTP + SSL/TLS，通过 SSL证书来验证服务器的身份，并为浏览器和服务器之间的通信进行加密<br> SSL 协议位于 TCP/IP 协议与各种应用层协议之间，浏览器和服务器在使用 SSL 建立连接时需要选择一组恰当的加密算法来实现安全通信，为数据通讯提供安全支持</p><p>流程图如下所示：<br><img src="'+i+'" alt="alt text" loading="lazy"></p><ul><li>首先客户端通过URL访问服务器建立SSL连接</li><li>服务端收到客户端请求后，会将网站支持的证书信息（证书中包含公钥）传送一份给客户端</li><li>客户端的服务器开始协商SSL连接的安全等级，也就是信息加密的等级</li><li>客户端的浏览器根据双方同意的安全等级，建立会话密钥，然后利用网站的公钥将会话密钥加密，并传送给网站</li><li>服务器利用自己的私钥解密出会话密钥</li><li>服务器利用会话密钥加密与客户端之间的通信</li></ul><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别</span></a></h2><ul><li>HTTPS是HTTP协议的安全版本，HTTP协议的数据传输是明文的，是不安全的，HTTPS使用了SSL/TLS协议进行了加密处理，相对更安全</li><li>HTTP 和 HTTPS 使用连接方式不同，默认端口也不一样，HTTP是80，HTTPS是443</li><li>HTTPS 由于需要设计加密以及多次握手，性能方面不如 HTTP</li><li>HTTPS需要SSL，SSL 证书需要钱，功能越强大的证书费用越高</li></ul><h2 id="https为何安全" tabindex="-1"><a class="header-anchor" href="#https为何安全"><span>HTTPS为何安全</span></a></h2><p>HTTP安全隐患：</p><ul><li>通信使用明文（不加密），内容可能被窃听</li><li>不验证通信方的身份，因此有可能遭遇伪装<br> 而HTTPS的出现正是解决这些问题，HTTPS是建立在SSL之上，其安全性由SSL来保证</li></ul><p>在采用SSL后，HTTP就拥有了HTTPS的加密、证书和完整性保护这些功能</p><h3 id="ssl实现" tabindex="-1"><a class="header-anchor" href="#ssl实现"><span>SSL实现</span></a></h3><p>SSL 的实现这些功能主要依赖于以下手段：</p><ul><li>对称加密：采用协商的密钥对数据加密</li><li>非对称加密：实现身份认证和密钥协商</li><li>摘要算法：验证信息的完整性</li><li>数字签名：身份验证</li></ul><h4 id="对称加密" tabindex="-1"><a class="header-anchor" href="#对称加密"><span>对称加密</span></a></h4><p>对称加密指的是加密和解密使用的秘钥都是同一个，是对称的。只要保证了密钥的安全，那整个通信过程就可以说具有了机密性</p><h4 id="非对称加密" tabindex="-1"><a class="header-anchor" href="#非对称加密"><span>非对称加密</span></a></h4><p>非对称加密，存在两个秘钥，一个叫公钥，一个叫私钥。两个秘钥是不同的，公钥可以公开给任何人使用，私钥则需要保密</p><p>公钥和私钥都可以用来加密解密，但公钥加密后只能用私钥解<br> 密，反过来，私钥加密后也只能用公钥解密</p><h4 id="混合加密" tabindex="-1"><a class="header-anchor" href="#混合加密"><span>混合加密</span></a></h4><p>在HTTPS通信过程中，采用的是对称加密+非对称加密，也就是混合加密</p><p>在对称加密中讲到，如果能够保证了密钥的安全，那整个通信过程就可以说具有了机密性</p><p>而HTTPS采用非对称加密解决秘钥交换的问题</p><p>具体做法是发送密文的一方使用对方的公钥进行加密处理“对称的密钥”，然后对方用自己的私钥解密拿到“对称的密钥”</p><p>这样可以确保交换的密钥是安全的前提下，使用对称加密方式进行通信</p><h4 id="摘要算法" tabindex="-1"><a class="header-anchor" href="#摘要算法"><span>摘要算法</span></a></h4><p>实现完整性的手段主要是摘要算法，也就是常说的散列函数、哈希函数</p><p>可以理解成一种特殊的压缩算法，它能够把任意长度的数据“压缩”成固定长度、而且独一无二的“摘要”字符串，就好像是给这段数据生成了一个数字“指纹”</p><p>摘要算法保证了“数字摘要”和原文是完全等价的。所以，我们只要在原文后附上它的摘要，就能够保证数据的完整性</p><h4 id="数字签名" tabindex="-1"><a class="header-anchor" href="#数字签名"><span>数字签名</span></a></h4><p>数字签名能确定消息确实是由发送方签名并发出来的，因为别人假冒不了发送方的签名</p><p>原理其实很简单，就是用私钥加密，公钥解密</p><p>签名和公钥一样完全公开，任何人都可以获取。但这个签名只有用私钥对应的公钥才能解开，拿到摘要后，再比对原文验证完整性，就可以像签署文件一样证明消息确实是你发的</p><p>和消息本身一样，因为谁都可以发布公钥，我们还缺少防止黑客伪造公钥的手段，也就是说，怎么判断这个公钥就是你的公钥</p><p>这时候就需要一个第三方，就是证书验证机构</p><h4 id="ca验证机构" tabindex="-1"><a class="header-anchor" href="#ca验证机构"><span>CA验证机构</span></a></h4><p>数字证书认证机构处于客户端与服务器双方都可信赖的第三方机构的立场</p><p>CA 对公钥的签名认证要求包括序列号、用途、颁发者、有效时间等等，把这些打成一个包再签名，完整地证明公钥关联的各种信息，形成“数字证书”</p><p>流程如下：</p><ul><li>服务器的运营人员向数字证书认证机构提出公开密钥的申请</li><li>数字证书认证机构在判明提出申请者的身份之后，会对已申请的公开密钥做数字签名</li><li>然后分配这个已签名的公开密钥，并将该公开密钥放入公钥证书后绑定在一起</li><li>服务器会将这份由数字证书认证机构颁发的数字证书发送给客户端，以进行非对称加密方式通信</li><li>接到证书的客户端可使用数字证书认证机构的公开密钥，对那张证书上的数字签名进行验证，一旦验证通过，则证明：</li></ul><p>认证服务器的公开密钥的是真实有效的数字证书认证机构<br> 服务器的公开密钥是值得信赖的</p>',46)]))}const h=e(r,[["render",T],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/posts/HTTP/","title":"HTTP和HTTPS","lang":"zh-CN","frontmatter":{"date":"2025-05-01T00:00:00.000Z","order":2,"category":["React"],"tag":["React"],"description":"HTTP和HTTPS HTTP (HyperText Transfer Protocol)，即超文本运输协议，是实现网络通信的一种规范。即将数据由A传到B或将B传输到A，并且 A 与 B 之间能够存放很多第三方，如： A<=>X<=>Y<=>Z<=>B 传输的数据并不是计算机底层中的二进制包，而是完整的、有意义的数据，如HTML 文件, 图片文件, 查...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/HTTP/"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"HTTP和HTTPS"}],["meta",{"property":"og:description","content":"HTTP和HTTPS HTTP (HyperText Transfer Protocol)，即超文本运输协议，是实现网络通信的一种规范。即将数据由A传到B或将B传输到A，并且 A 与 B 之间能够存放很多第三方，如： A<=>X<=>Y<=>Z<=>B 传输的数据并不是计算机底层中的二进制包，而是完整的、有意义的数据，如HTML 文件, 图片文件, 查..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-16T16:32:48.000Z"}],["meta",{"property":"article:tag","content":"React"}],["meta",{"property":"article:published_time","content":"2025-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T16:32:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTP和HTTPS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-16T16:32:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"HTTPS","slug":"https","link":"#https","children":[]},{"level":2,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":2,"title":"HTTPS为何安全","slug":"https为何安全","link":"#https为何安全","children":[{"level":3,"title":"SSL实现","slug":"ssl实现","link":"#ssl实现","children":[]}]}],"git":{"createdTime":1752683568000,"updatedTime":1752683568000,"contributors":[{"name":"Gunxzq","username":"Gunxzq","email":"3219988985@qq.com","commits":1,"url":"https://github.com/Gunxzq"}]},"readingTime":{"minutes":6.52,"words":1957},"filePathRelative":"posts/HTTP/index.md","localizedDate":"2025年5月1日","excerpt":"\\n<p>HTTP (HyperText Transfer Protocol)，即超文本运输协议，是实现网络通信的一种规范。即将数据由A传到B或将B传输到A，并且 A 与 B 之间能够存放很多第三方，如： A&lt;=&gt;X&lt;=&gt;Y&lt;=&gt;Z&lt;=&gt;B</p>\\n<p>传输的数据并不是计算机底层中的二进制包，而是完整的、有意义的数据，如HTML 文件, 图片文件, 查询结果等超文本，能够被上层应用识别</p>\\n<p>在实际应用中，HTTP常被用于在Web浏览器和网站服务器之间传递信息，以<strong>明文方式</strong>发送内容，不提供任何方式的数据加密</p>","autoDesc":true}');export{h as comp,c as data};
