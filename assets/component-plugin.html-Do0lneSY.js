import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as i,o as n}from"./app-o8wfpQUt.js";const l={};function a(p,e){return n(),o("div",null,e[0]||(e[0]=[i('<h1 id="组件和插件的区别" tabindex="-1"><a class="header-anchor" href="#组件和插件的区别"><span>组件和插件的区别</span></a></h1><p>组件是把图形、非图形的各种逻辑均抽象为一个统一的概念来实现的开发模式<br> 优势：</p><ol><li>降低系统的耦合度，保持接口不变的情况下，替换不同的组件快速完成需求</li><li>调试方便，出现问题时可以用排除法直接移除组件、快速定位问题</li><li>提高可维护性，由于每个组件的职责单一，并且组件在系统中是被复用的，使用对代码进行优化可获得系统的整体升级</li></ol><p>插件用来给Vue添加全局功能：</p><ol><li>添加全局方法或属性：vue-custom-element</li><li>添加全局资源：指令、过滤器、过渡，vue-touch</li><li>全局混入来添加一些组件选项：vue-router</li><li>添加Vue实例方法，通过把他们添加到Vue.prototype上实现</li><li>一个库，提供自己的api</li></ol><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别</span></a></h2><p>组件有vue单文件，插件暴露了一个install函数<br> 组件注册有全局注册和局部注册，插件使用Vue.use进行注册</p><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><p>组件是业务模块，插件是功能模块</p>',9)]))}const s=t(l,[["render",a],["__file","component-plugin.html.vue"]]),u=JSON.parse('{"path":"/posts/Vue/component-plugin.html","title":"组件和插件的区别","lang":"zh-CN","frontmatter":{"date":"2025-03-13T00:00:00.000Z","category":["JS框架"],"tag":["Vue"],"description":"组件和插件的区别 组件是把图形、非图形的各种逻辑均抽象为一个统一的概念来实现的开发模式 优势： 降低系统的耦合度，保持接口不变的情况下，替换不同的组件快速完成需求 调试方便，出现问题时可以用排除法直接移除组件、快速定位问题 提高可维护性，由于每个组件的职责单一，并且组件在系统中是被复用的，使用对代码进行优化可获得系统的整体升级 插件用来给Vue添加全局...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/Vue/component-plugin.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"组件和插件的区别"}],["meta",{"property":"og:description","content":"组件和插件的区别 组件是把图形、非图形的各种逻辑均抽象为一个统一的概念来实现的开发模式 优势： 降低系统的耦合度，保持接口不变的情况下，替换不同的组件快速完成需求 调试方便，出现问题时可以用排除法直接移除组件、快速定位问题 提高可维护性，由于每个组件的职责单一，并且组件在系统中是被复用的，使用对代码进行优化可获得系统的整体升级 插件用来给Vue添加全局..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T06:14:43.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2025-03-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-14T06:14:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件和插件的区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-14T06:14:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]}],"git":{"createdTime":1752055862000,"updatedTime":1752473683000,"contributors":[{"name":"Gunxzq","username":"Gunxzq","email":"3219988985@qq.com","commits":2,"url":"https://github.com/Gunxzq"}]},"readingTime":{"minutes":1.03,"words":308},"filePathRelative":"posts/Vue/component-plugin.md","localizedDate":"2025年3月13日","excerpt":"\\n<p>组件是把图形、非图形的各种逻辑均抽象为一个统一的概念来实现的开发模式<br>\\n优势：</p>\\n<ol>\\n<li>降低系统的耦合度，保持接口不变的情况下，替换不同的组件快速完成需求</li>\\n<li>调试方便，出现问题时可以用排除法直接移除组件、快速定位问题</li>\\n<li>提高可维护性，由于每个组件的职责单一，并且组件在系统中是被复用的，使用对代码进行优化可获得系统的整体升级</li>\\n</ol>\\n<p>插件用来给Vue添加全局功能：</p>\\n<ol>\\n<li>添加全局方法或属性：vue-custom-element</li>\\n<li>添加全局资源：指令、过滤器、过渡，vue-touch</li>\\n<li>全局混入来添加一些组件选项：vue-router</li>\\n<li>添加Vue实例方法，通过把他们添加到Vue.prototype上实现</li>\\n<li>一个库，提供自己的api</li>\\n</ol>","autoDesc":true}');export{s as comp,u as data};
