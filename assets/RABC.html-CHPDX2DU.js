import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as t,o}from"./app-Cpaph37u.js";const n={};function r(a,l){return o(),e("div",null,l[0]||(l[0]=[t('<h1 id="vue权限管理" tabindex="-1"><a class="header-anchor" href="#vue权限管理"><span>vue权限管理</span></a></h1><p>权限控制，确保用户只能访问到被分配的资源<br> 前端权限归根结底是请求的发起权，页面加载触发、按钮点击触发</p><p>可以分为四个方面：</p><ol><li>接口权限<br> jwt验证</li><li>按钮权限 <ol><li>v-if</li><li>自定义指令</li></ol></li><li>菜单权限 <ol><li>菜单与路由分离，菜单由后端返回，缺点：菜单与路由做一一对应，全局路由守卫里，每次路由跳转都要做判断</li><li>菜单和路由都有后端返回，缺点：全局路由守卫里，每次路由跳转都要做判断；前后端配合要求更高</li></ol></li><li>路由权限 <ol><li>在路由上标记相应的权限信息，每次路由跳转前做校验</li><li>四种缺点： <ol><li>如果路由很多，对性能会有影响</li><li>全局路由守卫里，每次路由跳转都要做权限判断</li><li>菜单信息写死在前端，要改个文字或权限信息，都需要重新编译</li><li>菜单和路由耦合在一起，定义路由的时候还有添加菜单显示标题，图表之类的信息，而且路由不一定作为菜单显示，还需要更多的字段进行标识</li></ol></li><li>初始化，先挂在不需要权限控制的路由，用户登陆后，获取用户的权限信息，筛选出有权限的路由，在全局路由守卫中调用addRoutes添加路由</li><li>缺点： <ol><li>全局守卫里，每次路由跳转都要做判断</li><li>菜单信息写死在前端，要改个文字或权限信息，都需要重新编译</li><li>菜单和路由耦合在一起，定义路由的时候还有添加菜单显示标题，图表之类的信息，而且路由不一定作为菜单显示，还需要更多的的字段进行标识</li></ol></li></ol></li></ol>',4)]))}const s=i(n,[["render",r],["__file","RABC.html.vue"]]),m=JSON.parse('{"path":"/posts/Vue/RABC.html","title":"vue权限管理","lang":"zh-CN","frontmatter":{"date":"2025-03-13T00:00:00.000Z","category":["JS框架"],"tag":["Vue"],"description":"vue权限管理 权限控制，确保用户只能访问到被分配的资源 前端权限归根结底是请求的发起权，页面加载触发、按钮点击触发 可以分为四个方面： 接口权限 jwt验证 按钮权限 v-if 自定义指令 菜单权限 菜单与路由分离，菜单由后端返回，缺点：菜单与路由做一一对应，全局路由守卫里，每次路由跳转都要做判断 菜单和路由都有后端返回，缺点：全局路由守卫里，每次路...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/Vue/RABC.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"vue权限管理"}],["meta",{"property":"og:description","content":"vue权限管理 权限控制，确保用户只能访问到被分配的资源 前端权限归根结底是请求的发起权，页面加载触发、按钮点击触发 可以分为四个方面： 接口权限 jwt验证 按钮权限 v-if 自定义指令 菜单权限 菜单与路由分离，菜单由后端返回，缺点：菜单与路由做一一对应，全局路由守卫里，每次路由跳转都要做判断 菜单和路由都有后端返回，缺点：全局路由守卫里，每次路..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T06:14:43.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2025-03-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-14T06:14:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue权限管理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-14T06:14:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1752055862000,"updatedTime":1752473683000,"contributors":[{"name":"Gunxzq","username":"Gunxzq","email":"3219988985@qq.com","commits":2,"url":"https://github.com/Gunxzq"}]},"readingTime":{"minutes":1.67,"words":501},"filePathRelative":"posts/Vue/RABC.md","localizedDate":"2025年3月13日","excerpt":"\\n<p>权限控制，确保用户只能访问到被分配的资源<br>\\n前端权限归根结底是请求的发起权，页面加载触发、按钮点击触发</p>\\n<p>可以分为四个方面：</p>\\n<ol>\\n<li>接口权限<br>\\njwt验证</li>\\n<li>按钮权限\\n<ol>\\n<li>v-if</li>\\n<li>自定义指令</li>\\n</ol>\\n</li>\\n<li>菜单权限\\n<ol>\\n<li>菜单与路由分离，菜单由后端返回，缺点：菜单与路由做一一对应，全局路由守卫里，每次路由跳转都要做判断</li>\\n<li>菜单和路由都有后端返回，缺点：全局路由守卫里，每次路由跳转都要做判断；前后端配合要求更高</li>\\n</ol>\\n</li>\\n<li>路由权限\\n<ol>\\n<li>在路由上标记相应的权限信息，每次路由跳转前做校验</li>\\n<li>四种缺点：\\n<ol>\\n<li>如果路由很多，对性能会有影响</li>\\n<li>全局路由守卫里，每次路由跳转都要做权限判断</li>\\n<li>菜单信息写死在前端，要改个文字或权限信息，都需要重新编译</li>\\n<li>菜单和路由耦合在一起，定义路由的时候还有添加菜单显示标题，图表之类的信息，而且路由不一定作为菜单显示，还需要更多的字段进行标识</li>\\n</ol>\\n</li>\\n<li>初始化，先挂在不需要权限控制的路由，用户登陆后，获取用户的权限信息，筛选出有权限的路由，在全局路由守卫中调用addRoutes添加路由</li>\\n<li>缺点：\\n<ol>\\n<li>全局守卫里，每次路由跳转都要做判断</li>\\n<li>菜单信息写死在前端，要改个文字或权限信息，都需要重新编译</li>\\n<li>菜单和路由耦合在一起，定义路由的时候还有添加菜单显示标题，图表之类的信息，而且路由不一定作为菜单显示，还需要更多的的字段进行标识</li>\\n</ol>\\n</li>\\n</ol>\\n</li>\\n</ol>","autoDesc":true}');export{s as comp,m as data};
