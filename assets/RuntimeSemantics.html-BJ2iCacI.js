import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as o,o as r}from"./app-BV1qhzpx.js";const i={};function a(l,t){return r(),n("div",null,t[0]||(t[0]=[o('<h1 id="运行时语义-runtime-semantics" tabindex="-1"><a class="header-anchor" href="#运行时语义-runtime-semantics"><span><strong>运行时语义：Runtime Semantics</strong></span></a></h1><p>在运行时调用的算法(指定语义)称为<em>运行时语义</em>。运行时语义由<strong>抽象操作</strong>(abstract operations)或<strong>语法导向操作</strong>(Syntax-Directed Operations)定义。</p><p>以下的是一般运行时语义。</p><h2 id="完成-completion" tabindex="-1"><a class="header-anchor" href="#完成-completion"><span><strong>完成：Completion</strong></span></a></h2><p>抽象操作完成接受参数<strong>completionRecord</strong>（一个完成记录），并返回一个完成记录(规范类型)。此操作用于强调正在返回一个完成记录。在被调用时，它执行以下步骤：</p><div class="hint-container important"><p class="hint-container-title">完成语义的一个雷子</p><ol><li>Assert: <em>completionRecord</em> is a Completion Record.</li><li><strong>Return</strong> <em>completionRecord</em>.</li></ol></div><h2 id="抛出异常-throw-an-exception" tabindex="-1"><a class="header-anchor" href="#抛出异常-throw-an-exception"><span><strong>抛出异常：Throw an Exception</strong></span></a></h2><p>步骤中提到抛出异常的，如：</p><ol><li>Throw a <strong>TypeError</strong> exception.</li></ol><p>意味着与以下内容相同：</p><ol><li>Return ThrowCompletion(a newly created <strong>TypeError</strong> object).<br> :::</li></ol><h2 id="returnifabrupt" tabindex="-1"><a class="header-anchor" href="#returnifabrupt"><span><strong>ReturnIfAbrupt</strong></span></a></h2><p><strong>ReturnIfAbrup</strong>t这是一个简写的步骤。算法步骤中提到或等同于以下内容：</p><ol><li>ReturnIfAbrupt(argument)。<br> 意味着</li><li>Assert：<em>argument</em> is a Completion Record。</li><li>If <em>argument</em> is a abrupt completion，return Completion(<em>argument</em>)。</li><li>Else, set <em>argument</em> 设置为 <em>argument</em>.[[Value]]。</li></ol><div class="hint-container important"><p class="hint-container-title">重要</p><p>他的简短含义是：</p><ol><li>如果完成记录(步骤1)一个 硬性完成(步骤2)，返回这个完成记录。</li><li>否则，完成记录是一个正常完成(步骤3)，将argument 设置为它真正的值。</li></ol></div><h2 id="符号-returnifabrupt-简写" tabindex="-1"><a class="header-anchor" href="#符号-returnifabrupt-简写"><span><strong>?符号:ReturnIfAbrupt 简写</strong></span></a></h2><p>在抽象操作和语法导向操作调用时，前缀为?表示应用ReturnIfAbrupt。</p><ol><li><ol><li>? OperationName().<br> 等同于以下步骤：</li></ol></li><li><ol><li>ReturnIfAbrupt(OperationName())。</li></ol></li></ol><h2 id="符号" tabindex="-1"><a class="header-anchor" href="#符号"><span><strong>!符号</strong></span></a></h2><div class="hint-container important"><p class="hint-container-title">重要</p><p>前缀 <strong>!</strong> 用来表示<strong>抽象操作</strong>或<strong>语法导向操作</strong>的调用绝不会返回一个<strong>abrupt completion</strong>，并且结果中的完成记录的[[Value]]字段应当代替操作的返回值使用。</p></div><ol><li>Let <em>val</em> be ! OperationName().<br> 等同于以下步骤：</li><li>Let <em>val</em> be OperationName().</li><li>Assert: <em>val</em> is a normal completion.</li><li>Set <em>val</em> to <em>val</em>.[[Value]].</li></ol><h2 id="隐式正常完成-implicit-normal-completion" tabindex="-1"><a class="header-anchor" href="#隐式正常完成-implicit-normal-completion"><span><strong>隐式正常完成:Implicit Normal Completion</strong></span></a></h2><p>在标准中声明的返回完成记录的抽象操作和所有内置函数中，返回的值传递给NormalCompletion，并使用其结果。<br> 在以下情况不适用：</p><ol><li>直接返回应用Completion、NormalCompletion或ThrowCompletion的结果时。</li><li>直接返回构建一个完成记录的结果时。</li></ol><div class="hint-container important"><p class="hint-container-title">重要</p><p>言外之意，一般情况下只要不是 <strong>abrupt completion</strong>,都是<strong>NormalCompletion</strong>。</p></div>',25)]))}const m=e(i,[["render",a],["__file","RuntimeSemantics.html.vue"]]),c=JSON.parse('{"path":"/posts/ECMA/Operate/RuntimeSemantics.html","title":"运行时语义：Runtime Semantics","lang":"zh-CN","frontmatter":{"date":"2025-02-01T00:00:00.000Z","order":2,"category":["ECMA标准"],"description":"运行时语义：Runtime Semantics 在运行时调用的算法(指定语义)称为运行时语义。运行时语义由抽象操作(abstract operations)或语法导向操作(Syntax-Directed Operations)定义。 以下的是一般运行时语义。 完成：Completion 抽象操作完成接受参数completionRecord（一个完成记录...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/ECMA/Operate/RuntimeSemantics.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"运行时语义：Runtime Semantics"}],["meta",{"property":"og:description","content":"运行时语义：Runtime Semantics 在运行时调用的算法(指定语义)称为运行时语义。运行时语义由抽象操作(abstract operations)或语法导向操作(Syntax-Directed Operations)定义。 以下的是一般运行时语义。 完成：Completion 抽象操作完成接受参数completionRecord（一个完成记录..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2025-02-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"运行时语义：Runtime Semantics\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"完成：Completion","slug":"完成-completion","link":"#完成-completion","children":[]},{"level":2,"title":"抛出异常：Throw an Exception","slug":"抛出异常-throw-an-exception","link":"#抛出异常-throw-an-exception","children":[]},{"level":2,"title":"ReturnIfAbrupt","slug":"returnifabrupt","link":"#returnifabrupt","children":[]},{"level":2,"title":"?符号:ReturnIfAbrupt 简写","slug":"符号-returnifabrupt-简写","link":"#符号-returnifabrupt-简写","children":[]},{"level":2,"title":"!符号","slug":"符号","link":"#符号","children":[]},{"level":2,"title":"隐式正常完成:Implicit Normal Completion","slug":"隐式正常完成-implicit-normal-completion","link":"#隐式正常完成-implicit-normal-completion","children":[]}],"git":{},"readingTime":{"minutes":1.88,"words":565},"filePathRelative":"posts/ECMA/Operate/RuntimeSemantics.md","localizedDate":"2025年2月1日","excerpt":"\\n<p>在运行时调用的算法(指定语义)称为<em>运行时语义</em>。运行时语义由<strong>抽象操作</strong>(abstract operations)或<strong>语法导向操作</strong>(Syntax-Directed Operations)定义。</p>\\n<p>以下的是一般运行时语义。</p>\\n<h2><strong>完成：Completion</strong></h2>\\n<p>抽象操作完成接受参数<strong>completionRecord</strong>（一个完成记录），并返回一个完成记录(规范类型)。此操作用于强调正在返回一个完成记录。在被调用时，它执行以下步骤：</p>","autoDesc":true}');export{m as comp,c as data};
