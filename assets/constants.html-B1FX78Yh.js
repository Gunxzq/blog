import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as a,o as n}from"./app-C9qP9JtV.js";const e={};function l(h,i){return n(),t("div",null,i[0]||(i[0]=[a(`<h1 id="常量" tabindex="-1"><a class="header-anchor" href="#常量"><span>常量</span></a></h1><p>可以使用 const 关键字或 define() 函数两种方法来定义一个常量。个常量一旦被定义，就不能再改变或者取消定义。</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>在 PHP 8.0.0 之前，使用 define() 定义的常量可能不区分大小写且可以包含保留字或非常规名称的常量。<br> 这类常量可以通过 constant() 函数来获取名称，但是非常不推荐这种用法。</p></div><ol><li>常量不需要使用 <mark>$</mark> 来访问。</li><li>如果常量名是动态的，也可以用函数 constant() 来获取常量的值。</li><li>用 get_defined_constants() 可以获得所有已定义的常量列表。</li><li>如果要检查是否定义了某常量，请使用 defined() 函数。</li></ol><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">define</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CONSTANT&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello world.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> CONSTANT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 输出 &quot;Hello world.&quot;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> Constant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 抛出错误：未定义的常量 &quot;Constant&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               // 在 PHP 8.0.0 之前，输出 &quot;Constant&quot; 并发出一个提示级别错误信息</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 简单的标量值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> CONSTANT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Hello World&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// .是替代性的 字符连接符号</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> ANOTHER_CONST</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> CONSTANT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;; Goodbye World&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 常量数组</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">define</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ANIMALS&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;dog&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;cat&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;bird&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>和使用 define() 来定义常量相反的是，使用 const 关键字定义常量必须处于最顶端的作用域，因为用此方法是在编译时定义的。这就意味着不能在函数内，循环内以及 if 或 try/catch 语句之内用 const 来定义常量。</p></div><h2 id="预定义常量" tabindex="-1"><a class="header-anchor" href="#预定义常量"><span>预定义常量</span></a></h2><p>PHP 向它运行的任何脚本提供了大量的预定义常量。不过很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。</p><h2 id="魔术常量" tabindex="-1"><a class="header-anchor" href="#魔术常量"><span>魔术常量</span></a></h2><p>一些魔术常量会根据使用位置而变化。例如 _<em>LINE</em>_ 的值取决于它在脚本中使用的行。所有这些“魔术”常量都在编译时解析，而常规常量则在运行时解析。这些特殊的常量不区分大小写，如下：</p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>_<em>LINE</em>_</td><td>文件中的当前行号。</td></tr><tr><td>_<em>FILE</em>_</td><td>文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。</td></tr><tr><td>_<em>DIR</em>_</td><td>文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。它等价于 dirname(_<em>FILE</em>_)。除非是根目录，否则目录中名不包括末尾的斜杠。</td></tr><tr><td>_<em>FUNCTION</em>_</td><td>当前函数的名称。匿名函数则为 {closure}。</td></tr><tr><td>_<em>CLASS</em>_</td><td>当前类的名称。类名包括其被声明的作用域（例如 Foo\\Bar）。当用在 trait 方法中时，_<em>CLASS</em>_ 是调用 trait 方法的类的名字。</td></tr><tr><td>_<em>TRAIT</em>_</td><td>Trait 的名字。Trait 名包括其被声明的作用域（例如 Foo\\Bar）。</td></tr><tr><td>_<em>METHOD</em>_</td><td>类的方法名。</td></tr><tr><td>_<em>PROPERTY</em>_</td><td>仅在属性挂钩内有效。等同于属性的名称。</td></tr><tr><td>_<em>NAMESPACE</em>_</td><td>当前命名空间的名称。</td></tr><tr><td>ClassName::class</td><td>完整的类名。</td></tr></tbody></table>`,11)]))}const p=s(e,[["render",l],["__file","constants.html.vue"]]),o=JSON.parse('{"path":"/posts/PHP/constants.html","title":"常量","lang":"zh-CN","frontmatter":{"date":"2025-04-11T00:00:00.000Z","order":2,"category":["PHP"],"tag":["PHP"],"description":"常量 可以使用 const 关键字或 define() 函数两种方法来定义一个常量。个常量一旦被定义，就不能再改变或者取消定义。 重要 在 PHP 8.0.0 之前，使用 define() 定义的常量可能不区分大小写且可以包含保留字或非常规名称的常量。 这类常量可以通过 constant() 函数来获取名称，但是非常不推荐这种用法。 常量不需要使用 $...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/PHP/constants.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"常量"}],["meta",{"property":"og:description","content":"常量 可以使用 const 关键字或 define() 函数两种方法来定义一个常量。个常量一旦被定义，就不能再改变或者取消定义。 重要 在 PHP 8.0.0 之前，使用 define() 定义的常量可能不区分大小写且可以包含保留字或非常规名称的常量。 这类常量可以通过 constant() 函数来获取名称，但是非常不推荐这种用法。 常量不需要使用 $..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-09T10:11:02.000Z"}],["meta",{"property":"article:tag","content":"PHP"}],["meta",{"property":"article:published_time","content":"2025-04-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-09T10:11:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常量\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-11T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-09T10:11:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"预定义常量","slug":"预定义常量","link":"#预定义常量","children":[]},{"level":2,"title":"魔术常量","slug":"魔术常量","link":"#魔术常量","children":[]}],"git":{"createdTime":1744353399000,"updatedTime":1752055862000,"contributors":[{"name":"GUNxzq","username":"GUNxzq","email":"3219988985@qq.com","commits":1,"url":"https://github.com/GUNxzq"},{"name":"Gunxzq","username":"Gunxzq","email":"3219988985@qq.com","commits":1,"url":"https://github.com/Gunxzq"}]},"readingTime":{"minutes":2.48,"words":744},"filePathRelative":"posts/PHP/constants.md","localizedDate":"2025年4月11日","excerpt":"\\n<p>可以使用 const 关键字或 define() 函数两种方法来定义一个常量。个常量一旦被定义，就不能再改变或者取消定义。</p>\\n<div class=\\"hint-container important\\">\\n<p class=\\"hint-container-title\\">重要</p>\\n<p>在 PHP 8.0.0 之前，使用 define() 定义的常量可能不区分大小写且可以包含保留字或非常规名称的常量。<br>\\n这类常量可以通过 constant() 函数来获取名称，但是非常不推荐这种用法。</p>\\n</div>\\n<ol>\\n<li>常量不需要使用 <mark>$</mark> 来访问。</li>\\n<li>如果常量名是动态的，也可以用函数 constant() 来获取常量的值。</li>\\n<li>用 get_defined_constants() 可以获得所有已定义的常量列表。</li>\\n<li>如果要检查是否定义了某常量，请使用 defined() 函数。</li>\\n</ol>","autoDesc":true}');export{p as comp,o as data};
