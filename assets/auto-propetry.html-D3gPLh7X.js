import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as s,o as a}from"./app-Cpaph37u.js";const r="/blog/assets/image-6-uihAWXvB.png",n="/blog/assets/image-7-DxX2-9UK.png",p="/blog/assets/image-8-DiT4A245.png",o={};function l(h,e){return a(),i("div",null,e[0]||(e[0]=[s('<h1 id="动态添加属性的问题" tabindex="-1"><a class="header-anchor" href="#动态添加属性的问题"><span>动态添加属性的问题</span></a></h1><p>通过函数运行时的为组件添加属性，页面不会触发更新</p><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><p>vue2使用object.defineProperty实现的数据响应式，由此可见对定义时存在的属性都进行这样的操作<br><img src="'+r+'" alt="alt text" loading="lazy"><br> 新增的属性自然不具备响应式</p><h2 id="解决" tabindex="-1"><a class="header-anchor" href="#解决"><span>解决</span></a></h2><p>若想实现数据与视图更新<br> Vue.set()向一个响应式对象中添加一个property，并确保这个新的property同样是响应式的<br> defineReactive新增属性的响应式<br><img src="'+n+'" alt="alt text" loading="lazy"><br><img src="'+p+'" alt="alt text" loading="lazy"><br> Object.assign()<br> 创建一个新的对象，合并原对象和混入对象的属性</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">someObject</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">assign</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({},</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">someObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">newProperty1</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><em>$forceUpdated()</em><br> 当需要做强制更新，九成的情况是，在某个地方写错了迫使Vue实例重新渲染，只影响实例本身和使用插槽的子组件。</p>',8)]))}const m=t(o,[["render",l],["__file","auto-propetry.html.vue"]]),g=JSON.parse('{"path":"/posts/Vue/auto-propetry.html","title":"动态添加属性的问题","lang":"zh-CN","frontmatter":{"date":"2025-03-13T00:00:00.000Z","category":["JS框架"],"tag":["Vue"],"description":"动态添加属性的问题 通过函数运行时的为组件添加属性，页面不会触发更新 原理 vue2使用object.defineProperty实现的数据响应式，由此可见对定义时存在的属性都进行这样的操作 alt text 新增的属性自然不具备响应式 解决 若想实现数据与视图更新 Vue.set()向一个响应式对象中添加一个property，并确保这个新的prope...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/Vue/auto-propetry.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"动态添加属性的问题"}],["meta",{"property":"og:description","content":"动态添加属性的问题 通过函数运行时的为组件添加属性，页面不会触发更新 原理 vue2使用object.defineProperty实现的数据响应式，由此可见对定义时存在的属性都进行这样的操作 alt text 新增的属性自然不具备响应式 解决 若想实现数据与视图更新 Vue.set()向一个响应式对象中添加一个property，并确保这个新的prope..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-14T06:14:43.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2025-03-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-14T06:14:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动态添加属性的问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-14T06:14:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xzq\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"解决","slug":"解决","link":"#解决","children":[]}],"git":{"createdTime":1752055862000,"updatedTime":1752473683000,"contributors":[{"name":"Gunxzq","username":"Gunxzq","email":"3219988985@qq.com","commits":2,"url":"https://github.com/Gunxzq"}]},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"posts/Vue/auto-propetry.md","localizedDate":"2025年3月13日","excerpt":"\\n<p>通过函数运行时的为组件添加属性，页面不会触发更新</p>\\n<h2>原理</h2>\\n<p>vue2使用object.defineProperty实现的数据响应式，由此可见对定义时存在的属性都进行这样的操作<br>\\n<br>\\n新增的属性自然不具备响应式</p>\\n<h2>解决</h2>\\n<p>若想实现数据与视图更新<br>\\nVue.set()向一个响应式对象中添加一个property，并确保这个新的property同样是响应式的<br>\\ndefineReactive新增属性的响应式<br>\\n<br>\\n<br>\\nObject.assign()<br>\\n创建一个新的对象，合并原对象和混入对象的属性</p>","autoDesc":true}');export{m as comp,g as data};
