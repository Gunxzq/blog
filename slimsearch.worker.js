[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class F{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const h=r*i;t:for(const u of e.keys())if(u===_){const d=o[h-1];d<=s&&n.set(c,[e.get(u),d])}else{let d=r;for(let a=0;a<u.length;++a,++d){const m=u[a],g=i*d,y=g-i;let l=o[g];const f=Math.max(0,d-s-1),w=Math.min(i-1,d+s);for(let p=f;p<w;++p){const C=m!==t[p],S=o[y+p]+ +C,I=o[y+p+1]+1,x=o[g+p]+1,k=o[g+p+1]=Math.min(S,I,x);k<l&&(l=k)}if(l>s)continue t}q(e.get(u),t,s,n,o,d,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=M(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new F(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=v(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return v(this._tree,t)?.has(_)??!1}keys(){return new F(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new F(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const M=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),M(e.get(n),t.slice(n.length),s);return s.push([e,t]),M(void 0,"",s)},v=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return v(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const h=e.get(r);if(c===r.length)e=h;else{const u=new Map;u.set(r.slice(c),h),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=M(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",dt=(e,t)=>{e.includes(t)||e.push(t)},B=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,ht=()=>new Map,O=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),B(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);B(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},lt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:h}=r;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-c+c*n/o)))},ft=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},at=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,ht),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,h,u=new Map)=>{if(r==null)return u;for(const d of Object.keys(i)){const a=i[d],m=e._fieldIds[d],g=r.get(m);if(g==null)continue;let y=g.size;const l=e._avgFieldLength[m];for(const f of g.keys()){if(!e._documentIds.has(f)){at(e,m,f,s),y-=1;continue}const w=c?c(e._documentIds.get(f),s,e._storedFields.get(f)):1;if(!w)continue;const p=g.get(f),C=e._fieldLength.get(f)[m],S=lt(p,y,e._documentCount,C,l,h),I=n*o*a*w*S,x=u.get(f);if(x){x.score+=I,dt(x.terms,t);const k=G(x.match,s);k?k.push(d):x.match[s]=[d]}else u.set(f,{score:I,terms:[t],match:{[s]:[d]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:h}=n,{fuzzy:u,prefix:d}={...Y.weights,...i},a=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,a,o,r,h);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(c,Math.round(t.term.length*l)):l;f&&(y=e._index.fuzzyGet(t.term,f))}if(g)for(const[l,f]of g){const w=l.length-t.term.length;if(!w)continue;y?.delete(l);const p=d*l.length/(l.length+.3*w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}if(y)for(const l of y.keys()){const[f,w]=y.get(l);if(!w)continue;const p=u*l.length/(l.length+w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const d={...s,...t,queries:void 0},a=t.queries.map(m=>X(e,m,d));return Q(a,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:h}=i,u=c(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>xt(e,d,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:h,terms:u,match:d}]of r){const a=u.length||1,m={id:e._documentIds.get(c),score:h*a,terms:Object.keys(d),queryTerms:u,match:d};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(P),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),h=n.get(c);h!=null?(h.score+=r,h.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:h}]of n)o.push({suggestion:r,terms:c,score:i/h});return o.sort(P),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const kt=e=>new bt(e),It=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=kt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},Mt=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=It(e,t);i._documentIds=O(n),i._fieldLength=O(o),i._storedFields=O(r);for(const[c,h]of i._documentIds)i._idToShortId.set(h,c);for(const[c,h]of s){const u=new Map;for(const d of Object.keys(h))u.set(parseInt(d,10),O(h[d]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,d=!1)=>{let a;i===0?a=u.length>20?`… ${u.slice(-20)}`:u:d?a=u.length+i>100?`${u.slice(0,100-i)}… `:u:a=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,a&&o.push(a),i+=a.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,r);if(h===-1)return null;for(;h>=0;){const u=h+n.length;if(c(e.slice(r,h)),r=u,i>100)break;h=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Ot=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ct=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,h=r.includes("@"),u=r.includes("#"),[d,a]=r.split(/[#@]/),m=Number(d),g=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(w=>!w.includes(l))),{contents:y}=n[m]??={title:"",contents:[]};if(h)y.push([{type:"customField",id:m,index:a,display:g.map(l=>o.c.map(f=>V(f,l))).flat().filter(l=>l!==null)},c]);else{const l=g.map(f=>V(o.h,f)).filter(f=>f!==null);if(l.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:a},display:l},c]),"t"in o&&o.t)for(const f of o.t){const w=g.map(p=>V(f,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:a},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Ot(o,r):Ct(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},St=st($(JSON.parse("{\"/\":{\"documentCount\":253,\"nextId\":253,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"2#agent-程序的执行环境\",\"3\":\"2#执行上下文栈-调用栈\",\"4\":\"2#执行上下文-代码的执行环境\",\"5\":\"2#realm-执行所需的资源总和\",\"6\":\"2@0\",\"7\":\"3\",\"8\":\"3#宿主提供的资源\",\"9\":\"3#宿主内置对象\",\"10\":\"3#宿主对全局对象的扩展\",\"11\":\"3@0\",\"12\":\"4\",\"13\":\"4#初始化realm环境-initializehostdefinedrealm\",\"14\":\"4#解析脚本\",\"15\":\"4#脚本求值\",\"16\":\"4#全局声明实例化\",\"17\":\"4@0\",\"18\":\"5\",\"19\":\"5@0\",\"20\":\"6\",\"21\":\"6#环境记录器\",\"22\":\"6#声明式环境记录\",\"23\":\"6#函数环境记录\",\"24\":\"6#模块环境记录\",\"25\":\"6#对象环境记录\",\"26\":\"6#全局环境记录器\",\"27\":\"6#作用域的分析\",\"28\":\"6#块级求值\",\"29\":\"6#blockdeclarationinstantiation\",\"30\":\"6#for求值\",\"31\":\"6#for求值-1\",\"32\":\"6#函数求值\",\"33\":\"6#闭包\",\"34\":\"6@0\",\"35\":\"7\",\"36\":\"7#产生式、非终结-production\",\"37\":\"7#文法参数-grammatical-parameters\",\"38\":\"7#伪代码\",\"39\":\"7@0\",\"40\":\"8\",\"41\":\"8#分类\",\"42\":\"8#本地版本控制系统\",\"43\":\"8#集中式版本控制系统\",\"44\":\"8#svn\",\"45\":\"8#cvs\",\"46\":\"8#分布式版本控制系统\",\"47\":\"8#git\",\"48\":\"8#hg\",\"49\":\"8#git-1\",\"50\":\"8#工作原理\",\"51\":\"8#命令\",\"52\":\"8#配置命令\",\"53\":\"8#启动命令\",\"54\":\"8#日常基本操作\",\"55\":\"8#分支操作\",\"56\":\"8@0\",\"57\":\"9\",\"58\":\"9@0\",\"59\":\"10\",\"60\":\"10#组件通信\",\"61\":\"10#data属性为何是一个函数\",\"62\":\"10#区别\",\"63\":\"10#原理\",\"64\":\"10#动态添加属性的问题\",\"65\":\"10#原理-1\",\"66\":\"10#解决\",\"67\":\"10#v-if和v-for的优先级\",\"68\":\"10#注意\",\"69\":\"10#v-if和v-show\",\"70\":\"10#原理-2\",\"71\":\"10#key的作用\",\"72\":\"10#原理-3\",\"73\":\"10#mixin\",\"74\":\"10#注意-1\",\"75\":\"10#源码\",\"76\":\"10#修饰符\",\"77\":\"10#nexttick\",\"78\":\"10#场景\",\"79\":\"10#实例挂载过程\",\"80\":\"10#结论\",\"81\":\"10#diff算法\",\"82\":\"10#原理-4\",\"83\":\"10#总结\",\"84\":\"10#组件和插件的区别\",\"85\":\"10#区别-1\",\"86\":\"10#场景-1\",\"87\":\"10#跨域问题\",\"88\":\"10#方法\",\"89\":\"10#自定义指令\",\"90\":\"10#实现\",\"91\":\"10#场景-2\",\"92\":\"10#过滤器\",\"93\":\"10#使用\",\"94\":\"10#定义\",\"95\":\"10#应用场景\",\"96\":\"10#原理-5\",\"97\":\"10#slot\",\"98\":\"10#场景-3\",\"99\":\"10#分类\",\"100\":\"10#原理-6\",\"101\":\"10#虚拟dom\",\"102\":\"10#为什么需要\",\"103\":\"10#错误处理\",\"104\":\"10#vue权限管理\",\"105\":\"10#keep-alive\",\"106\":\"10#场景-4\",\"107\":\"10#获取缓存后组件的数据\",\"108\":\"10#spa\",\"109\":\"10#部署到服务器后404\",\"110\":\"10#vue3\",\"111\":\"10#新特性\",\"112\":\"10#vue3优化\",\"113\":\"10#响应式系统\",\"114\":\"10@0\",\"115\":\"11\",\"116\":\"11#生命周期\",\"117\":\"11#执行过程\",\"118\":\"11#登录流程\",\"119\":\"11#检验登录状态是否过期\",\"120\":\"11#路由跳转\",\"121\":\"11#跳转方式\",\"122\":\"11#发布流程\",\"123\":\"11#支付流程\",\"124\":\"11#实现原理\",\"125\":\"11#通信\",\"126\":\"11#运行机制\",\"127\":\"11#优化手段\",\"128\":\"11#加载\",\"129\":\"11#渲染\",\"130\":\"11@0\",\"131\":\"12\",\"132\":\"12#防抖-debounce\",\"133\":\"12#最佳实践\",\"134\":\"12#应用场景\",\"135\":\"12#节流-throttle\",\"136\":\"12#最佳实践-1\",\"137\":\"12#应用场景-1\",\"138\":\"12#事件委托-事件代理-event-delegation\",\"139\":\"12#最佳实践-2\",\"140\":\"12#应用场景-2\",\"141\":\"12#分时函数\",\"142\":\"12@0\",\"143\":\"12@1\",\"144\":\"13\",\"145\":\"13#按需加载-lazy-loading、on-demand-loading\",\"146\":\"13#动态导入模块\",\"147\":\"13#代码分割、分包\",\"148\":\"13#延迟加载、懒加载\",\"149\":\"13#html5的loading属性\",\"150\":\"13#intersection-observer-api\",\"151\":\"13#http缓存\",\"152\":\"13#强缓存\",\"153\":\"13#expires标头\",\"154\":\"13#cahe-control标头\",\"155\":\"13#协商缓存\",\"156\":\"13#last-modified-if-modified-since-上一次的修改时间\",\"157\":\"13#etag-if-none-match-文件指纹\",\"158\":\"13#浏览器缓存\",\"159\":\"13#dns缓存\",\"160\":\"13#cdn缓存\",\"161\":\"13@0\",\"162\":\"13@1\",\"163\":\"14\",\"164\":\"14@0\",\"165\":\"15\",\"166\":\"15#gizp压缩\",\"167\":\"15#配置流程\",\"168\":\"15#最佳实践\",\"169\":\"15#图片优化\",\"170\":\"15@0\",\"171\":\"15@1\",\"172\":\"16\",\"173\":\"16@0\",\"174\":\"16@1\",\"175\":\"17\",\"176\":\"17@0\",\"177\":\"17@1\",\"178\":\"18\",\"179\":\"18#预加载\",\"180\":\"18#构建工具支持\",\"181\":\"18#预渲染\",\"182\":\"18#webpack方案\",\"183\":\"18#骨架屏\",\"184\":\"18#ui库方案\",\"185\":\"18@0\",\"186\":\"18@1\",\"187\":\"19\",\"188\":\"19#时间分片-分时渲染\",\"189\":\"19#使用定时器\",\"190\":\"19#requestanimationframe\",\"191\":\"19#documentfragment\",\"192\":\"19#虚拟列表、表格\",\"193\":\"19#实现要点\",\"194\":\"19#最佳实践\",\"195\":\"19#canvas\",\"196\":\"19@0\",\"197\":\"19@1\",\"198\":\"20\",\"199\":\"20@0\",\"200\":\"21\",\"201\":\"21@0\",\"202\":\"22\",\"203\":\"22#完成-completion\",\"204\":\"22#抛出异常-throw-an-exception\",\"205\":\"22#returnifabrupt\",\"206\":\"22#符号-returnifabrupt-简写\",\"207\":\"22#符号\",\"208\":\"22#隐式正常完成-implicit-normal-completion\",\"209\":\"22@0\",\"210\":\"23\",\"211\":\"23#抽象操作-abstract-operations\",\"212\":\"23#语法导向操作-syntax-directed-operations\",\"213\":\"23#静态语义-static-semantics\",\"214\":\"23#数学运算\",\"215\":\"23#值表示法-value-notation\",\"216\":\"23#标识-identity\",\"217\":\"23@0\",\"218\":\"24\",\"219\":\"24#文法参数的含义\",\"220\":\"24#文法前缀参数的含义\",\"221\":\"24#例子\",\"222\":\"24@0\",\"223\":\"25\",\"224\":\"25@0\",\"225\":\"26\",\"226\":\"26#终结符\",\"227\":\"26#非终结符与产生式规则\",\"228\":\"26#opt符号\",\"229\":\"26#one-of短语\",\"230\":\"26#but-not短语\",\"231\":\"26#empty-短语\",\"232\":\"26#前瞻限制短语\",\"233\":\"26#no-lineterminator-here\",\"234\":\"26#描述性短语\",\"235\":\"26@0\",\"236\":\"27\",\"237\":\"27@0\",\"238\":\"28\",\"239\":\"28@0\",\"240\":\"29\",\"241\":\"29@0\",\"242\":\"30\",\"243\":\"30#语法\",\"244\":\"30#转义字符\",\"245\":\"30#转义序列-escapesequence\",\"246\":\"30#先觉错误\",\"247\":\"30#在代码块内使用严格模式\",\"248\":\"30@0\",\"249\":\"31\",\"250\":\"32\",\"251\":\"33\",\"252\":\"34\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,13],\"2\":[1,4],\"3\":[1,12],\"4\":[1,34],\"5\":[1,26],\"6\":[null,null,1],\"7\":[1,9],\"8\":[1,18],\"9\":[1,8],\"10\":[1,22],\"11\":[null,null,1],\"12\":[1,29],\"13\":[1,9],\"14\":[1,6],\"15\":[1,12],\"16\":[1,44],\"17\":[null,null,1],\"18\":[1],\"19\":[null,null,1],\"20\":[1,31],\"21\":[1,14],\"22\":[1,8],\"23\":[1,34],\"24\":[1,6],\"25\":[1,12],\"26\":[1,27],\"27\":[1,24],\"28\":[1,11],\"29\":[1,11],\"30\":[1,11],\"31\":[1,46],\"32\":[1,64],\"33\":[1],\"34\":[null,null,1],\"35\":[1,16],\"36\":[1,15],\"37\":[1,15],\"38\":[1,39],\"39\":[null,null,1],\"40\":[1,37],\"41\":[1,4],\"42\":[1,10],\"43\":[1,10],\"44\":[1,2],\"45\":[1,14],\"46\":[1,13],\"47\":[1,6],\"48\":[1,8],\"49\":[1,28],\"50\":[1,59],\"51\":[1,8],\"52\":[1,16],\"53\":[1,9],\"54\":[1,53],\"55\":[1,36],\"56\":[null,null,1],\"57\":[1],\"58\":[null,null,1],\"59\":[1],\"60\":[1,34],\"61\":[1,2],\"62\":[1,7],\"63\":[1,7],\"64\":[1,2],\"65\":[1,4],\"66\":[1,21],\"67\":[3,15],\"68\":[1,3],\"69\":[3,14],\"70\":[1,18],\"71\":[1,24],\"72\":[1,4],\"73\":[1,9],\"74\":[1,5],\"75\":[1,14],\"76\":[1,46],\"77\":[1,8],\"78\":[1,15],\"79\":[1,40],\"80\":[1,20],\"81\":[1,29],\"82\":[1,58],\"83\":[1,22],\"84\":[1,30],\"85\":[1,5],\"86\":[1,2],\"87\":[1,7],\"88\":[1,16],\"89\":[1,2],\"90\":[1,42],\"91\":[1,3],\"92\":[1,4],\"93\":[1,3],\"94\":[1,2],\"95\":[1,4],\"96\":[1,8],\"97\":[1,4],\"98\":[1,7],\"99\":[1,4],\"100\":[1,4],\"101\":[1,13],\"102\":[1,13],\"103\":[1,5],\"104\":[1,44],\"105\":[2,10],\"106\":[1,13],\"107\":[1,8],\"108\":[1,4],\"109\":[1,6],\"110\":[1,11],\"111\":[1,11],\"112\":[1,23],\"113\":[1,18],\"114\":[null,null,1],\"115\":[1,10],\"116\":[1,30],\"117\":[1,50],\"118\":[1,40],\"119\":[1,10],\"120\":[1,3],\"121\":[1,28],\"122\":[1,3],\"123\":[1,7],\"124\":[1,17],\"125\":[1,28],\"126\":[1,20],\"127\":[1,13],\"128\":[1,15],\"129\":[1,16],\"130\":[null,null,1],\"131\":[1,5],\"132\":[1,32],\"133\":[1,27],\"134\":[1,11],\"135\":[1,13],\"136\":[1,23],\"137\":[1,13],\"138\":[4,16],\"139\":[1,34],\"140\":[1,3],\"141\":[1],\"142\":[null,null,1],\"143\":[null,null,3],\"144\":[1,5],\"145\":[1,4],\"146\":[1,59],\"147\":[1,24],\"148\":[1,5],\"149\":[1,11],\"150\":[1,22],\"151\":[1,9],\"152\":[1,10],\"153\":[1,19],\"154\":[1,28],\"155\":[1,13],\"156\":[2,15],\"157\":[2,13],\"158\":[1,15],\"159\":[1,20],\"160\":[1],\"161\":[null,null,1],\"162\":[null,null,3],\"163\":[1],\"164\":[null,null,1],\"165\":[1,5],\"166\":[1,7],\"167\":[1,4],\"168\":[1,161],\"169\":[1,10],\"170\":[null,null,1],\"171\":[null,null,1],\"172\":[1],\"173\":[null,null,1],\"174\":[null,null,1],\"175\":[1],\"176\":[null,null,1],\"177\":[null,null,2],\"178\":[1,5],\"179\":[1,32],\"180\":[1,34],\"181\":[1,29],\"182\":[1,68],\"183\":[1,6],\"184\":[1,14],\"185\":[null,null,1],\"186\":[null,null,3],\"187\":[1,8],\"188\":[1,5],\"189\":[1,55],\"190\":[1,46],\"191\":[1,52],\"192\":[1,4],\"193\":[1,15],\"194\":[1],\"195\":[1],\"196\":[null,null,1],\"197\":[null,null,3],\"198\":[1],\"199\":[null,null,1],\"200\":[3],\"201\":[null,null,1],\"202\":[3,13],\"203\":[1,16],\"204\":[1,13],\"205\":[1,32],\"206\":[1,7],\"207\":[1,19],\"208\":[1,14],\"209\":[null,null,1],\"210\":[1],\"211\":[1],\"212\":[1,24],\"213\":[1,23],\"214\":[1],\"215\":[1,5],\"216\":[1,16],\"217\":[null,null,1],\"218\":[1,16],\"219\":[1,15],\"220\":[1,15],\"221\":[1,36],\"222\":[null,null,1],\"223\":[1],\"224\":[null,null,1],\"225\":[1],\"226\":[1,8],\"227\":[1,21],\"228\":[1,15],\"229\":[1,17],\"230\":[1,12],\"231\":[1,11],\"232\":[1,17],\"233\":[1,14],\"234\":[1,7],\"235\":[null,null,1],\"236\":[1],\"237\":[null,null,1],\"238\":[1],\"239\":[null,null,1],\"240\":[1],\"241\":[null,null,1],\"242\":[1,35],\"243\":[1,8],\"244\":[1,10],\"245\":[1,19],\"246\":[1,9],\"247\":[1,14],\"248\":[null,null,1],\"249\":[1,3],\"250\":[1],\"251\":[2],\"252\":[1]},\"averageFieldLength\":[1.066007765552423,17.947212542588858,0.49498813007493936],\"storedFields\":{\"0\":{\"h\":\"介绍页\"},\"1\":{\"h\":\"执行环境\",\"t\":[\"JavaScript必须依赖一个宿主环境才能实现完整的功能。\",\"宿主环境中有多个Agent，每个Agent对于一个js程序，也就是说Agent是程序的执行环境。\",\"Agent集群中的agent可以共享内存。\",\"每个Agent包含一个执行上下文栈，一个执行线程。\",\"执行上下文是代码的执行环境，包含一个Realm，代码创建的执行上下文还有一个词法环境。\",\"Realm提供了代码执行需要的基础资源，词法环境是作用域链的起点。\"]},\"2\":{\"h\":\"\",\"t\":[\"Agent是程序的执行环境，包括一个执行上下文栈、一个Agent记录器和一个执行线程。\"]},\"3\":{\"h\":\"\",\"t\":[\"执行上下文栈用于跟踪执行上下文。正在运行的执行上下文始终是该栈顶部元素。\",\"以下情况会创建执行上下文：\",\"程序初始化：程序初始化操作\",\"脚本执行：脚本求值\",\"模块环境初始化：模块环境初始化\",\"模块执行：模块执行\",\"函数执行：\",\"会创建迭代器的内置对象方法：\"]},\"4\":{\"h\":\"\",\"t\":[\"用于跟踪运行时执行的代码。在任何时候，每个agent至多只有一个正在实际执行代码的执行上下文。\",\"组件\",\"作用\",\"code evaluation state\",\"执行、暂停、恢复与此执行上下文的关联代码所需的任何状态。\",\"Function\",\"如果正在求值函数对象的代码，值为该函数对象。如果正在求值脚本、模块，则值为null。\",\"Realm\",\"执行上下文的关联代码所需的资源的Realm记录器。(不同的执行上下文可能有不同的realm)\",\"ScriptOrModule\",\"关联代码来源的模块记录器、脚本记录器（源文本解析结果）。\",\"ECMAScript代码的执行上下文还有额外的三个组件\",\"组件\",\"作用\",\"LexicalEnvironment\",\"指向代码中创建的标识符引用(存放在环境记录器)。\",\"VariableEnvironment\",\"指向代码中创建的变量声明(存放在环境记录器)\",\"PrivateEnvironment\",\"指向包含类中的类元素创建的私有名称(存放在私有环境记录)\"]},\"5\":{\"h\":\"\",\"t\":[\"一个Realm由一组内置对象、一个ECMAscript全局环境、该全局环境范围内加载的所有ECMAscript代码、以及其他相关状态和资源组成。 Realm包含了代码需要执行的最小资源。\",\"字段\",\"值\",\"含义\",\"[[AgentSignifier]]\",\"Agent标识符\",\"拥有此Realm的Agent代理\",\"[[Intrinsics]]\",\"记录器\",\"关联代码使用的内置值\",\"[[GlobalObject]]\",\"全局对象\",\"此范围使用的全局对象\",\"[[GlobalEnv]]\",\"全局环境记录器\",\"范围的全局环境\",\"[[TemplateMap]]\",\"列表\",\"[[LoadedModules]]\",\"列表\",\"[[HostDefined]]\",\"默认值为undefined\",\"宿主环境保留字段\"]},\"6\":{\"c\":[\"ECMA标准\"]},\"7\":{\"h\":\"宿主环境\",\"t\":[\"ECMAScript并不是一门能够独立运行的编程语言，它必须要接入到一个宿主环境（host environment） 中才能发挥作用。\",\"ECMAScript有两种常见的宿主：\",\"web客户端的浏览器。\",\"web服务端的Node.Js\"]},\"8\":{\"h\":\"\",\"t\":[\"标准中宿主可以提高的内容\",\"在程序运行前，环境会初始化一系列的内置对象（Built-in Objects） ，这些内置对象至少包括一个全局对象以及所有标准定义的固有对象（如Array、Object、Number等）。这些内置对象会帮助实现最基础的语言功能。 宿主环境，则可以依据自身的业务需求，增加环境中的内置对象（俗称“宿主对象”）并扩展全局对象的属性和方法。\"]},\"9\":{\"h\":\"\",\"t\":[\"浏览器，会提供两类重要的宿主对象：DOM、BOM。\",\"服务端，Node.js则会提供与服务端操作相关的对象。\"]},\"10\":{\"h\":\"\",\"t\":[\"标准关于全局对象的定义\",\"浏览器宿主的全局对象window，就新增了许多访问页面尺寸和位置的属性，如window.screenX、window.scrollY，以及许多事件监听方法，如window.ondrag、window.onblur等等。\",\"Node.js宿主，则在全局对象上新增了进程属性globalThis.process、缓冲区构造器属性globalThis.Buffer、以及一些特别的定时器方法globalThis.setImmediate()、globalThis.clearImmediate()等等。\"]},\"11\":{\"c\":[\"ECMA标准\"]},\"12\":{\"h\":\"程序执行过程\",\"t\":[\"// 全局代码 const glo_const = 1 let glo_let = 2 var glo_var = 3 class Glo_class{} function glo_fn(){ // ③ // 位于函数体内声明语句 let inner_fn_let = 4 var inner_fn_var = 5 } if(true){ // ④ // 位于块内的声明语句 let block_let = 6 // ⑤ var block_var = 7 // ⑥ function block_fn(){} // ⑦ }\"]},\"13\":{\"h\":\"\",\"t\":[\"标准\",\"创建全局执行上下文、realm记录器。realm记录器包含全局对象、全局环境记录器、固有对象。\",\"图示\",\"alt text\"]},\"14\":{\"h\":\"\",\"t\":[\"标准\",\"每一段脚本执行前，需要先解析脚本，将其转换为解析树。返回一个脚本记录器。\"]},\"15\":{\"h\":\"\",\"t\":[\"标准\",\"创建ECMAScript代码执行上下文(scriptContext) ，设置scriptContext的词法环境、变量环境指向全局环境记录器等。\",\"接着推送到执行上下文栈，使其成为运行中的执行上下文。\",\"然后进行全局声明实例化，最后对脚本语句求值。\",\"全局声明实例化以后的调用栈。\",\"alt text\"]},\"16\":{\"h\":\"\",\"t\":[\"声明实例化，不等于初始化，只有执行到对应的位置，才能知道确切的值。\",\"GlobalDeclarationInstantiation\",\"调用LexicallyDeclaredNames 、VarDeclaredNames语义收集标识符。 \",\"从结果来看LexicallyDeclaredNames只会收集let、const声明语句(只会处理Declaration)的标识符，会忽略所有的函数声明。\",\"VarDeclaredNames对语句递归的调用，收集可见var声明、函数声明的标识符。不会处理函数和类中的。\",\"如果词法声明和变量声明的连接有重复项，则抛出 SyntaxError 异常。\",\"调用VarScopedDeclarations语义收集变量声明语句varDeclarations，调用LexicallyScopedDeclarations 语义收集词法声明语句 lexDeclarations。\",\"最后得到三个列表：lexDeclarations、varDeclarations、functionsToInitialize。根据标识符的类型进行绑定 \",\"对于lexDeclarations中的标识符，绑定到全局环境记录器的[[DeclarativeRecord]]字段上。\",\"对于functionsToInitialize，实例化相应的函数对象，并绑定到全局环境记录器的[[ObjectRecord]]字段上((实际上是成为全局对象的属性))。\",\"对于varDeclarations中的标识符，绑定到全局环境记录器的[[ObjectRecord]]字段上((实际上是成为全局对象的属性))。\",\"关于严格模式\",\"非严格模式函数标识符会被实例化并初始化为undefined，严格模式下函数不会被实例化。\",\"全局声明实例化以后的调用栈。\",\"alt text\"]},\"17\":{\"c\":[\"ECMA标准\"]},\"18\":{\"h\":\"ECMA标准\"},\"19\":{\"c\":[\"ECMA标准\"]},\"20\":{\"h\":\"作用域分析\",\"t\":[\"标准使用 环境记录器(Environment Record) 来表示作用域。\",\"每个环境记录器都有一个 [[OuterEnv]] 字段指向另一个环境记录器，通过该字段连接起来的所有的环境记录器共同构成一条作用域链。\",\"作用域链例子\",\"for (var i = 1; i < 5; i++) { setTimeout(() => { console.log(i) }, i * 1000) }\",\"alt text\",\"ECMAscript执行上下文的词法环境组件指向一个环境记录器，这就是执行上下文的代码查找变量的起点，也就是作用域链的起点。\",\"调用栈上有几个ECMAScript代码执行上下文，运行环境中就有几条作用域链。\"]},\"21\":{\"h\":\"\",\"t\":[\"环境记录器存放着标识符的绑定，标准中有五种环境记录器：\",\"全局环境记录器：绑定全局顶层代码的标识符。\",\"声明式环境记录器：常用于绑定块级语句内的标识符。\",\"函数环境记录器：绑定函数体内的标识符。\",\"模块环境记录器：绑定模块顶层代码的标识符。\",\"对象环境记录器：把一个对象中的属性方法抽取出来作为标识符绑定在环境中，这是with语句和全局对象所使用的记录器。\"]},\"22\":{\"h\":\"\",\"t\":[\"声明式环境记录绑定其范围内包含的声明所定义的一组标识符。 这些标识符可能是变量、常量、let、class、模块、import和/或函数声明\"]},\"23\":{\"h\":\"\",\"t\":[\"一种声明式环境记录，表示函数的顶级作用域，并且如果函数不是一个箭头函数，则提供一个 this绑定。\",\"附加字段\",\"字段\",\"值\",\"说明\",\"[[ThisValue]]\",\"ES语言值\",\"函数调用中使用的this值\",\"[[ThisBindingStatus]]\",\"lexical, initialized或 uninitialized\",\"如果值是lexical，则这是一个箭头函数，并且没有本地的this值。\",\"[[FunctionObject]]\",\"函数对象\",\"创建此环境记录的函数对象\",\"[[NewTarget]]\",\"对象、undefined\",\"如果此环境记录是由[[Construct]]内部方法创建的， 则[[NewTarget]]是[[Construct]]的newTarget参数的值。 否则，其值为undefined。\"]},\"24\":{\"h\":\"\",\"t\":[\"一种声明式环境记录，用于表示 ECMAScript 模块 的外部作用域。\"]},\"25\":{\"h\":\"\",\"t\":[\"对象环境记录绑定一组字符串标识符名称，这些名称直接对应于其绑定对象的属性名称。\",\"附加字段\",\"字段\",\"值\",\"说明\",\"[[BindingObject]]\",\"对象\",\"环境记录绑定的对象\",\"[[IsWithEnvironment]]\",\"boolean\",\"此环境记录是否为with语句创建\"]},\"26\":{\"h\":\"\",\"t\":[\"全局环境记录用于表示所有在同一个realm中处理的ECMAScript script共享的最外层作用域。\",\"附加字段\",\"字段\",\"值\",\"说明\",\"[[ObjectRecord]]\",\"对象环境记录\",\"全局对象，包含内置绑定、全局代码中的函数声明、变量声明绑定，针对相关的Realm\",\"[[GlobalThisValue]]\",\"对象\",\"全局作用域中this返回的值。宿主可以提供任何ECMAScript对象值。\",\"[[DeclarativeRecord]]\",\"声明式环境记录器\",\"包含所有在相关领域代码中的全局代码声明的绑定，除了[[ObjectRecord]]中的绑定\",\"[[VarNames]]\",\"字符串列表\",\"在相关领域代码的全局代码中，函数声明和变量声明的绑定名称。\"]},\"27\":{\"h\":\"作用域的分析\",\"t\":[\"有的语句的求值过程中，需要创建环境记录器(并使他指向旧有的)，然后进行声明实例化，之后对每个子语句进行求值。 实例化的过程中，会收集自身区域的标识符并绑定到相应的环境记录器。 如果层层嵌套，很自然的就组成了一个作用域链。\",\"在标准中可以找到六种声明实例化操作，都需要环境记录器。\",\"GlobalDeclarationInstantiation：全局声明实例化。\",\"FunctionDeclarationInstantiation：函数声明实例化。\",\"BlockDeclarationInstantiation：块级声明实例化。\",\"ForDeclarationBindingInstantiation：for声明实例化。\",\"InitializeEnvironment：模块声明实例化。\",\"EvalDeclarationInstantiation：eval函数声明实例化。\"]},\"28\":{\"h\":\"\",\"t\":[\"简述步骤：\",\"保存当前指向上下文的词法环境oldEnv ，创建新的声明式环境记录器blockEnv(blockEnv.[[OuterEnv]]=OldEnv)。\",\"执行BlockDeclarationInstantiation。\",\"设置当前上下文的词法环境为blockEnv。\",\"对块中语句挨个执行。\",\"当前上下文的词法环境恢复为oldEnv。\"]},\"29\":{\"h\":\"\",\"t\":[\"收集标识符，并完成环境记录器的绑定。\",\"调用LexicallyScopedDeclarations收集词法声明declarations。\",\"对declarations中的元素，进行相应的绑定。 \",\"let、const做相应的可变、不可变的绑定。\",\"实例化函数对象，初始化绑定。\"]},\"30\":{\"h\":\"\",\"t\":[\"for循环在标准中分为，for和for-In、for-of、for-await-of。\",\"标准中的调用链是这样的：\",\"可以看出分歧为ForInOfLoopEvaluation(应用for-In、for-of、for-await-of)、ForLoopEvaluation(应用for)。\"]},\"31\":{\"h\":\"\",\"t\":[\"ForLoopEvaluation语义应用的其中一个代换式\",\"ForStatement : for ( LexicalDeclarationExpressionopt ; Expressionopt )Statement\",\"那他很有可能是这样的 for(let i;i<10;i++){}\",\"当在for中使用let、const时，有以下简述步骤：\",\"保存当前上下文的词法环境oldEnv，创建新的环境记录器loopEnv。\",\"对标识符进行对应的绑定，设置当前上下文的词法环境为loopEnv\",\"调用ForBodyEvaluation(，，，perIterationLets，)。 \",\"调用CreatePerIterationEnvironment语义，创建记录器，绑定标识符。\",\"重复 \",\"如果test(条件)不为空，对其求值，当false，返回v\",\"求值for块中的语句为result，LoopContinues为false(循环终止)，返回result。\",\"将v值给予result，执行CreatePerIterationEnvironment，创建记录器，绑定标识符。\",\"恢复词法环境为oldEnv。\",\"重要\",\"总来来说，为词法声明创建一次环境记录器，接着对for块不断创建环境(复制上一个记录器中的绑定和值，然后递增)记录器，直到条件达成或循环终止条件。\",\"调用栈\"]},\"32\":{\"h\":\"函数求值\",\"t\":[\"函数被调用时会触发函数的内部方法[[Call]]方法。简述步骤:\",\"创建函数的执行上下文以及函数环境记录器，并把执行上下文的词法环境指向该记录器。\",\"对函数进行声明实例化。\",\"执行函数体中的语句。 实例化\",\"对参数标识符进行实例化 2. 普通参数：如果函数调用的时候有赋值，则初始化为这个值，否则为undefined。 3. 表达式参数：如果函数调用的时候有赋值，则初始化为这个值，否则为表达式中的默认值。 此外，为了避免参数表达式的标识符与函数体变量声明的标识符发生“碰撞”，会在函数环境记录器上再创建一个声明式环境记录器，并把变量声明的标识符绑定在这个环境当中，从而实现两种类型标识符的隔离。\",\"创建arguments对象，以下情况不需要创建： \",\"函数是箭头函数。\",\"参数中有名为arguments的参数。\",\"函数体内有名为arguments的函数或标识符为arguments的词法声明语句。\",\"// 全局代码 fn_example(1) function fn_example(normal_arg, expression_arg = 2){ console.log(arguments) let fn_let = 3; var fn_var = 4; const fn_const = 5 class Fn_class{} function fn_fn(){} }\",\"alt text\",\"关于函数的环境记录器的指向问题。\",\"函数定义处进行声明实例化的时候，会OrdinaryFunctionCreate创建函数对象,并且 F.[[Environment]] 设置为 env。。\",\"当函数调用时，创建的函数环境记录器的outenv就会使用这个值。\",\"let target = \\\"global\\\" a() function a(){ let target = \\\"fn_a\\\" b() } function b(){ console.log(target) // \\\"global\\\" }\",\"alt text\"]},\"33\":{\"h\":\"闭包\"},\"34\":{\"c\":[\"ECMA标准\"]},\"35\":{\"h\":\"如何阅读ECMA标准\",\"t\":[\"ECMA是一个js标准，他只提供抽象定义，具体实现取决于实际环境。例如Node和浏览器环境就有不同的全局对象。\",\"阅读ECMA有以下难点：\",\"概念：大量的概念横跨整个文档。\",\"产生式的上下标：简略的表达了各种含义。\",\"伪代码：只提供抽象定义。\",\"省略语义：有很多的操作序列被简化成简单的词汇存在于各种代换式中。\",\"本文只对ECMA的内容进行简单的介绍，具体需要看术语部分。\"]},\"36\":{\"h\":\"\",\"t\":[\"ECMA中的产生式(也称为非终结符号)如下所示，产生式用于说明或定义句子的组成结构。非终结符号在ECMA中显示为斜体类型。\",\"参数列表的产生式\",\"ArgumentList:AssignmentExpressionArgumentList,AssignmentExpression\",\"这说明一个参数列表(ArgumentList)可以表达为一个参数表达式(AssignmentExpression)或一个参数列表通过逗号(,)与参数列表(ArgumentList)的组合。\"]},\"37\":{\"h\":\"\",\"t\":[\"ECMA中的携带文法参数产生式如下所示，参数化的产生式是一组产生式的简写。产生式的下标如果是 [] 包括的，显然他是语法参数。\",\"参数化的产生式\",\"StatementList[Return,In]:ReturnStatementExpressionStatement\",\"该产生式是以下的缩写：\",\"参数化产生式的完整样子\",\"StatementList:ReturnStatementExpressionStatement\",\"StatementList_Return:ReturnStatementExpressionStatement\",\"StatementList_In:ReturnStatementExpressionStatement\",\"StatementList_Return_In:ReturnStatementExpressionStatement\",\"可以看出 [] 中的每个参数都经过组合。\"]},\"38\":{\"h\":\"\",\"t\":[\"ECMA在抽象操作(或称为算法)的定义时，就会展示如下的伪代码。ECMA中的语言值以粗体表示，如以下中的underfined。\",\"ToBoolean方法的抽象定义\",\"If argument is a Boolean, return argument.\",\"If argument is one of undefined, null, +0𝔽, -0𝔽, NaN, 0ℤ, or the empty String,return false.\",\"NOTE: This step is replaced in section B.3.6.1.\",\"Return true.\"]},\"39\":{\"c\":[\"ECMA标准\"]},\"40\":{\"h\":\"版本管理\",\"t\":[\"版本控制(Version control)，是维护工程蓝图的标准作法，能追踪工程蓝图从诞生一直到定案的过程。此外，版本控制也是一种软件工程技巧，借此能在软件开发的过程中，确保由不同人所编辑的同一程序文件都得到同步。\",\"通过文档控制，能记录任何工程项目内各个模块的改动历程，并为每次改动编上序号。\",\"一种简单的版本控制形式如下：赋给图的初版一个版本等级\\\"A\\\"。当做了第一次改变后，版本等级改为\\\"B\\\",以此类推。\",\"版本控制能提供项目的设计者，将设计恢复到之前任一状态的选择权。\",\"简言之，修改只要提交到版本控制系统，基本上都能找回，版本控制系统就像一台时光机器，可以让你回到任何一个时间点。\",\"优点：\",\"记录文件所有的历史变化，这是版本控制系统的基本能力\",\"随时恢复到任意时间点，历史记录功能使我们不怕改错代码了\",\"支持多功能并行开发，通常版本控制系统都支持分支，保证了并行开发的可行\",\"多人协作并行开发，对于多人协作项目、支持多人协作开发的版本管理系统将事半功倍\"]},\"41\":{\"h\":\"\",\"t\":[\"版本控制系统根据类别可以分成：\",\"本地版本控制系统\",\"集中式版本控制系统\",\"分布式版本控制系统\"]},\"42\":{\"h\":\"\",\"t\":[\"结构如下图所示： 优点：\",\"简单，很多系统中都有内置\",\"适合管理文本，如系统设置 缺点：\",\"其不支持远程操作，因此并不适合多人版本开发。\"]},\"43\":{\"h\":\"\",\"t\":[\"结构如下图所示： 优点：\",\"适合多人团队协作开发\",\"代码集中化管理 缺点：\",\"单点故障\",\"必须联网，无法单机工作 代表工具有SVN、CVS\"]},\"44\":{\"h\":\"\",\"t\":[\"TortoiseSVN是一款非常易于使用的跨平台的版本控制/源代码控制软件\"]},\"45\":{\"h\":\"\",\"t\":[\"CVS是版本控制系统，是源配置管理(SCM)的重要组成部分。使用它，您可以记录源文件和文档的历史记录。 老牌的版本控制系统，它是基于客户端/服务器的行为使其可以容纳多用户，构成网络也很方便。 这一特性使得CVS成为位于不同地点的人同时处理数据文件(特别是程序的源代码)时的首选。\"]},\"46\":{\"h\":\"\",\"t\":[\"结构如下图所示： 优点：\",\"适合多人团队协作开发\",\"代码集中化管理 缺点：\",\"可以离线工作\",\"每个计算机都是一个完整仓库 分布式版本管理系统每个计算机都有一个完整仓库，可本地提交，可做到离线工作，则不用像集中版本管理那样因为断网情况而无法工作 代表工具为Git、HG\"]},\"47\":{\"h\":\"\",\"t\":[\"Git是目前世界上最先进的分布式版本控制系统，旨在快速高效地处理从小型到大型项目的所以事务特性：易于学习、占用内存小，具有闪电般快速的性能。 使用Git和Gitlab搭建版本控制环境是现在互联网公司最流行的版本控制方式\"]},\"48\":{\"h\":\"\",\"t\":[\"TortoiseHg是一个免费的分布式源代码管理工具。它可以有效地处理任何规模的项目，并提供简单直观的界面。MercurialHg是一种轻量级分布式版本控制系统，采用Python语言实现，易于学习和使用，扩展性强。\"]},\"49\":{\"h\":\"\",\"t\":[\"git是一个分布式版本控制软件，最初是为了更好地管理Linux内核开发而设计 分布式版本控制系统的客户端并不只是提取最新版本的文件快照，而是把代码仓库完整地镜像下来。这么一来，任何一处协调工作用的服务器发生故障、事后都可以用任何一个镜像出来的本地仓库恢复\",\"alt text\",\"项目开始，只有一个原始版仓库，别的机器可以clone这个原始版本库，那么所有的clone的机器，他们的版本库其实都是一样的，并没有主次之分。\",\"所以在实现团队协作的时候，只要有一台电脑充当服务器的角色，其他每个人都从这个”服务器“仓库clone一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交。\",\"github实际就可以充当这个服务器角色，其是一个开源协作社区，提供Git仓库托管服务，既可以让别人参与你的开源项目，也可以参与别人的开源项目。\"]},\"50\":{\"h\":\"\",\"t\":[\"当我们通过git init创建或者git clone一个项目的时候，项目目录会隐藏一个==.git==子目录，其作用是用来跟踪管理版本的\",\"Git中所有数据在存储前都计算校验和，然后以校验和来引用，所以在我们修改或者删除文件的时候，Git能够知道Git用以计算校验和的机制叫做 SHA-1 散列(hash，哈希)。这是一个由40个十六进制字符(0-9和a-f)组成字符串，基于 Git 中文件的内容或目录结构计算出来，如下：\",\"24b9da6552252987aa493b52f8696cd6d3b00373\",\"当我们修改文件的时候，git就会修改文件的状态，可以通过git status进行查询，状态情况如下：\",\"已修改(modified)：表示修改了文件，但还没保存到数据库中。\",\"已暂存(staged)：表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。\",\"已提交(committed)：表示数据已经安全的保存在本地数据库中。 文件状态对应的，不同状态的文件在Git中处于不同的工作区域，主要分成了四个部分：\",\"工作区：相当于本地写代码的区域，如git clone一个项目到本地，相当于本地克隆了远程仓库项目的一个副本\",\"暂存区：暂存区是一个文件，保存了下次将提交的文件列表信息，一般在Git仓库目录中\",\"本地仓库：提交更新，找到暂存区域的文件，将快照永久性存储到Git本地仓库\",\"alt text\"]},\"51\":{\"h\":\"\",\"t\":[\"git常用的命令\",\"add：提交全部文件修改到缓存区\",\"commit：\",\"push\",\"pull\",\"clone\",\"checkout\"]},\"52\":{\"h\":\"配置命令\",\"t\":[\"Git自带一个git config的工具来帮助设置控制Git外观和行为的配置变量，在我们安装完git之后，第一件事就是设置你的用户名和邮件地址。\",\"后续每一个提交都会使用这些信息。他们会写入你的每一次提交中，不可更改。\",\"设置提交代码的用户信息命令如下：\",\"git config [--global] user.name \\\"[name]\\\"\",\"git config [--global] user.email \\\"[email address]\\\"\"]},\"53\":{\"h\":\"启动命令\",\"t\":[\"一个git项目的初始有两个途径，分别是：\",\"git init [project-name]：创建或在当前目录初始化一个git代码库\",\"git init url：下载一个项目和他的整个代码历史\"]},\"54\":{\"h\":\"日常基本操作\",\"t\":[\"git init：初始化仓库，默认为master分支\",\"add：提交全部文件修改到缓存区\",\"add <具体文件路径+全名>：提交某些文件到缓冲区\",\"git diff：查看当前代码add后，会add哪些内容\",\"git diff --staged：查看现在commit提交后，会提交哪些内容\",\"git status：查看当前分支状态\",\"git pull <远程仓库名> <远程分支名>：拉取远程仓库的分支与本地当前分支\",\"git pull <远程仓库名> <远程分支名> <本地分支名>：拉取远程仓库的分支与本地的某个分支合并\",\"git commit --amend [file1] [file2]：重做上一次commit，并包括指定文件的新变化\",\"git commit -v:提交时显示所有的diff信息\",\"git commit -m [message]：提交代码到本地仓库，并写提交信息[message]\",\"关于提交信息的格式，可以遵循以下的规则：\",\"feat：新特性，添加功能\",\"fix：修改bug\",\"refactor：代码重构\",\"docs：文档修改\",\"style：代码格式修改\",\"test：测试用例修改\",\"chore：其他修改，比如构建流程，依赖管理\"]},\"55\":{\"h\":\"分支操作\",\"t\":[\"git branch：查看本地所有分支\",\"git branch -r：查看远程所有的分支\",\"git branch -a：查看本地和远程所有的分支\",\"git merge <分支名>：合并分支\",\"git merge --abort：合并分支出现冲突时，取消合并，一切回到合并前的状态\",\"git branch <新分支名>：基于当前分支，新建一个分支\",\"git checkout --orphan <新分支名>：新建一个空分支，会保留之前分支的所有文件\",\"git branch -D <分支名>：删除本地某个分支\",\"git push <远程库名>:<分支名>：删除某个远程分支\",\"git branch <新分支名><提交ID>：从提交历史恢复某个删除掉的某个分支\",\"git branch -m <原分支名> <新分支名>：分支更名\",\"git checkout <分支名>：切换到本地某个分支\",\"git checkout <远程库名>/<分支名>：切换到线上某个分支\",\"git checkout -b <新分支名>：基于当前分支新建分支，并切换为这个分支\"]},\"56\":{\"c\":[\"版本控制工具\"]},\"57\":{\"h\":\"\"},\"58\":{\"c\":[\"JS框架\"]},\"59\":{\"h\":\"Vue2\"},\"60\":{\"h\":\"组件通信\",\"t\":[\"分类：\",\"父子组件之间\",\"兄弟组件之间\",\"祖孙与后代组件之间\",\"非关系组件间之间\",\"8种常规方法\",\"props传递：父传子\",\"$emit触发自定义事件：子传父\",\"ref:获取子组件数据，子传父\",\"eventbus：兄弟组件之间传值 \",\"emit触发事件，on监听事件\",\"parent、root\",\"attrs与listeners \",\"向下传递属性，包含了未在props中声明的值\",\"provide与inject \",\"祖先定义provide\",\"后代定义inject\",\"vuex:存储共享变量的容器 \",\"state：存放共享变量\",\"getter：增加一个getter的派生状态\",\"mutations：修改state的方法\",\"actions：异步的mutations\"]},\"61\":{\"h\":\"data属性为何是一个函数\",\"t\":[\"在实例中可以定义为对象或函数 如果是为组件只能是一个函数\"]},\"62\":{\"h\":\"区别\",\"t\":[\"定义好组件时，vue最终都会通过vue.extend()构建组件实例 如果采用对象的data，每个组件的实例都会共用一个内存地址 采用函数返回一个全新的data形式\"]},\"63\":{\"h\":\"原理\",\"t\":[\"data初始化时，对象或函数都可以 组件创建时进行选项合并，vm实例为undefined，进入if判断 如果类型不是函数，则发出警告\"]},\"64\":{\"h\":\"动态添加属性的问题\",\"t\":[\"通过函数运行时的为组件添加属性，页面不会触发更新\"]},\"65\":{\"h\":\"原理\",\"t\":[\"vue2使用object.defineProperty实现的数据响应式，由此可见对定义时存在的属性都进行这样的操作 新增的属性自然不具备响应式\"]},\"66\":{\"h\":\"解决\",\"t\":[\"若想实现数据与视图更新 Vue.set()向一个响应式对象中添加一个property，并确保这个新的property同样是响应式的 defineReactive新增属性的响应式 Object.assign() 创建一个新的对象，合并原对象和混入对象的属性\",\"this.someObject=Object.assign({},this.someObject,{newProperty1:1})\",\"$forceUpdated() 当需要做强制更新，九成的情况是，在某个地方写错了迫使Vue实例重新渲染，只影响实例本身和使用插槽的子组件。\"]},\"67\":{\"h\":\"v-if和v-for的优先级\",\"t\":[\" vue模板编译时，会将指令系统转为可执行的render函数，模板指令的代码都会生成在render函数中，通过app.$options.render就可以得到渲染函数 _l是vue的列表渲染函数，显然v-for优先级比v-if高 当置于不同的标签中 v-for比v-if先进行判断\"]},\"68\":{\"h\":\"注意\",\"t\":[\"不同时使用使用在同一个标签上，如果条件出现在循环内部，可以用computed提前过滤那些不需要显示的项\"]},\"69\":{\"h\":\"v-if和v-show\",\"t\":[\"v-show隐藏是为元素添加css属性display：none，dom元素依然存在 v-if隐藏是将dom元素整个添加或删除 编译过程：v-if切换有一个局部编译/卸载的过程，切换过程中合适的销毁和重新组件内部的事件监听和子组件 编译条件：v-if是真正的条件渲染，确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。 v-if的状态更改，会触发组件的生命周期\"]},\"70\":{\"h\":\"原理\",\"t\":[\"解析流程: 将模板template转为ast结构的JS对象 用ast得到的js对象拼装成render和staticRenderFns函数 render和staticRenderFns函数被调用后生成虚拟VNODE节点，该节点包含创建DOM节点所需信息 vm.patch函数通过虚拟DOM算法利用VNODE节点创建真实DOM节点\",\"v-show原理 vShow函数，使用了生命周期函数，挂载之前，设置display属性 如果有transition就执行，否则直接设置display\",\"v-if原理 返回一个node节点，render函数通过表达式的值来决定是否生成DOM\"]},\"71\":{\"h\":\"key的作用\",\"t\":[\"key是每一个vnode的唯一id，也是diff的一种优化策略，根据key更准确的找到对应的vnode节点\",\"如果不使用key，vue就会使用就地复地原则：最小化element的移动，并且最大程度在同适当的地方对同类型的element，做patch或者reuse 如果使用key，根据keys的顺序记录element，曾经拥有key的element如果不再出现的话，会被直接remove或者destoryed 使用new Date()生成的时间戳作为key，手动强制触发重新渲染 对于以上，不使用key会依次比较，数据不同发生dom操作，c与f、d与c、e与d 如果使用key，vue只会更改顺序，将f插入到c之前\"]},\"72\":{\"h\":\"原理\",\"t\":[\"判断是否为同一个key，如果没有设置key则为undefined 对新旧vnode进行diff，如何比对出的结果用来更新真实dom\"]},\"73\":{\"h\":\"mixin\",\"t\":[\"面向对象中的类，提供了方法的实现。其他的类可以访问mixin类的方法而不必成为子类 一个普通的js对象，包含组件中任意选项功能，将共有的功能以对象的方式传入mixins， 当组件使用mixins对象的选项是所有的mixins对象的选项都将被混入该组件本身的选项中来 局部混入 全局混入\"]},\"74\":{\"h\":\"注意\",\"t\":[\"当组件存在与mixin对象相同的选项时，在递归合并的时候组件的选项会覆盖mixin的选项 如果相同选项为生命周期钩子，会合并为一个数组，先执行mixin的钩子\"]},\"75\":{\"h\":\"源码\",\"t\":[\"替换型：props，methods，computed\",\"合并型：data，通过set方法合并、重新赋值\",\"队列型：生命周期函数和watch\",\"叠加型：component、directives、filters\"]},\"76\":{\"h\":\"修饰符\",\"t\":[\"五种修饰符：\",\"表单修饰符 \",\"lazy：change事件之后进行同步\",\"trim：过滤首空格\",\"number：转为数值类型，内部调用parseFloat，如果无法解析，返回原来值\",\"事件修饰符：支持链式调用 \",\"stop：阻止事件冒泡，event.stopPropagation方法\",\"prevent：阻止事件的默认行为，event.preventDefault方法\",\"self：当元素自身时触发处理函数\",\"once：绑定了事件以后只能触发一次\",\"capture：向下捕获事件，向下传递事件\",\"passive：相当于给onscroll事件整了一个.lazy修饰符\",\"native：让组件变得像内置标签那样监听根元素的原生事件，否则只会监听自定义事件\",\"鼠标按键修饰符 \",\"left、right、middle\",\"键盘修饰符\",\"v-bind修饰符 \",\"async：双向绑定\",\"prop：自定义标签属性\",\"camel：将命名变为驼峰命名法\"]},\"77\":{\"h\":\"nextTick\",\"t\":[\"在下次DOM更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的DOM. 数据变化后,vue将开启一个异步更新队列,视图需要等待队列中所有的数据变化完成后,再统一进行更新.\"]},\"78\":{\"h\":\"场景\",\"t\":[\"Vue.nextTick(),第一个参数是回调函数,第二个参数为执行函数上下文. 返回一个promise对象,可以使用async和await完成相同作用的事情. callbacks是异步操作队列,将回调函数压入 pending用于标识,同一时间只能执行一次 timerFunc()异步延迟函数,根据当前环境选择合适的方法 无论是宏任务还是微任务,都会放到flushCallbacks\"]},\"79\":{\"h\":\"实例挂载过程\",\"t\":[\"vue的构造函数,options是用户传递的配置项,调用*_init*方法\",\"关于_init方法 初始化生命周期,渲染方法,调用beforeCreate钩子,初始化依赖注入,initState,调用created钩子 使用vm.$mount方法挂载元素\",\"initState方法完成props/data/method/watch/methods的初始化\",\"initData方法\",\"vm.$mount方法 如果没有提供render函数,则解析模板文件. 将html解析成ast树,转为render语法字符串,生成render方法\",\"mountComponent渲染组件 触发beforeCreate钩子,定义updateComponent渲染页面视图的方法.监听组件数据,一旦发生变化,触发beforeCreate钩子.updateComponent主要执行初始化声明的render,update方法\",\"render方法 render用于生成vnode\",\"_update主要功能是调用patch,将vnode转为真实DOM,并更新到页面中\"]},\"80\":{\"h\":\"结论\",\"t\":[\"new Vue调用_init方法 \",\"定义$set,$get,$delete,$watch等方法\",\"定义$on,$off,$emit,$off等事件\",\"定义_update,$forceUpdate,$destroy生命周期\",\"调用$mount方法进行页面的挂载 \",\"主要通过mountComponent方法\",\"定义updateComponent更新函数\",\"_update将虚拟DOM生成真实DOM结构,并且渲染到页面中\"]},\"81\":{\"h\":\"diff算法\",\"t\":[\"一种通过同层的树节点进行比较的高效算法\",\"比较只会再同层级进行,不会跨层级比较\",\"在diff比较的过程中,循环从两边向中间收拢 例子 第一次循环结束后,发现新旧节点D相同,diff后将他作为第一个真实节点,同时endindex移动到c. 第二次循环后,新旧节点c相同,diff后建立c的真实节点,startindex移动到e,endindex移动到b 第三次循环,没有发现e,直接创建新的真实节点E,startindex移动到a 第四次循环,diff创建了a的真实节点,startindex移动到b 第五次循环,创建b的真实节点,startindex已经大于endindex,需要创建newStrtIdx和newEndIdx之间的所有节点,即F startindex已经大于endindex,退出循环,创建newStrtIdx和newEndIdx之间的所有节点,即F\"]},\"82\":{\"h\":\"原理\",\"t\":[\"当数据发生改变时,set方法会调用Dep.notify通知所有的订阅者Watcher,订阅者就会调用pacth给真实DOM打补丁,更新相应的视图\",\"patch方法接受参数,oldVnode和Vnode 主要做了如下判断: 没有新节点,直接触发旧节点的destory钩子 没有旧节点,直接createElm新建节点 新旧节点自身一样,通过sameVnode判断节点是否一样,一样时,直接调用patchVnode去处理这两个节点 新旧节点自身不一样,直接创建新节点,删除旧的节点\",\"patchVnode 主要做了如下判断: 是否是文本节点,如果是,直接更新文本内容 如果存在子节点,则处理比较更新子节点 只有新节点有子节点,旧节点没有,所有的节点都是全新的,直接新建所有的新DOM,并且加入父节点 只有旧节点有子节点,把所有的旧节点删除,直接删除DOM\",\"子节点不完全一致,调用updateChildren 处理了五种情景: 新老节点的start相同,直接patchVnode,新老节点的start索引+1 新老节点的end相同,直接patchVnode,新老节点的end索引-1 老节点的start和新节点的end相同时,patchVnode后,将当前真实DOM移动到oldEndVnode后面,老节点的start索引+1,新节点的end索引-1 老节点的start和新节点的end相同时,patchVnode后,将当前真实DOM移动到oldEndVnode前面,老节点的end索引-1,新节点的start索引+1 如果不满足以上四种情况,则没有节点可以复用，分为以下两种情况 从旧的vnode为key值，对应的index序列为value值的哈希表中寻找到与newStartVnode一致key的旧的vnode节点，在进行patchVnode，同时将这个真实dom移动到oldstartVnode对应的真实dom的前面 调用createElm创建一个新的dom节点放到newStartIdx的位置\"]},\"83\":{\"h\":\"总结\",\"t\":[\"数据发生改变时，订阅者watcher就会调用patch给真实dom打补丁 通过isSameVnode进行判断，相同则调用patchVnode方法 patchVnode方法做了以下操作：\",\"找到对应的真实dom，称为el\",\"如果都有文本节点且不相等，将el文本节点设置为Vnode的文本节点\",\"如果oldVnode有子节点而Vnode没有，则删除el子节点\",\"如果oldVnode没有子节点而Vnode有，则将vnode的子节点真实化后添加到el\",\"如果两者都有子节点，则执行updateChildren函数比较子节点 updateChildren主要做了以下操作\",\"设置新旧Vnode的头尾指针\",\"新旧头尾指针进行比较，向循环中间靠拢，根据情况调用patchVnode进行patch重复流程、调用createElem创建一个新节点，从哈希表寻找key一致的Vnode节点再分情况操作\"]},\"84\":{\"h\":\"组件和插件的区别\",\"t\":[\"组件是把图形、非图形的各种逻辑均抽象为一个统一的概念来实现的开发模式 优势：\",\"降低系统的耦合度，保持接口不变的情况下，替换不同的组件快速完成需求\",\"调试方便，出现问题时可以用排除法直接移除组件、快速定位问题\",\"提高可维护性，由于每个组件的职责单一，并且组件在系统中是被复用的，使用对代码进行优化可获得系统的整体升级\",\"插件用来给Vue添加全局功能：\",\"添加全局方法或属性：vue-custom-element\",\"添加全局资源：指令、过滤器、过渡，vue-touch\",\"全局混入来添加一些组件选项：vue-router\",\"添加Vue实例方法，通过把他们添加到Vue.prototype上实现\",\"一个库，提供自己的api\"]},\"85\":{\"h\":\"区别\",\"t\":[\"组件有vue单文件，插件暴露了一个install函数 组件注册有全局注册和局部注册，插件使用Vue.use进行注册\"]},\"86\":{\"h\":\"场景\",\"t\":[\"组件是业务模块，插件是功能模块\"]},\"87\":{\"h\":\"跨域问题\",\"t\":[\"跨域是浏览器基于同源策略的安全手段\",\"同源有三个部分：\",\"协议相同\",\"主机相同\",\"端口相同\",\"非同源请求，则发生了跨域\"]},\"88\":{\"h\":\"方法\",\"t\":[\"jsonp\",\"cors 跨域资源共享，一系列的HTTP头组成，决定了是否阻止前端代码获取跨域请求的响应\",\"proxy 代理，网络代理，允许一个通过这个服务与另一个网络终端进行非直接的连接 vue.config.js文件配置，最终发布上线时如果web应用和接口服务器不在一起仍会跨域 通过服务端实现代理请求转发，express、nginx\"]},\"89\":{\"h\":\"自定义指令\",\"t\":[\"在vue中提供了一套数据驱动视图更为方便的操作，称之为指令\"]},\"90\":{\"h\":\"实现\",\"t\":[\"通过Vue.directive方法进行注册 第一个参数是指令的名字，第二个参数可以是对象数据，也可以是一个指令函数 自定义指令也存在钩子函数：\",\"bind：只调用一次，指令第一次绑定到元素时调用\",\"inserted：被绑定元素插入父节点时调用\",\"update：所在组件的Vnode更新时调用，可能发生在其子Vnode更新之前。\",\"componentUpdated：指令所在的组件Vnode及其子Vnode全部更新后调用\",\"unbind：只调用一次，指令与元素解绑时调用 钩子函数的参数：\",\"el：指令绑定的元素，可以操作dom\",\"binding：包含余下属性的对象 \",\"name\",\"value：绑定值\",\"oldValue：指令绑定的前一个值，只在update、componentUpdated可使用\",\"expression：字符串形式的指令表达式\",\"arg：传给指令的参数，可选\",\"modifiers：一个包含修饰符的对象\",\"vnode：虚拟节点\",\"oldVnode：上一个虚拟节点，只在update、componentUpdated可使用\"]},\"91\":{\"h\":\"场景\",\"t\":[\"防止表单重复提交 图片懒加载 一键copy的功能\"]},\"92\":{\"h\":\"过滤器\",\"t\":[\"自定义过滤器，用于一些常见的文本格式化（vue3中已废弃 他是管道式的\"]},\"93\":{\"h\":\"使用\",\"t\":[\"双花括号插值，v-bind表达式\"]},\"94\":{\"h\":\"定义\",\"t\":[\"在选项filters中定义，过滤器函数总接受表达式的值作为第一个参数\"]},\"95\":{\"h\":\"应用场景\",\"t\":[\"单位转换，数字打点，文本格式化，时间格式化\"]},\"96\":{\"h\":\"原理\",\"t\":[\"模板编译阶段过滤器表达式将会被编译为过滤器函数，\",\"_f函数全名为resolveFilter，这个函数的作用是从this.$options.filters中找出注册的过滤器并返回\",\"_s函数的全称是toString，过滤器处理后的结果会当作当前参数传递给toString函数，执行的结果保存到vnode中的text属性中\"]},\"97\":{\"h\":\"slot\",\"t\":[\"在HTML中slot元素，作为webComponents技术套件的一部分，是web组件内的一个占位符，该占位符可以在后期使用自己的标记语言填充\"]},\"98\":{\"h\":\"场景\",\"t\":[\"通过slot插槽向组件内部指定位置传递内容，完成这个复用组件在不同场景的应用 比如布局组件、表格列、下拉选、弹框显示内容等。\"]},\"99\":{\"h\":\"分类\",\"t\":[\"默认插槽\",\"具名插槽\",\"作用域插槽 可获取子组件的信息\"]},\"100\":{\"h\":\"原理\",\"t\":[\"slot本质上是返回vnode的函数，vue组件渲染到页面上需要经过templete=>render=>vnode=>dom过程\",\"_v表示穿插普通文本节点，_t表示渲染插槽的函数\"]},\"101\":{\"h\":\"虚拟dom\",\"t\":[\"虚拟DOM是对一层真实DOM的抽象，以js对象作为基础的树，用对象的属性来描述节点，最终可以通过一系列操作使这棵树映射到真实环境上。\",\"在js对象中，虚拟DOM表现为一个Object对象。并且至少包含签名（tag）、属性（attrs）和子元素对象（children）\"]},\"102\":{\"h\":\"为什么需要\",\"t\":[\"DOM是很慢的，页面的性能问题，大部分是由DOM操作引起的。 一次操作时，需要更新10个dom节点，浏览器会依次执行10次更新操作。 而通过vnode，同样的更新10个dom节点，虚拟dom不会立即操作dom，而是将这10次更新内容保存在本地的一个js对象中，最终将这个js对象一次性attach到dom树上，避免大量的无谓计算。\"]},\"103\":{\"h\":\"错误处理\",\"t\":[\"主要的错误来源包括：\",\"后端接口错误\",\"代码中本身逻辑错误 设置全局错误处理函数 生命周期钩子\"]},\"104\":{\"h\":\"vue权限管理\",\"t\":[\"权限控制，确保用户只能访问到被分配的资源 前端权限归根结底是请求的发起权，页面加载触发、按钮点击触发\",\"可以分为四个方面：\",\"接口权限 jwt验证\",\"按钮权限 \",\"v-if\",\"自定义指令\",\"菜单权限 \",\"菜单与路由分离，菜单由后端返回，缺点：菜单与路由做一一对应，全局路由守卫里，每次路由跳转都要做判断\",\"菜单和路由都有后端返回，缺点：全局路由守卫里，每次路由跳转都要做判断；前后端配合要求更高\",\"路由权限 \",\"在路由上标记相应的权限信息，每次路由跳转前做校验\",\"四种缺点： \",\"如果路由很多，对性能会有影响\",\"全局路由守卫里，每次路由跳转都要做权限判断\",\"菜单信息写死在前端，要改个文字或权限信息，都需要重新编译\",\"菜单和路由耦合在一起，定义路由的时候还有添加菜单显示标题，图表之类的信息，而且路由不一定作为菜单显示，还需要更多的字段进行标识\",\"初始化，先挂在不需要权限控制的路由，用户登陆后，获取用户的权限信息，筛选出有权限的路由，在全局路由守卫中调用addRoutes添加路由\",\"缺点： \",\"全局守卫里，每次路由跳转都要做判断\",\"菜单信息写死在前端，要改个文字或权限信息，都需要重新编译\",\"菜单和路由耦合在一起，定义路由的时候还有添加菜单显示标题，图表之类的信息，而且路由不一定作为菜单显示，还需要更多的的字段进行标识\"]},\"105\":{\"h\":\"keep-alive\",\"t\":[\"能在组件切换过程中将状态保留在内存中，防止重复渲染dom 可以设置以下props属性：\",\"include\",\"exclude\",\"max 设置了缓存的组件会多出来两个生命周期钩子（activated、deactivated）\"]},\"106\":{\"h\":\"场景\",\"t\":[\"首页-列表页-商详页-再返回，列表页应该缓存 首页-列表页-商详页-返回列表页（缓存-返回到首页（缓存-再次进入列表页（不缓存 利用路由元信息，在keep-alive判断是否需要缓存\"]},\"107\":{\"h\":\"获取缓存后组件的数据\",\"t\":[\"每次组件渲染时，都会执行beforeRouteEnter,next方法中可以拿到组件实例，vm.getData\",\"缓存的组件被激活时，都会执行actived钩子，可以从里面拿到\"]},\"108\":{\"h\":\"SPA\",\"t\":[\"SPA，单页应用SPA是一种网络应用程序或网站的模型，通过动态重写当前页面来与用户交互\",\"和MPA多页应用的区别\"]},\"109\":{\"h\":\"部署到服务器后404\",\"t\":[\"在history模式下的问题，但在hash模式下没有问题 history的路由切换会被当成http请求 配置将任何页面重定向到index.html，把路由交给前端处理\"]},\"110\":{\"h\":\"vue3\",\"t\":[\"速度更快、体积减少、更易维护、更接近原生、更易于使用\",\"比较：\",\"重写了虚拟dom实现\",\"编译模板优化\",\"更高效的组件初始化\",\"undate性能提高\",\"SSR速度提高2~3倍\"]},\"111\":{\"h\":\"新特性\",\"t\":[\"framents 支持多个根节点\",\"teleport 传送，在逻辑位置写模板代码，然后再vue范围之外渲染他 它可以出现在任何地方\",\"组合式api\",\"createRenderer 自定义渲染器，将vue的开发模型扩展到其他平台\"]},\"112\":{\"h\":\"vue3优化\",\"t\":[\"diff算法优化： 对会发生变化的地方增加了flag标记，变化时直接找到该地方进行比较\",\"静态提升： 对不参与更新的元素，会做静态提升，只会被创建一次，渲染时直接复用\",\"事件监听缓存： 默认情况下绑定事件行为会被视为动态绑定，所以每次都会追踪他的变化\",\"SSR优化： 当静态内容大到一定量级时候，会用createStaticVNode方法在客户端去生成一个static node，这些静态node，会被直接innerHtml，就不需要创建对象，然后根据对象渲染\",\"源码体积 移除了一些不常用的API，使用了TreeShanking，不使用的内容都会被摇掉\"]},\"113\":{\"h\":\"响应式系统\",\"t\":[\"vue2使用defineProperty来劫持整个对象，深度遍历为每个属性添加getter和setter实现响应式 vue3采用proxy重写了响应式系统，proxy可以对整个对象进行监听，不需要深度遍历\",\"监听动态属性的添加\",\"监听数组的索引和length属性\",\"监听删除属性\",\"defineproperty和proxy实现的区别： 原理，数据更新后，通知相关的依赖函数 defineproperty无法劫持到对象的删除和添加属性的操作，动态的属性不具备响应式，深层的监听也造成了性能的极大问题 proxy劫持整个对象的基本操作，而不是某个属性，多达13种拦截方法\"]},\"114\":{\"c\":[\"JS框架\"]},\"115\":{\"h\":\"小程序\",\"t\":[\"相比h5，小程序与其的区别有如下：\",\"运行环境：基于浏览器内核重构的内置解析器\",\"系统权限：获得更多的系统权限，如网络通讯状态、数据缓存能力\",\"渲染机制：逻辑层和渲染层分开\"]},\"116\":{\"h\":\"生命周期\",\"t\":[\"应用的生命周期 |生命周期|说明| |---|---| |onLaunch|初始化完成时触发，全局只触发一次| |onShow|启动，或从后台进入前台显示时触发| |onHide|从前台进入后台时触发| |onError|发生脚本错误或API调用报错时触发| |onPageNotFound|打开的页面不存在时触发| |onUnhandleRejection|未处理的Promise拒绝时触发| |onThemeChange|系统切换主题时触发|\",\"页面的生命周期 |生命周期|值|作用| |---|---|---| |onLoad|监听页面加载|发送请求获取数据| |onShow|监听页面显示|请求数据| |onReady|页面初次渲染完成|获取页面元素| |onHdie|页面隐藏|终止任务，如定时器或播放音乐| |onUnload|页面卸载|终止任务|\",\"组件的生命周期 |生命周期|说明| |---|---| |created|组件创建完成| |attached|进入页面节点树| |ready|在渲染线程被初始化已经完成| |moved|在组件实例被移动到节点树另一个位置时执行| |detached|在组件实例被从页面节点树移除时执行| |error|组件方法抛出错误|\",\"组件所在页面的生命周期 |生命周期|说明| |---|---| |show|组件所在的页面被展示时执行| |hide|组件所在的页面被隐藏时执行|\"]},\"117\":{\"h\":\"执行过程\",\"t\":[\"应用生命周期\",\"打开小程序，触发onLaunch\",\"初始化完成后，触发onShow\",\"前台进入后台，触发onHide\",\"后台进入前台，触发onShow\",\"后台运行一定时间，或系统资源占用高，会被销毁\",\"页面生命周期\",\"小程序注册完成后，加载页面，触发onLoad\",\"页面载入后触发onShow，显示页面\",\"首次显示页面，会触发onReady方法，渲染页面元素和样式，一个页面只会调用一次\",\"后台运行或跳转到其他页面时，触发onHdie\",\"后台进入前台或重新进入页面时，触发onShow\",\"重定向方法wx.redirectTo()或关闭当前页面返回上一页wx.navigationBack()，触发onUnload\",\"执行顺序如下：\",\"打开小程序：(app)onLaunch=>(app)onShow=>(pages)onLoad=>(pages)onShow=>(pages)onReady\",\"进入下一个页面：(pages)onHdie=>(next)onLoad=>(next)onShow=>(next)onReady\",\"返回上一个页面：(curr)onLaunch=>(pre)onShow\",\"离开小程序：(app)onHdie\",\"再次进入：小程序未销毁=>(app)onShow(执行以上的顺序),小程序销毁，(app)onLaunch重新开始执行\"]},\"118\":{\"h\":\"登录流程\",\"t\":[\"在小程序中，通过微信提供的登录能力，可以轻松的获取微信提供的用户身份标识，快速简历小程序内的用户体系，从而实现登录功能。 涉及到openid和code的概念：\",\"wx.login()方法生成code，将code作为参数传递为微信服务器指定接口，就可以获取用户的openid\",\"对于每个小程序，微信都会将用户的微信ID映射出一个小程序openid，作为用户在这个小程序的唯一标识\",\"通过wx.login()获取到用户的code判断用户是否授权读取用户信息，调用wx.getUserInfo读取用户数据\",\"由于小程序后台授权域名无法授权微信的域名，需要自身后端调用微信服务器获取用户信息\",\"wx.request()方法请求开发者服务器，后端把appid、appsecret、code一起发送到微信服务器。\",\"微信服务器返回openid、以及本次会话密钥session_key\",\"后端从数据库中查找openid，如果没有查到记录，说明该用户没有注册\",\"session_key是对用户数据加密签名的密钥。\",\"生成session并返回给小程序\",\"小程序将session存到storage里面\",\"下次请求时，先从storage里面读取，然后带给服务端\",\"服务端比对session对应的记录，然后校验有效期\"]},\"119\":{\"h\":\"检验登录状态是否过期\",\"t\":[\"通常做法是在登陆状态中保存有效期数据，该数据应该在服务端校验登陆状态和约定时间做对比 这种做法需要将本地的登陆状态发送到服务端，服务端判断无效登陆状态时再返回需重新执行登录过程的消息给小程序\",\"调用wx.checkSession检验微信登陆状态是否过期 如果过期，发起完整的登录流程 不过期，继续使用本地保存的自定义登陆状态\"]},\"120\":{\"h\":\"路由跳转\",\"t\":[\"微信小程序拥有web和application共同的特征，每个页面可以看成一个pageModel，pageModel全部以栈的形式进行管理\"]},\"121\":{\"h\":\"跳转方式\",\"t\":[\"wx.navigateTo(Object) 缓存当前页面，跳转到应用内的某个页面，通过wx.navigateBack(Object)返回，页面之间通过hide、show切换\",\"wx.redirectTo(Object) 微信的页面栈有10层，过多的页面会挤占微信分配给小程序的内存，该方法的跳转不会缓存页面，所以切换时页面需要重新加载。\",\"wx.switchTab(Object) 针对tabr页面的跳转，会关闭其他的非tabar的页面\",\"wx.navigateBack(Object) 关闭当前页面，返回上一级或多级页面，通过getCurrentPages()获取当前的页面栈 页面不断出栈，直到目标返回页\",\"wx.reLaunch(Object) 关闭所有的页面，打开到某个页面，返回的时候跳转到首页\"]},\"122\":{\"h\":\"发布流程\",\"t\":[\"上传代码\",\"提交审核\",\"发布版本\"]},\"123\":{\"h\":\"支付流程\",\"t\":[\"小程序为电商类小程序，提供了非常完善、优秀、安全的支付功能 在小程序中调用微信的API完成支付功能，方便，快捷\"]},\"124\":{\"h\":\"实现原理\",\"t\":[\"网页开发中，渲染线程和脚本是互斥的，长时间的脚本运行会导致页面失去响应，js是单线程的 在小程序中，选择了Hybrid的渲染方式，将逻辑层和视图层分开，双线程同时运行，视图层使用webview进行渲染，逻辑层允许在jscore。\",\"渲染层：界面渲染相关的任务全都在webview线程里执行。一个小程序存在多个界面，所以渲染层存在多个webview线程\",\"逻辑层：jscore线程运行JS脚本，在这个环境下执行的都是有关小程序业务逻辑的代码\"]},\"125\":{\"h\":\"通信\",\"t\":[\"小程序在渲染层，宿主环境会被wxml转为对应的JS对象 在逻辑层发生数据变更的时候，通过宿主环境提供的setData()方法把数据从逻辑层传递到渲染层，再经过对比前后差异，把差异应用在原来的DOM树上，渲染出正确的视图 当视图存在交互时，例如按钮触发，这类反馈应该通知给开发者的逻辑层，需要将对应的处理状态呈现给用户\",\"对于事件的分发处理，微信进行了特殊的处理，将所有的事件拦截后，丢到逻辑层交给js处理\",\" 小程序是基于双线程的，在任何逻辑层和视图层之间的数据传递都是线程间的通信，会有一定的延时，因此在小程序中，页面更新是异步操作 异步会使运行时序变得复杂一些，如果渲染层工作较快完成，就到等待逻辑层的指令才能进行下一步工作。 因此逻辑层和渲染层之间需要有一定的机制保证时序正确，在每个小程序页面的生命周期中，存在着若干次页面数据通信。\"]},\"126\":{\"h\":\"运行机制\",\"t\":[\"小程序启动运行有两种情况：\",\"冷启动：首次打开、主动销毁后再次打开的情况，此时小程序需要重新加载启动，即为冷启动 每次冷启动时，都会检查是否有更新版本，如果有，异步下载新版本的代码包，并同时用客户端本地的包进行启动，即新版本的小程序需要等下一次冷启动才会应用上。\",\"热启动：已经打开过小程序，在一段时间内再次打开，无需重新启动，只需要将后台的小程序切换到前台，这个过程就是热启动\",\"alt text\"]},\"127\":{\"h\":\"优化手段\",\"t\":[\"小程序首次启动前，微信会为小程序准备好通用的运行环境，如运行中线程和基础库的初始化 然后开始进入启动状态，展示一个固定的启动界面，包含小程序的图标、名称和加载提示图标。\",\"下载小程序代码包 经过编译、压缩、打包之后的代码包\",\"加载小程序代码包\",\"初始化小程序手段\"]},\"128\":{\"h\":\"加载\",\"t\":[\"控制小程序包的大小：\",\"压缩代码\",\"清理无用的代码和资源文件\",\"减少资源包中的图片等资源的数量和大小，图片资源压缩率有限 并且可以采用分包加载的操作，将用户访问率高的页面放在主包内，将访问率低的页面放入子包内，按需加载 当用户点击到子包的目录时，还有一个代码包的下载过程，子包也不建议太大。或者使用子包预加载技术，并不需要等到用户点击到子包页面后再下载子包。\"]},\"129\":{\"h\":\"渲染\",\"t\":[\"请求在onLoad就加载，尽量减少不必要的https请求，可u使用getStorageSync()及setStorageSycn()方法将数据存储在本地 可以在前置页面将一些有用的字段带到当前页，进行首次渲染(列表页的某些数据=>详情页)，没有数据的模块可以进行骨架屏的占位 提高页面的多次渲染效率主要在于正确使用setData：\",\"将多次的setData合并为一次setData\",\"数据通信的性能与数据量正相关，因而如果有一些数据字段不在界面中展示且数据结构比较复杂或包含长字符串，则不应使用setData来设置这些数据\",\"与界面渲染无关的数据最好不要设置在data中，可u考虑设置在page对象的其他字段下\"]},\"130\":{\"c\":[\"JS框架\"]},\"131\":{\"h\":\"操作执行优化\",\"t\":[\"操作执行优化，通过防抖、节流来减少操作的重复执行，来提高性能。\"]},\"132\":{\"h\":\"\",\"t\":[\"含义\",\"事件触发时，在n秒内函数只能执行一次。如果事件连续触发，重新计时。\",\"一个防抖函数具有以下要点：\",\"高阶函数：返回一个具有防抖能力的函数。\",\"计时功能：在连续触发时，重新计算延迟时间。\",\"取消执行：在连续触发时，取消上一次的执行。\",\"目的\",\"开发过程中，有一些事件会频繁触发，例如onresize、scroll、mousemove、mousehover等。一秒之内可能执行几十次、几百次，如果函数内部操作了DOM，甚至可以造成浏览器卡死、崩溃。除此之外，短时间内重复的 ajax 调用不仅会造成数据关系的混乱，还会造成网络拥塞，增加服务器压力。\"]},\"133\":{\"h\":\"\",\"t\":[\"function debounce(fn,wait){ var timer=null; return function(){ // 保存事件参数 let arg = arguments; // 函数调用时，清除计时器 if(timer !== null){ clearTimeout(timer); } // 开启计时 timer = setTimeout(()=>{ // 若不改变this指向，则会指向fn定义环境 fn.apply(this,arg) },wait); } }\"]},\"134\":{\"h\":\"\",\"t\":[\"搜索框搜索输入。只需用户最后一次输入完，再发送请求；\",\"用户名、手机号、邮箱输入验证；\",\"浏览器窗口大小改变后，只需窗口调整完后，再执行resize事件中的代码，防止重复渲染。\"]},\"135\":{\"h\":\"\",\"t\":[\"含义\",\"无论触发多少次事件，在一定时间间隔内，只会执行一次。\",\"一个节流函数具有以下要点：\",\"高阶函数：返回一个具有节流能力的函数。\",\"计时功能：在连续触发时，间隔时间是否达到。\",\"间隔执行：在连续触发时，是否执行。\"]},\"136\":{\"h\":\"最佳实践\",\"t\":[\"function throttle(fn, delay) { let timer = null; return function () { // 记录事件参数 let args = arguments; // 如果定时器为空，则上次间隔的函数执行完成 if (!timer) { // 开启定时器 timer = setTimeout(() => { // 执行函数 fn.apply(this, args); // 函数执行完毕后重置定时器 timer = null; }, delay); } } }\"]},\"137\":{\"h\":\"\",\"t\":[\"输入框的联想，可以限定用户在输入时，只在每两秒钟响应一次联想。\",\"搜索框输入查询，如果用户一直在输入中，没有必要不停地调用去请求服务端接口，等用户停止输入的时候，再调用。设置一个合适的时间间隔，有效减轻服务端压力。\",\"表单验证\",\"按钮提交事件。\"]},\"138\":{\"h\":\"事件委托，事件代理：Event Delegation\",\"t\":[\"含义\",\"基于DOM元素的事件冒泡，把多个子元素的响应事件委托给父元素。减少事件，来降低内存的使用。\",\"事件委托的要求：\",\"多个子元素：如果是一个子元素，不需要冒泡。\",\"相同的响应事件：如果子元素之间，相同的响应事件过少，也没有必要。\",\"相同的事件处理：如果子元素之间，相同的响应处理过少，也没有必要。\"]},\"139\":{\"h\":\"最佳实践\",\"t\":[\"<body> <button id=\\\"btn\\\">点击新增li标签</button> <ul id=\\\"list\\\"> <li>列表项</li> <li>列表项</li> <li>列表项</li> <li>列表项</li> <li>列表项</li> <li>列表项</li> </ul> <script> var list = document.getElementById('list'); var btn = document.getElementById('btn'); list.onclick = function(e){ //点击的子元素 e.target.style.color = 'blue'; } btn.onclick = function(){ var new_li = document.createElement('li'); new_li.innerHTML = '新增列表项'; list.appendChild(new_li); } </script> </body>\"]},\"140\":{\"h\":\"应用场景\",\"t\":[\"列表数据、瀑布数据等需要大量绑定相同功能的函数场景。\"]},\"141\":{\"h\":\"\"},\"142\":{\"c\":[\"性能优化\"]},\"143\":{\"c\":[\"防抖\",\"节流\",\"事件委托\"]},\"144\":{\"h\":\"资源加载优化\",\"t\":[\"资源加载优化，通过按需加载、延迟加载资源、缓存资源来减少阻塞和服务器请求。\"]},\"145\":{\"h\":\"\",\"t\":[\"根据用户的需求，动态地加载所需的组件、模块或功能。\"]},\"146\":{\"h\":\"\",\"t\":[\"动态导入是ES6提供的新特性，允许在运行时动态的导入模块。使用**import()**函数。 例如，你可以根据用户的设备类型、网络状况或其他条件来决定是否加载某个模块。\",\"if (navigator.connection.saveData) { // 如果用户开启了数据节省模式，则不加载某些资源 } else { import('./heavy-module.js').then(module => { module.default(); }); }\",\"在工程化环境中还有以下方式：\",\"在框架中，例如vue的componet动态组件指定是一个异步组件时，Vue会在需要时加载该组件。\",\"<template> <component :is=\\\"currentComponent\\\"></component> </template> <script> const AsyncComponent = () => import('./components/AsyncComponent.vue'); export default { data() { return { currentComponent: AsyncComponent }; } }; </script>\",\"2.vue-router配置路由，使用webpack的require.ensure技术，也可以实现按需加载。\",\"// 具有相同chunk名的模块会被打包到一起。 const Province = r => require.ensure([], () => r(require('@/components/Province.vue')), 'chunkname1') const Segment = r => require.ensure([], () => r(require('@/components/Segment.vue')), 'chunkname1') const Loading = r => require.ensure([], () => r(require('@/components/Loading.vue')), 'chunkname3') const User = r => require.ensure([], () => r(require('@/components/User.vue')), 'chunkname3')\"]},\"147\":{\"h\":\"\",\"t\":[\"代码分割是一种将代码拆分为多个小块（chunk）的方法，以便按需加载。Webpack等构建工具提供了代码分割的支持。\",\"// 在webpack中通过require.ensure和import()来定义代码分割点 // 这个新的chunk会被webpack通过jsonp来异步加载 require.ensure(dependencies: String[], callback: function(require), chunkName: String) // 更好的分割方式 import(chunk) .then( res => {}) .catch(err => {});\"]},\"148\":{\"h\":\"\",\"t\":[\"推迟加载非关键内容或资源，直到需要时才进行加载。侧重于图片、视频等媒体资源。\"]},\"149\":{\"h\":\"HTML5的loading属性\",\"t\":[\"H5的新增属性，可以在img标签中直接使用来实现懒加载。\",\"<img src=\\\"image.jpg\\\" alt=\\\"example\\\" loading=\\\"lazy\\\">\"]},\"150\":{\"h\":\"\",\"t\":[\"用于懒加载图片或其他DOM元素。当元素进入视口时才加载相关资源。\",\"const img = document.querySelector('img'); const observer = new IntersectionObserver((entries, observer) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.src = entry.target.dataset.src; observer.unobserve(entry.target); } }); }); observer.observe(img);\"]},\"151\":{\"h\":\"\",\"t\":[\"通过缓存资源，减少对服务器的重复请求。根据HTTP响应头内容的不同分两种：\",\"强缓存：当缓存过期时，强制向服务器请求资源。\",\"协商缓存：当缓存过期时，协商服务器是否更新资源。\"]},\"152\":{\"h\":\"\",\"t\":[\"当web应用获取资源时，先从本地获取，如果有就直接用，否则，重新发起请求。控制强缓存的标头分别是Expires和Cache-Control，Cache-Control的优先级高于Expires。\"]},\"153\":{\"h\":\"\",\"t\":[\"在HTTP/1.0中，有效期是通过Expires来指定的。Expires标头使用明确的时间，而不是经过的时间来指定缓存的生命周期。\",\"Expires: Wed, 21 Oct 2015 07:28:00 GMT\",\"由于HTTP/1.1已被广泛使用，无需特地提供 Expires。\"]},\"154\":{\"h\":\"\",\"t\":[\"此字段拥有强大的缓存控制能力。常见的字段有：\",\"max-age：设置缓存的最大有效期，单位s。资源会缓存到本地。\",\"no-cache：不强制缓存，每次都会协商缓存，确定资源是否有变更。资源会缓存到本地。\",\"no-store：不进行强缓存、协商缓存，直接拉取最新的资源。资源不会缓存到本地。\",\"private：私有缓存，针对特定客户端的缓存，例如个性化内容。\",\"public：CDN、客户端、代理服务器都可以缓存。\",\"Cache-Control: max-age=604800\"]},\"155\":{\"h\":\"\",\"t\":[\"又称为对比缓存、弱缓存。当资源到期时，会协商服务器资源是否修改，若无修改过则使用本地资源，并更新资源的有效期。 控制协商缓存的标头分别是Last-Modified/If-Modified-Since和Etag/If-None-Match。\"]},\"156\":{\"h\":\"：上一次的修改时间\",\"t\":[\"当缓存过期时，Last-Modified值放入If-Modified-Since标头发送到服务器。服务器会核对资源的修改时间是否一致，资源未修改返回304 Not Modified。 收到该响应后，客户端将过期缓存恢复为有效的。替代方案是Etag/If-None-Match。\"]},\"157\":{\"h\":\"：文件指纹\",\"t\":[\"Etag标头的值是服务器生成的任意值。当文件被修改后，Etag会得到更新。 当缓存过期时，Etag的值放入If-None-Match标头发送到服务器。服务器会核对资源的Etag与If-None-Match是否一致，资源未修改返回304 Not Modified。\"]},\"158\":{\"h\":\"\",\"t\":[\"当浏览器请求一个网站的时候，会加载各种各样的资源，比如：HTML文档、图片、CSS和JS等文件。 对于一些不经常变的内容，浏览器会将他们保存在本地的文件中，下次访问相同网站的时候，直接加载这些资源，加速访问。 优点：\",\"减少页面加载时间；\",\"减少服务器负载；\"]},\"159\":{\"h\":\"\",\"t\":[\"解析IP地址的方式，就是查询DNS映射表。 DNS查询过程大约消耗20毫秒，在DNS查询过程中，浏览器什么都不会做，保持空白。如果DNS查询很多，网页性能会受到很大影响，因此需要用到DNS缓存。 不同浏览器的缓存机制不同： IE对DNS记录默认的缓存时间为30分钟，Firefox对DNS记录默认的缓存时间为1分钟，Chrome对DNS记录默认的缓存时间为1分钟。\",\"缓存时间长：减少DNS的重复查找，节省时间。\",\"缓存时间短：及时检测服务器的IP变化，保证访问的正确性。\"]},\"160\":{\"h\":\"\"},\"161\":{\"c\":[\"性能优化\"]},\"162\":{\"c\":[\"按需加载\",\"延迟加载\",\"缓存\"]},\"163\":{\"h\":\"性能优化\"},\"164\":{\"c\":[\"性能优化\"]},\"165\":{\"h\":\"资源体积优化\",\"t\":[\"资源体积优化，通过压缩，优化图片等手段，提高资源的加载速度。\"]},\"166\":{\"h\":\"\",\"t\":[\"采用一些压缩方案，减少静态文件的体积。这样就可以相对的节约宽带，对这些静态文件的加载速度也会得到提升。\",\"注意\",\"针对工程化项目才可以使用打包工具的gizp算法。\"]},\"167\":{\"h\":\"配置流程\",\"t\":[\"下载打包工具匹配的gzip插件。\",\"配置到打包工具中。\",\"通知后端开启gzip。\"]},\"168\":{\"h\":\"最佳实践\",\"t\":[\"Vue CLI项目\",\"npm install compression-webpack-plugin@6.1.1\",\"// vue.config.js中配置插件 const CompressionPlugin = require('compression-webpack-plugin'); module.exports = { chainWebpack(config) { // ...... }, configureWebpack: config => { // 开发环境不配置 if (process.env.NODE_ENV !== 'production') return // 生产环境才去配置 return { plugins: [ new CompressionPlugin({ //此插件不能使用太高的版本，否则报错：TypeError: Cannot read property 'tapPromise' of undefined // filename: \\\"[path][base].gz\\\", // 这种方式是默认的，多个文件压缩就有多个.gz文件，建议使用下方的写法 filename: '[path].gz[query]', // 使得多个.gz文件合并成一个文件，这种方式压缩后的文件少，建议使用 algorithm: 'gzip', // 匹配要压缩的文件，这里是给html。 test: /\\\\.js$|\\\\.css$|\\\\.html$|\\\\.ttf$|\\\\.eot$|\\\\.woff$/, //需要压缩的最小值 threshold: 10240, minRatio: 0.8, //是否删除原有静态资源文件，即只保留压缩后的.gz文件，建议这个置为false，还保留源文件。以防： // 假如出现访问.gz文件访问不到的时候，还可以访问源文件双重保障 deleteOriginalAssets: false }) ] } }, };\",\"<!-- 后端nginx配置 --> server { listen 80; server_name localhost; location / { try_files $uri $uri/ /index.html; root C:/nginx-1.18.0/html/gzip/dist; index index.html index.htm; } location /api/ { proxy_pass http://localhost:6666/; } gzip on; gzip_min_length 4k; gzip_buffers 16 8k; gzip_http_version 1.1; gzip_comp_level 2; gzip_types text/plain application/x-javascript application/javascript text/javascript text/css application/xml application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/x-woff font/ttf; <!--是否在http header中添加Vary: Accept-Encoding，一般情况下建议开启 --> gzip_vary on; }\",\"针对使用vite的vue项目\",\"npm install vite-plugin-compression\",\"// vite.config.js中配置插件 import { defineConfig } from 'vite'; import compression from 'vite-plugin-compression'; export default defineConfig({ plugins: [ compression({ verbose: true, // 输出压缩日志 disable: false, // 是否禁用压缩 threshold: 10240, // 对超过10KB的文件进行压缩 algorithm: 'gzip', // 使用gzip压缩 ext: '.gz', // 压缩后文件的扩展名 }), ], });\",\"<!-- 后端nginx配置 --> server { listen 80; server_name localhost; location / { try_files $uri $uri/ /index.html; root C:/nginx-1.18.0/html/gzip/dist; index index.html index.htm; } location /api/ { proxy_pass http://localhost:6666/; } gzip on; gzip_min_length 4k; gzip_buffers 16 8k; gzip_http_version 1.1; gzip_comp_level 2; gzip_types text/plain application/x-javascript application/javascript text/javascript text/css application/xml application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/x-woff font/ttf; <!--是否在http header中添加Vary: Accept-Encoding，一般情况下建议开启 --> gzip_vary on; }\"]},\"169\":{\"h\":\"\",\"t\":[\"将png、jpg、gif的图片替换为webp格式的图片。webp比png、jpg、gif哟组合更优秀的算法，图片体积上也更小，加载更快，占用加载资源的时间更短。 webp提供有损压缩和无损压缩两种方案。\"]},\"170\":{\"c\":[\"性能优化\"]},\"171\":{\"c\":[\"压缩\"]},\"172\":{\"h\":\"SSG静态站点生成\"},\"173\":{\"c\":[\"性能优化\"]},\"174\":{\"c\":[\"SSG\"]},\"175\":{\"h\":\"SSR服务端渲染\"},\"176\":{\"c\":[\"性能优化\"]},\"177\":{\"c\":[\"SSR\",\"局部SSR\"]},\"178\":{\"h\":\"用户体验优化\",\"t\":[\"用户体验优化，通过预加载关键资源、骨架屏、预渲染来优化用户体验。\"]},\"179\":{\"h\":\"\",\"t\":[\"预加载关键资源，如字体、图片、CSS和JS文件。\",\"<link rel=\\\"preload\\\" href=\\\"xxx.css\\\" as=\\\"style\\\"> <link rel=\\\"preload\\\" href=\\\"xxx.js\\\" as=\\\"script\\\"> <link rel=\\\"preload\\\" href=\\\"xxx.woff2\\\" as=\\\"font\\\" type=\\\"font/woff2\\\" crossorigin=\\\"anonymous\\\"> <link rel=\\\"preload\\\" href=\\\"xxx.jpg\\\" as=\\\"image\\\">\",\"配置HTTP/2 SERVER Push\",\"location/{ http2_push /styles/main.css; http2_push /script/main.js; }\"]},\"180\":{\"h\":\"构建工具支持\",\"t\":[\"在webpack中配置资源预加载、DNS解析、提前链接。需要使用ResourceHintWebpackPlugin插件。\",\"// 对按需加载( import() )的模块进行预加载 const HtmlWebpackPlugin = require('html-webpack-plugin'); const { ResourceHintWebpackPlugin } = require('resource-hint-webpack-plugin'); module.exports = { plugins: [ new HtmlWebpackPlugin({ template: './public/index.html', filename: 'index.html', chunks: ['index'], inject: 'body' }), new ResourceHintWebpackPlugin([{ rel: 'preload', include: { type: 'asyncChunks', } }]) ] }\"]},\"181\":{\"h\":\"\",\"t\":[\"如果调研服务器端渲染 (SSR) 只是用来改善少数营销页面（例如 /, /about, /contact 等）的 SEO，那么不如使用预渲染。在构建时简单的生成针对特定路由的静态HTML文件。\",\"SSR\",\"预渲染\",\"运行时\",\"构建时\",\"代码侵入性大\",\"几乎没有侵入性\",\"SEO更彻底\",\"有局限性(动态URL的异步请求)\",\"首屏加载更快\",\"首屏加载块\",\"Node环境，耗费CPU\",\"不需要Node\",\"难度大\",\"难度小\",\"动态内容直出HTML\",\"直出有限，客户端会再次加载\"]},\"182\":{\"h\":\"webpack方案\",\"t\":[\"使用prerender-spa-plugin插件，配置webpack。\",\"const path = require('path'); const PrerenderSPAPlugin = require('prerender-spa-plugin') const Renderer = PrerenderSPAPlugin.PuppeteerRenderer module.exports = { entry: './src/index.js', output: { filename: 'bundle.js', path: path.resolve(__dirname, 'dist'), }, module: { rules: [ { test: /\\\\.jsx?$/, exclude: /node_modules/, use: { loader: 'babel-loader', options: { presets: ['@babel/preset-react'], }, }, }, ], }, plugins: [ new PrerenderSPAPlugin({ //代码打包目录和以前配置的目录保持一致 staticDir: path.join(__dirname, '../dist'), indexPath: path.join(__dirname, '../dist', 'index.html'), //routes：要预渲染的页面访问路由 routes: ['/', '/home', '/freeIp', '/buyMeal', '/getIp', '/getLongIp', '/recharge', '/help/check', '/company/check', '/login'], renderer: new Renderer({ inject: { foo: 'bar' }, // headless：渲染时显示浏览器窗口。对调试很有用。 headless: false }) }) ], resolve: { extensions: ['.js', '.jsx'], }, };\"]},\"183\":{\"h\":\"\",\"t\":[\"骨架屏是一种在页面加载过程中，以占位符形式展示页面结构的技术。它通过显示简单的灰色块和线条，让用户在等待内容加载时获得视觉反馈，提高了用户的满意度。\"]},\"184\":{\"h\":\"UI库方案\",\"t\":[\"使用elementPLus的骨架屏.\",\"<!-- 当资源加载完成时，改变loading --> <template> <el-skeleton :loading=\\\"loading\\\" :animated=\\\"true\\\" /> </template> <script>\"]},\"185\":{\"c\":[\"性能优化\"]},\"186\":{\"c\":[\"预渲染\",\"预加载\",\"骨架屏\"]},\"187\":{\"h\":\"数据渲染优化\",\"t\":[\"针对大量数据的渲染优化，通过分页、虚拟列表、虚拟表格，canvas优化性能。\",\"对于大量数据渲染的时候，JS运算并不是性能的瓶颈，性能的瓶颈主要在于渲染阶段\"]},\"188\":{\"h\":\"\",\"t\":[\"对大量的数据分批渲染，避免同时渲染大量DOM引起的页面卡顿。 用于简单DOM，任务的空闲执行。\"]},\"189\":{\"h\":\"\",\"t\":[\"<ul id=\\\"container1\\\"></ul>\",\"let ul = document.getElementById('container1'); let total = 100000; let once = 20; let page = total/once let index = 0; function loop(curTotal,curIndex){ if(curTotal <= 0){ return false; } // 每页多少条 let pageCount = Math.min(curTotal , once); setTimeout(()=>{ for(let i = 0; i < pageCount; i++){ let li = document.createElement('li'); li.innerText = curIndex + i + ' : ' + ~~(Math.random() * total) ul.appendChild(li) } // 递归 loop(curTotal - pageCount,curIndex + pageCount) },0) } loop(total,index);\",\"缺点 setTimeout会导致明显的闪屏现象。\",\"setTimeout的执行时间并不是确定的。在JS中，setTimeout任务被放进事件队列中，只有主线程执行完才会去检查事件队列中的任务是否需要执行，因此setTimeout的实际执行时间可能会比其设定的时间晚一些。\",\"刷新频率受屏幕分辨率和屏幕尺寸的影响，因此不同设备的刷新频率可能会不同，而setTimeout只能设置一个固定时间间隔，这个时间不一定和屏幕的刷新时间相同。\"]},\"190\":{\"h\":\"\",\"t\":[\"requestAnimationFrame最大的优势是由系统来决定回调函数的执行时机。 requestAnimationFrame的步伐跟着系统的刷新步伐走。它能保证回调函数在屏幕每一次的刷新间隔中只被执行一次，这样就不会引起丢帧现象。\",\"<ul id=\\\"container\\\"></ul>\",\"let ul = document.getElementById('container'); let total = 100000; let once = 20; let page = total/once let index = 0; function loop(curTotal,curIndex){ if(curTotal <= 0){ return false; } let pageCount = Math.min(curTotal , once); window.requestAnimationFrame(function(){ for(let i = 0; i < pageCount; i++){ let li = document.createElement('li'); li.innerText = curIndex + i + ' : ' + ~~(Math.random() * total) ul.appendChild(li) } loop(curTotal - pageCount,curIndex + pageCount) }) } loop(total,index);\"]},\"191\":{\"h\":\"\",\"t\":[\"DocumentFragment是DOM节点，但不是DOM树的一部分，它的变化不会触发DOM树的重新渲染。\",\"<ul id=\\\"container\\\"></ul>\",\"let ul = document.getElementById('container'); let total = 100000; let once = 20; let page = total/once let index = 0; function loop(curTotal,curIndex){ if(curTotal <= 0){ return false; } //每页多少条 let pageCount = Math.min(curTotal , once); window.requestAnimationFrame(function(){ // 创建DocumentFragment let fragment = document.createDocumentFragment(); for(let i = 0; i < pageCount; i++){ let li = document.createElement('li'); li.innerText = curIndex + i + ' : ' + ~~(Math.random() * total) // 加入到DocumentFragment中 fragment.appendChild(li) } // 每页 内容渲染完成以后再加入DOM ul.appendChild(fragment) loop(curTotal - pageCount,curIndex + pageCount) }) } loop(total,index);\"]},\"192\":{\"h\":\"\",\"t\":[\"虚拟列表是按需显示的一种实现，只对可见区域进行渲染，对非可见区域中的数据不渲染或部分渲染的技术。\"]},\"193\":{\"h\":\"\",\"t\":[\"起始索引:可视区域的起始数据索引。\",\"结束索引:可视区域的结束数据索引。\",\"渲染数据:可视区域要渲染的数据。\",\"偏移位置:起始数据在整个列表中的偏移位置。\",\"列表项高度：列表项高不一定是固定的，如何获取合适的高度。\",\"缓冲区域：缓冲区是存在DOM树中，考虑是否渲染的算法。\"]},\"194\":{\"h\":\"\"},\"195\":{\"h\":\"\"},\"196\":{\"c\":[\"性能优化\"]},\"197\":{\"c\":[\"canvas\",\"延迟加载\",\"缓存\"]},\"198\":{\"h\":\"数据类型\"},\"199\":{\"c\":[\"ECMA标准\"]},\"200\":{\"h\":\"操作(算法)约定\"},\"201\":{\"c\":[\"ECMA标准\"]},\"202\":{\"h\":\"运行时语义：Runtime Semantics\",\"t\":[\"在运行时调用的算法(指定语义)称为运行时语义。运行时语义由抽象操作(abstract operations)或语法导向操作(Syntax-Directed Operations)定义。\",\"以下的是一般运行时语义。\"]},\"203\":{\"h\":\"\",\"t\":[\"抽象操作完成接受参数completionRecord（一个完成记录），并返回一个完成记录(规范类型)。此操作用于强调正在返回一个完成记录。在被调用时，它执行以下步骤：\",\"完成语义的一个雷子\",\"Assert: completionRecord is a Completion Record.\",\"ReturncompletionRecord.\"]},\"204\":{\"h\":\"\",\"t\":[\"步骤中提到抛出异常的，如：\",\"Throw a TypeError exception.\",\"意味着与以下内容相同：\",\"Return ThrowCompletion(a newly created TypeError object). :::\"]},\"205\":{\"h\":\"\",\"t\":[\"ReturnIfAbrupt这是一个简写的步骤。算法步骤中提到或等同于以下内容：\",\"ReturnIfAbrupt(argument)。 意味着\",\"Assert：argument is a Completion Record。\",\"If argument is a abrupt completion，return Completion(argument)。\",\"Else, set argument 设置为 argument.[[Value]]。\",\"重要\",\"他的简短含义是：\",\"如果完成记录(步骤1)一个 硬性完成(步骤2)，返回这个完成记录。\",\"否则，完成记录是一个正常完成(步骤3)，将argument 设置为它真正的值。\"]},\"206\":{\"h\":\"\",\"t\":[\"在抽象操作和语法导向操作调用时，前缀为?表示应用ReturnIfAbrupt。\",\"? OperationName(). 等同于以下步骤：\",\"ReturnIfAbrupt(OperationName())。\"]},\"207\":{\"h\":\"\",\"t\":[\"重要\",\"前缀 ! 用来表示抽象操作或语法导向操作的调用绝不会返回一个abrupt completion，并且结果中的完成记录的[[Value]]字段应当代替操作的返回值使用。\",\"Let val be ! OperationName(). 等同于以下步骤：\",\"Let val be OperationName().\",\"Assert: val is a normal completion.\",\"Set val to val.[[Value]].\"]},\"208\":{\"h\":\"\",\"t\":[\"在标准中声明的返回完成记录的抽象操作和所有内置函数中，返回的值传递给NormalCompletion，并使用其结果。 在以下情况不适用：\",\"直接返回应用Completion、NormalCompletion或ThrowCompletion的结果时。\",\"直接返回构建一个完成记录的结果时。\",\"重要\",\"言外之意，一般情况下只要不是 abrupt completion,都是NormalCompletion。\"]},\"209\":{\"c\":[\"ECMA标准\"]},\"210\":{\"h\":\"术语\"},\"211\":{\"h\":\"\"},\"212\":{\"h\":\"\",\"t\":[\"语法导向操作是一系列算法的总和，与产生式绑定。在标准中文法定义了语句的结构，其语义通过语法导向操作进行表达。一条产生式可以绑定多条语法导向操作。 每条产生式的目标符实例都可以通过调用自身的语法导向操作，执行这些逻辑，完成语句语义的表达。\",\"重要\",\"语法导向操作和抽象操作有两种类型：\",\"静态语义。\",\"运行时语义。\",\"脚本的语法导向操作，这里是求值语义。\",\"重要\",\"Runtime Semantics:EvaluationScript:[empty] 1.Return undefined.\",\"可以看出，对于脚本内容的情况返回undefined。\"]},\"213\":{\"h\":\"\",\"t\":[\"ECMA通过算法或描述性要求来表达的额外规则，这些规则与语法的产生式相关联，并称为产生式的静态语义。 还有一种特殊类型的静态语义是先觉错误(Early Error),定义了特定语法产生错误的条件。\",\"语句列表的静态语义(顶层作用域声明)\",\"StatementList:StatementList StatementListItem\",\"Let declarations1 be TopLevelLexicallyScopedDeclarations of StatementList.\",\"Let declarations2 be TopLevelLexicallyScopedDeclarations of StatementListItem.\",\"Return the list-concatenation of declarations1 and declarations2.\"]},\"214\":{\"h\":\"\"},\"215\":{\"h\":\"\",\"t\":[\"在标准中，ECMA语言值以粗体显示。例如null、true。\"]},\"216\":{\"h\":\"\",\"t\":[\"在标准上查看 标准中有两类值，ECMA规范类型值、ECMA语言值。 在比较相等性时，按是否具备标识分为两类：\",\"不具有标识的值：比较时，值或特征相同意味着相等。\",\"具有标识的值：唯一的，只等于它本身。\",\"语言值使用SameValue抽象操作及其传递调用的抽象操作进行相等性比较。这些比较的算法操作决定了ECMAScript 语言值的语言标识。\"]},\"217\":{\"c\":[\"ECMA标准\"]},\"218\":{\"h\":\"文法参数\",\"t\":[\"文法参数(Grammatical Parameters)指在ECMA的产生式中的以 [] 包括的一系列参数。 语法参数是由前缀参数(?,~等)和文法参数(In,Return等)的组合。\",\"参数化的产生式\",\"VariableDeclaration[In] :BindingIdentifier Initializer[?In]\"]},\"219\":{\"h\":\"文法参数的含义\",\"t\":[\"seq:表示是否可以使用数字分隔符；\",\"await:表示是否可以使用await语句；\",\"yield:表示是否可以使用yield语句；\",\"in:表示in是in操作符还是for...in...语句中的「in」；\",\"default:表示是否可以使用无名函数/类；\",\"return:表示是否可以使用return语句；\"]},\"220\":{\"h\":\"文法前缀参数的含义\",\"t\":[\"”+“：表示非终结符可以带有该参数\",\"”~“：表示非终结符不可以带有该参数\",\"”？“：如果目标符有该参数，那么非终结符中也有，否则没有。\",\"当文法参数放在代换式左侧时，文法前缀参数的含义是不一样的\",\"+：表示如果目标符带有该参数，那么这条代换式就存在，否则不存在；\",\"~：表示如果目标符不带有该参数，那么这条代换式存在，否则不存在；\"]},\"221\":{\"h\":\"\",\"t\":[\"ECMA对普通脚本的定义，脚本可以为空。语句列表中不允许使用await、yield、return语句。此时await，yield会被当作普通标识符使用：\",\"脚本产生式\",\"Script:SciptBodyopt\",\"SciptBody:StatementList[~Yield,~Await,~Return]\",\"可以看出，模块也可以为空。模块内容条目中的其中一个代换式，可以使用await语句，不能使用yeild、return。这意味着，await作为关键字使用，而yeild和return可以作为标识符使用。\",\"模块产生式\",\"Module:ModuleBodyopt\",\"ModuleItem:StatementListItem[~Yield,+Await,~Return]\",\"可以看出，如果存在return则存在 return_语句。\",\"重要\",\"StatementList[Return]: [+Return] ReturnStatementExpressionStatement\"]},\"222\":{\"c\":[\"ECMA标准\"]},\"223\":{\"h\":\"句法和词法约定\"},\"224\":{\"c\":[\"ECMA标准\"]},\"225\":{\"h\":\"文法符号\"},\"226\":{\"h\":\"\",\"t\":[\"表示没有产生式的元素，无法继续展开，在ECMA中使用黑色粗体表示。\",\"十六进制字面量产生式\",\"HexIntegerLiteral::0xHexDigits\",\"0x和::为非终结符\"]},\"227\":{\"h\":\"\",\"t\":[\"非终结符号为斜体类型。非终结(也称为产生式)的定义从被定义非终结名称(也称为目标符号，产生式的目标结果)开始，后面跟着一个或多个冒号。然后产生式的一个或多个代换式在后续行跟随。 冒号的数量表示产生式所属的语法。\",\"单个冒号表示句法(语句)的定义。\",\"两个冒号便是此法(词语)的定义。\",\"while语句的产生式(定义)\",\"WhileStatement:while(Expression)Statement\"]},\"228\":{\"h\":\"\",\"t\":[\"下标后缀“opt”，可出现在终结符或非终结符之后，表示一个可选符号。包含可选符号的替代项实际上指定了两个代换式，一个省略可选元素，一个包含它。\",\"while语句的产生式(定义)\",\"VariableDeclaration:BindingIdentifier Initializeropt 是以下的缩写VariableDeclaration:BindingIdentifierBindingIdentifier Initializer\"]},\"229\":{\"h\":\"\",\"t\":[\"当文法定义中的冒号后面跟着“one of”短语时，它们表示其中之一。\",\"NonZeroDigit\",\"NonZeroDigit::one of1 2 3 4 5 6 7 8 9\",\"是以下的缩写\",\"NonZeroDigit::one of123456789\"]},\"230\":{\"h\":\"\",\"t\":[\"生成式的右侧可以使用短语“but not”并指示要排除的扩展来指定不允许某些扩展。\",\"Identifier词法的产生式(定义)\",\"Identifier:IdentifierNamebut notReservedWord\",\"以上表示，标识符的名字不能为保留字。\"]},\"231\":{\"h\":\"\",\"t\":[\"如果产生式的右侧出现“[empty]”这一短语，它表示该产生式的右侧不包含任何终结符号或非终结符号。\",\"参数的产生式\",\"FormalParameters[Yield,Await]:[empty]\",\"以上表示，参数可以为空。\"]},\"232\":{\"h\":\"\",\"t\":[\"短语“[lookahead = seq]”出现在代换式某个位置的右侧，对该位置后面紧跟的内容进行限制。 标准中有如下：\",\"[lookahead = x]:该位置后面必须是 x。\",\"[lookahead ≠ x]:该位置后面不能是 x。\",\"[lookahead ∈ set]：该位置后面跟着的内容必须属于 set。\",\"[lookahead ∉ set]:该位置后面跟着的内容必须不属于 set。\"]},\"233\":{\"h\":\"\",\"t\":[\"如果在句法的生成式的部分右侧出现短语“[no LineTerminator here]”，则表示该生成式是受限生成式。如果在指示位置的输入流中出现 行终结符(LineTerminator)，则不允许使用该生成式。\",\"thorw的代换式\",\"ThrowStatement::throw [no LineTerminator here] Expression;\",\"可以看出throw语句不可以换行。\"]},\"234\":{\"h\":\"\",\"t\":[\"在一些列出所有替代方案不切实际的情况下，使用描述性短语来描述少数非终结符号：\",\"重要\",\"SourceCharacter:: 任意 Unicode 代码点\"]},\"235\":{\"c\":[\"ECMA标准\"]},\"236\":{\"h\":\"ES语言类型\"},\"237\":{\"c\":[\"ECMA标准\"]},\"238\":{\"h\":\"ES规范类型\"},\"239\":{\"c\":[\"ECMA标准\"]},\"240\":{\"h\":\"String类型\"},\"241\":{\"c\":[\"ECMA标准\"]},\"242\":{\"h\":\"String字面量\",\"t\":[\"字符串文本是 0 个或多个 Unicode 码位，用单引号或双引号括起来。\",\"Unicode 码位也可以由转义序列表示。除右引号代码点 U+005C （REVERSE SOLIDUS）、U+000D （回车） 和 U+000A （换行） 之外，所有代码点都可以直接出现在字符串文本中。\",\"任何码位都可以以转义序列的形式出现。String 文本的计算结果为 ECMAScript String 值。生成这些 String 值时，Unicode 码位将按照 11.1.1 中的定义进行 UTF-16 编码。\",\"属于基本多语言平面的码位编码为字符串的单个代码单元元素。所有其他码位都编码为字符串的两个码位元素。\"]},\"243\":{\"h\":\"\",\"t\":[\"有单引号，双引号的写法\",\"不能包含以下之一，单引号、反斜杠、行终结符\",\"\\\\ 与转义序列、行终结符的组合\"]},\"244\":{\"h\":\"\",\"t\":[\"单转义字符( ‘，“，\\\\，b，f，n，r，t，v)\",\"0~9\",\"x\",\"u\"]},\"245\":{\"h\":\"\",\"t\":[\"单转义字符、非转义字符（非转义、非行终结符）\",\"0，不能跟八进制数\",\"旧式八进制转义 \",\"0，不能跟8，9\",\"1~7和八进制数的组合，不能跟八进制数\",\"0~3和八进制数的组合\",\"4~7和八进制数的组合\",\"非八进制十进制转义：8，9\",\"十六进制转义： \",\"x和两个十六进制数的组合\",\"Unicode转义： \",\"u 四个十六进制的组合\",\"u\"]},\"246\":{\"h\":\"先觉错误\",\"t\":[\"在 严格模式(strict mode) 下，转义序列不能使用 旧式八进制转义、非八进制十进制转义。\"]},\"247\":{\"h\":\"在代码块内使用严格模式\",\"t\":[\"字符串文本位于指令” Use Strict“之前，该指令将整个代码块至于严格模式，并强制实施上述规则。\",\"// 使用了旧式八进制转义，出错 function invalid() {\\\"/7\\\";\\\"use strict\\\"}\"]},\"248\":{\"c\":[\"ECMA标准\"]},\"249\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"250\":{\"h\":\"Posts\"},\"251\":{\"h\":\"Version Control\"},\"252\":{\"h\":\"Vue\"}},\"dirtCount\":0,\"index\":[[\"出错\",{\"1\":{\"247\":1}}],[\"出现在代换式某个位置的右侧\",{\"1\":{\"232\":1}}],[\"出现问题时可以用排除法直接移除组件\",{\"1\":{\"84\":1}}],[\"转义序列不能使用\",{\"1\":{\"246\":1}}],[\"转为render语法字符串\",{\"1\":{\"79\":1}}],[\"转为数值类型\",{\"1\":{\"76\":1}}],[\"严格模式\",{\"1\":{\"246\":1}}],[\"严格模式下函数不会被实例化\",{\"1\":{\"16\":1}}],[\"四个十六进制的组合\",{\"1\":{\"245\":1}}],[\"四种缺点\",{\"1\":{\"104\":1}}],[\"十六进制转义\",{\"1\":{\"245\":1}}],[\"十六进制字面量产生式\",{\"1\":{\"226\":1}}],[\"旧式八进制转义\",{\"1\":{\"245\":1,\"246\":1}}],[\"旧节点没有\",{\"1\":{\"82\":1}}],[\"反斜杠\",{\"1\":{\"243\":1}}],[\"属于基本多语言平面的码位编码为字符串的单个代码单元元素\",{\"1\":{\"242\":1}}],[\"属性\",{\"1\":{\"101\":1}}],[\"编码\",{\"1\":{\"242\":1}}],[\"编译模板优化\",{\"1\":{\"110\":1}}],[\"编译条件\",{\"1\":{\"69\":1}}],[\"编译过程\",{\"1\":{\"69\":1}}],[\"之前\",{\"1\":{\"247\":1}}],[\"之外\",{\"1\":{\"242\":1}}],[\"之后对每个子语句进行求值\",{\"1\":{\"27\":1}}],[\"换行\",{\"1\":{\"242\":1}}],[\"回车\",{\"1\":{\"242\":1}}],[\"码位将按照\",{\"1\":{\"242\":1}}],[\"码位也可以由转义序列表示\",{\"1\":{\"242\":1}}],[\"码位\",{\"1\":{\"242\":1}}],[\"个或多个\",{\"1\":{\"242\":1}}],[\"行终结符的组合\",{\"1\":{\"243\":1}}],[\"行终结符\",{\"1\":{\"233\":1,\"243\":1}}],[\"∉\",{\"1\":{\"232\":1}}],[\"∈\",{\"1\":{\"232\":1}}],[\"≠\",{\"1\":{\"232\":1}}],[\"标识符的名字不能为保留字\",{\"1\":{\"230\":1}}],[\"标准中有如下\",{\"1\":{\"232\":1}}],[\"标准中有两类值\",{\"1\":{\"216\":1}}],[\"标准中有五种环境记录器\",{\"1\":{\"21\":1}}],[\"标准中的调用链是这样的\",{\"1\":{\"30\":1}}],[\"标准中宿主可以提高的内容\",{\"1\":{\"8\":1}}],[\"标准使用\",{\"1\":{\"20\":1}}],[\"标准\",{\"1\":{\"13\":1,\"14\":1,\"15\":1}}],[\"标准关于全局对象的定义\",{\"1\":{\"10\":1}}],[\"9\",{\"1\":{\"229\":1,\"245\":2}}],[\"9和a\",{\"1\":{\"50\":1}}],[\"短语\",{\"1\":{\"232\":1}}],[\"短语时\",{\"1\":{\"229\":1}}],[\"短时间内重复的\",{\"1\":{\"132\":1}}],[\"词语\",{\"1\":{\"227\":1}}],[\"词法环境是作用域链的起点\",{\"1\":{\"1\":1}}],[\"两个冒号便是此法\",{\"1\":{\"227\":1}}],[\"冒号的数量表示产生式所属的语法\",{\"1\":{\"227\":1}}],[\"句法和词法约定\",{\"0\":{\"223\":1}}],[\"类\",{\"1\":{\"219\":1}}],[\"yield会被当作普通标识符使用\",{\"1\":{\"221\":1}}],[\"yield\",{\"1\":{\"219\":1,\"221\":1,\"231\":1}}],[\"~return\",{\"1\":{\"221\":2}}],[\"~await\",{\"1\":{\"221\":1}}],[\"~yield\",{\"1\":{\"221\":2}}],[\"~\",{\"1\":{\"220\":2}}],[\"~等\",{\"1\":{\"218\":1}}],[\"~~\",{\"1\":{\"189\":1,\"190\":1,\"191\":1}}],[\"唯一的\",{\"1\":{\"216\":1}}],[\"顶层作用域声明\",{\"1\":{\"213\":1}}],[\"静态语义\",{\"1\":{\"212\":1}}],[\"静态提升\",{\"1\":{\"112\":1}}],[\"语句\",{\"1\":{\"221\":1,\"227\":1}}],[\"语句列表中不允许使用await\",{\"1\":{\"221\":1}}],[\"语句列表的静态语义\",{\"1\":{\"213\":1}}],[\"语句中的\",{\"1\":{\"219\":1}}],[\"语法参数是由前缀参数\",{\"1\":{\"218\":1}}],[\"语法导向操作和抽象操作有两种类型\",{\"1\":{\"212\":1}}],[\"语法导向操作是一系列算法的总和\",{\"1\":{\"212\":1}}],[\"语言值的语言标识\",{\"1\":{\"216\":1}}],[\"语言值使用samevalue抽象操作及其传递调用的抽象操作进行相等性比较\",{\"1\":{\"216\":1}}],[\"语义收集词法声明语句\",{\"1\":{\"16\":1}}],[\"术语\",{\"0\":{\"210\":1}}],[\"言外之意\",{\"1\":{\"208\":1}}],[\"硬性完成\",{\"1\":{\"205\":1}}],[\"步骤3\",{\"1\":{\"205\":1}}],[\"步骤2\",{\"1\":{\"205\":1}}],[\"步骤1\",{\"1\":{\"205\":1}}],[\"步骤中提到抛出异常的\",{\"1\":{\"204\":1}}],[\"意味着\",{\"1\":{\"205\":1}}],[\"意味着与以下内容相同\",{\"1\":{\"204\":1}}],[\"完成语句语义的表达\",{\"1\":{\"212\":1}}],[\"完成语义的一个雷子\",{\"1\":{\"203\":1}}],[\"完成记录是一个正常完成\",{\"1\":{\"205\":1}}],[\"完成这个复用组件在不同场景的应用\",{\"1\":{\"98\":1}}],[\"规范类型\",{\"1\":{\"203\":1}}],[\"抽象操作完成接受参数completionrecord\",{\"1\":{\"203\":1}}],[\"约定\",{\"0\":{\"200\":1}}],[\"算法步骤中提到或等同于以下内容\",{\"1\":{\"205\":1}}],[\"算法\",{\"0\":{\"200\":1}}],[\"操作\",{\"0\":{\"200\":1}}],[\"操作执行优化\",{\"0\":{\"131\":1},\"1\":{\"131\":1}}],[\"考虑是否渲染的算法\",{\"1\":{\"193\":1}}],[\"起始数据在整个列表中的偏移位置\",{\"1\":{\"193\":1}}],[\"起始索引\",{\"1\":{\"193\":1}}],[\"偏移位置\",{\"1\":{\"193\":1}}],[\"内容渲染完成以后再加入dom\",{\"1\":{\"191\":1}}],[\"内部调用parsefloat\",{\"1\":{\"76\":1}}],[\"内部方法创建的\",{\"1\":{\"23\":1}}],[\"刷新频率受屏幕分辨率和屏幕尺寸的影响\",{\"1\":{\"189\":1}}],[\"递归\",{\"1\":{\"189\":1}}],[\"+return\",{\"1\":{\"221\":1}}],[\"+await\",{\"1\":{\"221\":1}}],[\"+\",{\"1\":{\"189\":4,\"190\":4,\"191\":4,\"220\":2}}],[\"+0𝔽\",{\"1\":{\"38\":1}}],[\"任何码位都可以以转义序列的形式出现\",{\"1\":{\"242\":1}}],[\"任何一处协调工作用的服务器发生故障\",{\"1\":{\"49\":1}}],[\"任意\",{\"1\":{\"234\":1}}],[\"任务的空闲执行\",{\"1\":{\"188\":1}}],[\"避免同时渲染大量dom引起的页面卡顿\",{\"1\":{\"188\":1}}],[\"避免大量的无谓计算\",{\"1\":{\"102\":1}}],[\"性能的瓶颈主要在于渲染阶段\",{\"1\":{\"187\":1}}],[\"性能优化\",{\"0\":{\"163\":1},\"2\":{\"142\":1,\"161\":1,\"164\":1,\"170\":1,\"173\":1,\"176\":1,\"185\":1,\"196\":1}}],[\"改变loading\",{\"1\":{\"184\":1}}],[\"让用户在等待内容加载时获得视觉反馈\",{\"1\":{\"183\":1}}],[\"让组件变得像内置标签那样监听根元素的原生事件\",{\"1\":{\"76\":1}}],[\"要预渲染的页面访问路由\",{\"1\":{\"182\":1}}],[\"要改个文字或权限信息\",{\"1\":{\"104\":2}}],[\"难度小\",{\"1\":{\"181\":1}}],[\"难度大\",{\"1\":{\"181\":1}}],[\"耗费cpu\",{\"1\":{\"181\":1}}],[\"几乎没有侵入性\",{\"1\":{\"181\":1}}],[\"几百次\",{\"1\":{\"132\":1}}],[\"预加载\",{\"2\":{\"186\":1}}],[\"预加载关键资源\",{\"1\":{\"179\":1}}],[\"预渲染\",{\"1\":{\"181\":1},\"2\":{\"186\":1}}],[\"预渲染来优化用户体验\",{\"1\":{\"178\":1}}],[\"骨架屏是一种在页面加载过程中\",{\"1\":{\"183\":1}}],[\"骨架屏\",{\"1\":{\"178\":1},\"2\":{\"186\":1}}],[\"局部ssr\",{\"2\":{\"177\":1}}],[\"局部混入\",{\"1\":{\"73\":1}}],[\"占用加载资源的时间更短\",{\"1\":{\"169\":1}}],[\"占用内存小\",{\"1\":{\"47\":1}}],[\"输出压缩日志\",{\"1\":{\"168\":1}}],[\"输入框的联想\",{\"1\":{\"137\":1}}],[\"x和两个十六进制数的组合\",{\"1\":{\"245\":1}}],[\"xxx\",{\"1\":{\"179\":4}}],[\"xml\",{\"1\":{\"168\":2}}],[\"x\",{\"1\":{\"168\":6,\"232\":4,\"244\":1}}],[\"假如出现访问\",{\"1\":{\"168\":1}}],[\"建议这个置为false\",{\"1\":{\"168\":1}}],[\"建议使用\",{\"1\":{\"168\":1}}],[\"建议使用下方的写法\",{\"1\":{\"168\":1}}],[\"8k\",{\"1\":{\"168\":2}}],[\"80\",{\"1\":{\"168\":2}}],[\"8\",{\"1\":{\"168\":1,\"229\":1,\"245\":1}}],[\"8种常规方法\",{\"1\":{\"60\":1}}],[\"匹配要压缩的文件\",{\"1\":{\"168\":1}}],[\"query\",{\"1\":{\"168\":1}}],[\"queryselector\",{\"1\":{\"150\":1}}],[\"延迟加载\",{\"2\":{\"162\":1,\"197\":1}}],[\"延迟加载资源\",{\"1\":{\"144\":1}}],[\"及时检测服务器的ip变化\",{\"1\":{\"159\":1}}],[\"及setstoragesycn\",{\"1\":{\"129\":1}}],[\"节省时间\",{\"1\":{\"159\":1}}],[\"节流\",{\"2\":{\"143\":1}}],[\"节流来减少操作的重复执行\",{\"1\":{\"131\":1}}],[\"加入到documentfragment中\",{\"1\":{\"191\":1}}],[\"加速访问\",{\"1\":{\"158\":1}}],[\"加载更快\",{\"1\":{\"169\":1}}],[\"加载\",{\"0\":{\"128\":1}}],[\"加载小程序代码包\",{\"1\":{\"127\":1}}],[\"加载页面\",{\"1\":{\"117\":1}}],[\"替代方案是etag\",{\"1\":{\"156\":1}}],[\"替换不同的组件快速完成需求\",{\"1\":{\"84\":1}}],[\"替换型\",{\"1\":{\"75\":1}}],[\"收到该响应后\",{\"1\":{\"156\":1}}],[\"收集标识符\",{\"1\":{\"29\":1}}],[\"收集可见var声明\",{\"1\":{\"16\":1}}],[\"弱缓存\",{\"1\":{\"155\":1}}],[\"又称为对比缓存\",{\"1\":{\"155\":1}}],[\"客户端会再次加载\",{\"1\":{\"181\":1}}],[\"客户端将过期缓存恢复为有效的\",{\"1\":{\"156\":1}}],[\"客户端\",{\"1\":{\"154\":1}}],[\"私有缓存\",{\"1\":{\"154\":1}}],[\"确定资源是否有变更\",{\"1\":{\"154\":1}}],[\"确保用户只能访问到被分配的资源\",{\"1\":{\"104\":1}}],[\"确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建\",{\"1\":{\"69\":1}}],[\"确保由不同人所编辑的同一程序文件都得到同步\",{\"1\":{\"40\":1}}],[\"资源体积优化\",{\"0\":{\"165\":1},\"1\":{\"165\":1}}],[\"资源未修改返回304\",{\"1\":{\"156\":1,\"157\":1}}],[\"资源不会缓存到本地\",{\"1\":{\"154\":1}}],[\"资源会缓存到本地\",{\"1\":{\"154\":2}}],[\"资源加载优化\",{\"0\":{\"144\":1},\"1\":{\"144\":1}}],[\"控制协商缓存的标头分别是last\",{\"1\":{\"155\":1}}],[\"控制强缓存的标头分别是expires和cache\",{\"1\":{\"152\":1}}],[\"控制小程序包的大小\",{\"1\":{\"128\":1}}],[\"协商服务器是否更新资源\",{\"1\":{\"151\":1}}],[\"协商缓存\",{\"1\":{\"151\":1,\"154\":1}}],[\"协议相同\",{\"1\":{\"87\":1}}],[\"强制向服务器请求资源\",{\"1\":{\"151\":1}}],[\"强缓存\",{\"1\":{\"151\":1}}],[\"视频等媒体资源\",{\"1\":{\"148\":1}}],[\"视图层使用webview进行渲染\",{\"1\":{\"124\":1}}],[\"视图需要等待队列中所有的数据变化完成后\",{\"1\":{\"77\":1}}],[\"侧重于图片\",{\"1\":{\"148\":1}}],[\"推迟加载非关键内容或资源\",{\"1\":{\"148\":1}}],[\"你可以根据用户的设备类型\",{\"1\":{\"146\":1}}],[\"允许在运行时动态的导入模块\",{\"1\":{\"146\":1}}],[\"允许一个通过这个服务与另一个网络终端进行非直接的连接\",{\"1\":{\"88\":1}}],[\"防抖\",{\"2\":{\"143\":1}}],[\"防止重复渲染\",{\"1\":{\"134\":1}}],[\"防止重复渲染dom\",{\"1\":{\"105\":1}}],[\"防止表单重复提交\",{\"1\":{\"91\":1}}],[\"瀑布数据等需要大量绑定相同功能的函数场景\",{\"1\":{\"140\":1}}],[\"点击的子元素\",{\"1\":{\"139\":1}}],[\"><\",{\"1\":{\"146\":1,\"189\":1,\"190\":1,\"191\":1}}],[\">\",{\"1\":{\"139\":1,\"149\":1,\"168\":4,\"179\":4,\"184\":2}}],[\">点击新增li标签<\",{\"1\":{\"139\":1}}],[\"减少静态文件的体积\",{\"1\":{\"166\":1}}],[\"减少dns的重复查找\",{\"1\":{\"159\":1}}],[\"减少服务器负载\",{\"1\":{\"158\":1}}],[\"减少页面加载时间\",{\"1\":{\"158\":1}}],[\"减少对服务器的重复请求\",{\"1\":{\"151\":1}}],[\"减少事件\",{\"1\":{\"138\":1}}],[\"减少资源包中的图片等资源的数量和大小\",{\"1\":{\"128\":1}}],[\"等同于以下步骤\",{\"1\":{\"206\":1,\"207\":1}}],[\"等\",{\"1\":{\"181\":1}}],[\"等用户停止输入的时候\",{\"1\":{\"137\":1}}],[\"等等\",{\"1\":{\"10\":1}}],[\"搜索框输入查询\",{\"1\":{\"137\":1}}],[\"搜索框搜索输入\",{\"1\":{\"134\":1}}],[\"间隔执行\",{\"1\":{\"135\":1}}],[\"间隔时间是否达到\",{\"1\":{\"135\":1}}],[\"邮箱输入验证\",{\"1\":{\"134\":1}}],[\"手机号\",{\"1\":{\"134\":1}}],[\"手动强制触发重新渲染\",{\"1\":{\"71\":1}}],[\"若无修改过则使用本地资源\",{\"1\":{\"155\":1}}],[\"若不改变this指向\",{\"1\":{\"133\":1}}],[\"若想实现数据与视图更新\",{\"1\":{\"66\":1}}],[\"开始\",{\"1\":{\"227\":1}}],[\"开发环境不配置\",{\"1\":{\"168\":1}}],[\"开发过程中\",{\"1\":{\"132\":1}}],[\"开启定时器\",{\"1\":{\"136\":1}}],[\"开启计时\",{\"1\":{\"133\":1}}],[\"清除计时器\",{\"1\":{\"133\":1}}],[\"清理无用的代码和资源文件\",{\"1\":{\"128\":1}}],[\"除右引号代码点\",{\"1\":{\"242\":1}}],[\"除此之外\",{\"1\":{\"132\":1}}],[\"除了\",{\"1\":{\"26\":1}}],[\"崩溃\",{\"1\":{\"132\":1}}],[\"甚至可以造成浏览器卡死\",{\"1\":{\"132\":1}}],[\"目的\",{\"1\":{\"132\":1}}],[\"取消上一次的执行\",{\"1\":{\"132\":1}}],[\"取消执行\",{\"1\":{\"132\":1}}],[\"取消合并\",{\"1\":{\"55\":1}}],[\"计时功能\",{\"1\":{\"132\":1,\"135\":1}}],[\"高阶函数\",{\"1\":{\"132\":1,\"135\":1}}],[\"来定义代码分割点\",{\"1\":{\"147\":1}}],[\"来降低内存的使用\",{\"1\":{\"138\":1}}],[\"来提高性能\",{\"1\":{\"131\":1}}],[\"来表示作用域\",{\"1\":{\"20\":1}}],[\"与转义序列\",{\"1\":{\"243\":1}}],[\"与产生式绑定\",{\"1\":{\"212\":1}}],[\"与界面渲染无关的数据最好不要设置在data中\",{\"1\":{\"129\":1}}],[\"与参数列表\",{\"1\":{\"36\":1}}],[\"因而如果有一些数据字段不在界面中展示且数据结构比较复杂或包含长字符串\",{\"1\":{\"129\":1}}],[\"因此不同设备的刷新频率可能会不同\",{\"1\":{\"189\":1}}],[\"因此settimeout的实际执行时间可能会比其设定的时间晚一些\",{\"1\":{\"189\":1}}],[\"因此需要用到dns缓存\",{\"1\":{\"159\":1}}],[\"因此逻辑层和渲染层之间需要有一定的机制保证时序正确\",{\"1\":{\"125\":1}}],[\"因此在小程序中\",{\"1\":{\"125\":1}}],[\"因此并不适合多人版本开发\",{\"1\":{\"42\":1}}],[\"尽量减少不必要的https请求\",{\"1\":{\"129\":1}}],[\"请求在onload就加载\",{\"1\":{\"129\":1}}],[\"还有一种特殊类型的静态语义是先觉错误\",{\"1\":{\"213\":1}}],[\"还有一个代码包的下载过程\",{\"1\":{\"128\":1}}],[\"还可以访问源文件双重保障\",{\"1\":{\"168\":1}}],[\"还保留源文件\",{\"1\":{\"168\":1}}],[\"还会造成网络拥塞\",{\"1\":{\"132\":1}}],[\"还需要更多的的字段进行标识\",{\"1\":{\"104\":1}}],[\"还需要更多的字段进行标识\",{\"1\":{\"104\":1}}],[\"按是否具备标识分为两类\",{\"1\":{\"216\":1}}],[\"按需加载\",{\"1\":{\"128\":1},\"2\":{\"162\":1}}],[\"按钮提交事件\",{\"1\":{\"137\":1}}],[\"按钮权限\",{\"1\":{\"104\":1}}],[\"按钮点击触发\",{\"1\":{\"104\":1}}],[\"打包之后的代码包\",{\"1\":{\"127\":1}}],[\"打开到某个页面\",{\"1\":{\"121\":1}}],[\"打开小程序\",{\"1\":{\"117\":2}}],[\"压缩后文件的扩展名\",{\"1\":{\"168\":1}}],[\"压缩代码\",{\"1\":{\"128\":1}}],[\"压缩\",{\"1\":{\"127\":1},\"2\":{\"171\":1}}],[\"经过编译\",{\"1\":{\"127\":1}}],[\"名称和加载提示图标\",{\"1\":{\"127\":1}}],[\"展示一个固定的启动界面\",{\"1\":{\"127\":1}}],[\"热启动\",{\"1\":{\"126\":1}}],[\"即只保留压缩后的\",{\"1\":{\"168\":1}}],[\"即新版本的小程序需要等下一次冷启动才会应用上\",{\"1\":{\"126\":1}}],[\"即为冷启动\",{\"1\":{\"126\":1}}],[\"即f\",{\"1\":{\"81\":2}}],[\"冷启动\",{\"1\":{\"126\":1}}],[\"运行时语义由抽象操作\",{\"1\":{\"202\":1}}],[\"运行时语义\",{\"0\":{\"202\":1},\"1\":{\"212\":1}}],[\"运行时\",{\"1\":{\"181\":1}}],[\"运行机制\",{\"0\":{\"126\":1}}],[\"运行环境\",{\"1\":{\"115\":1}}],[\"运行环境中就有几条作用域链\",{\"1\":{\"20\":1}}],[\"丢到逻辑层交给js处理\",{\"1\":{\"125\":1}}],[\"界面渲染相关的任务全都在webview线程里执行\",{\"1\":{\"124\":1}}],[\"逻辑层\",{\"1\":{\"124\":1}}],[\"逻辑层允许在jscore\",{\"1\":{\"124\":1}}],[\"逻辑层和渲染层分开\",{\"1\":{\"115\":1}}],[\"选择了hybrid的渲染方式\",{\"1\":{\"124\":1}}],[\"长时间的脚本运行会导致页面失去响应\",{\"1\":{\"124\":1}}],[\"网页性能会受到很大影响\",{\"1\":{\"159\":1}}],[\"网页开发中\",{\"1\":{\"124\":1}}],[\"网络状况或其他条件来决定是否加载某个模块\",{\"1\":{\"146\":1}}],[\"网络代理\",{\"1\":{\"88\":1}}],[\"快捷\",{\"1\":{\"123\":1}}],[\"快速简历小程序内的用户体系\",{\"1\":{\"118\":1}}],[\"快速定位问题\",{\"1\":{\"84\":1}}],[\"方便\",{\"1\":{\"123\":1}}],[\"方法将数据存储在本地\",{\"1\":{\"129\":1}}],[\"方法把数据从逻辑层传递到渲染层\",{\"1\":{\"125\":1}}],[\"方法请求开发者服务器\",{\"1\":{\"118\":1}}],[\"方法生成code\",{\"1\":{\"118\":1}}],[\"方法\",{\"0\":{\"88\":1},\"1\":{\"32\":1,\"79\":1}}],[\"安全的支付功能\",{\"1\":{\"123\":1}}],[\"支付流程\",{\"0\":{\"123\":1}}],[\"支持链式调用\",{\"1\":{\"76\":1}}],[\"支持多个根节点\",{\"1\":{\"111\":1}}],[\"支持多人协作开发的版本管理系统将事半功倍\",{\"1\":{\"40\":1}}],[\"支持多功能并行开发\",{\"1\":{\"40\":1}}],[\"上一次的修改时间\",{\"0\":{\"156\":1}}],[\"上一个虚拟节点\",{\"1\":{\"90\":1}}],[\"上传代码\",{\"1\":{\"122\":1}}],[\"针对大量数据的渲染优化\",{\"1\":{\"187\":1}}],[\"针对使用vite的vue项目\",{\"1\":{\"168\":1}}],[\"针对工程化项目才可以使用打包工具的gizp算法\",{\"1\":{\"166\":1}}],[\"针对特定客户端的缓存\",{\"1\":{\"154\":1}}],[\"针对tabr页面的跳转\",{\"1\":{\"121\":1}}],[\"针对相关的realm\",{\"1\":{\"26\":1}}],[\"跳转到应用内的某个页面\",{\"1\":{\"121\":1}}],[\"跳转方式\",{\"0\":{\"121\":1}}],[\"路由跳转\",{\"0\":{\"120\":1}}],[\"路由权限\",{\"1\":{\"104\":1}}],[\"继续使用本地保存的自定义登陆状态\",{\"1\":{\"119\":1}}],[\"发布版本\",{\"1\":{\"122\":1}}],[\"发布流程\",{\"0\":{\"122\":1}}],[\"发起完整的登录流程\",{\"1\":{\"119\":1}}],[\"发现新旧节点d相同\",{\"1\":{\"81\":1}}],[\"检验登录状态是否过期\",{\"0\":{\"119\":1}}],[\"微信会为小程序准备好通用的运行环境\",{\"1\":{\"127\":1}}],[\"微信进行了特殊的处理\",{\"1\":{\"125\":1}}],[\"微信的页面栈有10层\",{\"1\":{\"121\":1}}],[\"微信小程序拥有web和application共同的特征\",{\"1\":{\"120\":1}}],[\"微信服务器返回openid\",{\"1\":{\"118\":1}}],[\"微信都会将用户的微信id映射出一个小程序openid\",{\"1\":{\"118\":1}}],[\"涉及到openid和code的概念\",{\"1\":{\"118\":1}}],[\"登录流程\",{\"0\":{\"118\":1}}],[\"离开小程序\",{\"1\":{\"117\":1}}],[\"首屏加载块\",{\"1\":{\"181\":1}}],[\"首屏加载更快\",{\"1\":{\"181\":1}}],[\"首次打开\",{\"1\":{\"126\":1}}],[\"首次显示页面\",{\"1\":{\"117\":1}}],[\"首页\",{\"1\":{\"106\":2}}],[\"显示页面\",{\"1\":{\"117\":1}}],[\"显然v\",{\"1\":{\"67\":1}}],[\"显然他是语法参数\",{\"1\":{\"37\":1}}],[\"触发onunload\",{\"1\":{\"117\":1}}],[\"触发onhdie\",{\"1\":{\"117\":1}}],[\"触发onhide\",{\"1\":{\"117\":1}}],[\"触发onload\",{\"1\":{\"117\":1}}],[\"触发onlaunch\",{\"1\":{\"117\":1}}],[\"触发onshow\",{\"1\":{\"117\":3}}],[\"触发beforecreate钩子\",{\"1\":{\"79\":2}}],[\"|hide|组件所在的页面被隐藏时执行|\",{\"1\":{\"116\":1}}],[\"|show|组件所在的页面被展示时执行|\",{\"1\":{\"116\":1}}],[\"|error|组件方法抛出错误|\",{\"1\":{\"116\":1}}],[\"|detached|在组件实例被从页面节点树移除时执行|\",{\"1\":{\"116\":1}}],[\"|moved|在组件实例被移动到节点树另一个位置时执行|\",{\"1\":{\"116\":1}}],[\"|ready|在渲染线程被初始化已经完成|\",{\"1\":{\"116\":1}}],[\"|attached|进入页面节点树|\",{\"1\":{\"116\":1}}],[\"|created|组件创建完成|\",{\"1\":{\"116\":1}}],[\"|生命周期|值|作用|\",{\"1\":{\"116\":1}}],[\"|生命周期|说明|\",{\"1\":{\"116\":3}}],[\"|onunload|页面卸载|终止任务|\",{\"1\":{\"116\":1}}],[\"|onunhandlerejection|未处理的promise拒绝时触发|\",{\"1\":{\"116\":1}}],[\"|onhdie|页面隐藏|终止任务\",{\"1\":{\"116\":1}}],[\"|onhide|从前台进入后台时触发|\",{\"1\":{\"116\":1}}],[\"|onready|页面初次渲染完成|获取页面元素|\",{\"1\":{\"116\":1}}],[\"|onshow|监听页面显示|请求数据|\",{\"1\":{\"116\":1}}],[\"|onshow|启动\",{\"1\":{\"116\":1}}],[\"|onload|监听页面加载|发送请求获取数据|\",{\"1\":{\"116\":1}}],[\"|onlaunch|初始化完成时触发\",{\"1\":{\"116\":1}}],[\"|onthemechange|系统切换主题时触发|\",{\"1\":{\"116\":1}}],[\"|onpagenotfound|打开的页面不存在时触发|\",{\"1\":{\"116\":1}}],[\"|onerror|发生脚本错误或api调用报错时触发|\",{\"1\":{\"116\":1}}],[\"|\",{\"1\":{\"116\":13}}],[\"获得更多的系统权限\",{\"1\":{\"115\":1}}],[\"获取当前的页面栈\",{\"1\":{\"121\":1}}],[\"获取到用户的code判断用户是否授权读取用户信息\",{\"1\":{\"118\":1}}],[\"获取缓存后组件的数据\",{\"0\":{\"107\":1}}],[\"获取用户的权限信息\",{\"1\":{\"104\":1}}],[\"获取更新后的dom\",{\"1\":{\"77\":1}}],[\"获取子组件数据\",{\"1\":{\"60\":1}}],[\"系统权限\",{\"1\":{\"115\":1}}],[\"小程序首次启动前\",{\"1\":{\"127\":1}}],[\"小程序启动运行有两种情况\",{\"1\":{\"126\":1}}],[\"小程序是基于双线程的\",{\"1\":{\"125\":1}}],[\"小程序在渲染层\",{\"1\":{\"125\":1}}],[\"小程序为电商类小程序\",{\"1\":{\"123\":1}}],[\"小程序将session存到storage里面\",{\"1\":{\"118\":1}}],[\"小程序销毁\",{\"1\":{\"117\":1}}],[\"小程序未销毁=>\",{\"1\":{\"117\":1}}],[\"小程序注册完成后\",{\"1\":{\"117\":1}}],[\"小程序与其的区别有如下\",{\"1\":{\"115\":1}}],[\"小程序\",{\"0\":{\"115\":1}}],[\"多个文件压缩就有多个\",{\"1\":{\"168\":1}}],[\"多个子元素\",{\"1\":{\"138\":1}}],[\"多达13种拦截方法\",{\"1\":{\"113\":1}}],[\"多人协作并行开发\",{\"1\":{\"40\":1}}],[\"深层的监听也造成了性能的极大问题\",{\"1\":{\"113\":1}}],[\"深度遍历为每个属性添加getter和setter实现响应式\",{\"1\":{\"113\":1}}],[\"动态内容直出html\",{\"1\":{\"181\":1}}],[\"动态url的异步请求\",{\"1\":{\"181\":1}}],[\"动态导入是es6提供的新特性\",{\"1\":{\"146\":1}}],[\"动态地加载所需的组件\",{\"1\":{\"145\":1}}],[\"动态的属性不具备响应式\",{\"1\":{\"113\":1}}],[\"动态添加属性的问题\",{\"0\":{\"64\":1}}],[\"监听删除属性\",{\"1\":{\"113\":1}}],[\"监听数组的索引和length属性\",{\"1\":{\"113\":1}}],[\"监听动态属性的添加\",{\"1\":{\"113\":1}}],[\"监听组件数据\",{\"1\":{\"79\":1}}],[\"响应式系统\",{\"0\":{\"113\":1}}],[\"移除了一些不常用的api\",{\"1\":{\"112\":1}}],[\"渲染数据\",{\"1\":{\"193\":1}}],[\"渲染时显示浏览器窗口\",{\"1\":{\"182\":1}}],[\"渲染时直接复用\",{\"1\":{\"112\":1}}],[\"渲染\",{\"0\":{\"129\":1}}],[\"渲染出正确的视图\",{\"1\":{\"125\":1}}],[\"渲染层\",{\"1\":{\"124\":1}}],[\"渲染线程和脚本是互斥的\",{\"1\":{\"124\":1}}],[\"渲染页面元素和样式\",{\"1\":{\"117\":1}}],[\"渲染机制\",{\"1\":{\"115\":1}}],[\"渲染方法\",{\"1\":{\"79\":1}}],[\"变化时直接找到该地方进行比较\",{\"1\":{\"112\":1}}],[\"变量声明绑定\",{\"1\":{\"26\":1}}],[\"变量环境指向全局环境记录器等\",{\"1\":{\"15\":1}}],[\"传送\",{\"1\":{\"111\":1}}],[\"传给指令的参数\",{\"1\":{\"90\":1}}],[\"更好的分割方式\",{\"1\":{\"147\":1}}],[\"更高效的组件初始化\",{\"1\":{\"110\":1}}],[\"更易于使用\",{\"1\":{\"110\":1}}],[\"更易维护\",{\"1\":{\"110\":1}}],[\"更接近原生\",{\"1\":{\"110\":1}}],[\"更新相应的视图\",{\"1\":{\"82\":1}}],[\"体积减少\",{\"1\":{\"110\":1}}],[\"速度更快\",{\"1\":{\"110\":1}}],[\"配置webpack\",{\"1\":{\"182\":1}}],[\"配置http\",{\"1\":{\"179\":1}}],[\"配置到打包工具中\",{\"1\":{\"167\":1}}],[\"配置流程\",{\"0\":{\"167\":1}}],[\"配置将任何页面重定向到index\",{\"1\":{\"109\":1}}],[\"配置命令\",{\"0\":{\"52\":1}}],[\"但不是dom树的一部分\",{\"1\":{\"191\":1}}],[\"但在hash模式下没有问题\",{\"1\":{\"109\":1}}],[\"但还没保存到数据库中\",{\"1\":{\"50\":1}}],[\"部署到服务器后404\",{\"0\":{\"109\":1}}],[\"和\",{\"1\":{\"242\":1}}],[\"和文法参数\",{\"1\":{\"218\":1}}],[\"和mpa多页应用的区别\",{\"1\":{\"108\":1}}],[\"和子元素对象\",{\"1\":{\"101\":1}}],[\"利用路由元信息\",{\"1\":{\"106\":1}}],[\"缓冲区是存在dom树中\",{\"1\":{\"193\":1}}],[\"缓冲区域\",{\"1\":{\"193\":1}}],[\"缓冲区构造器属性globalthis\",{\"1\":{\"10\":1}}],[\"缓存时间短\",{\"1\":{\"159\":1}}],[\"缓存时间长\",{\"1\":{\"159\":1}}],[\"缓存资源来减少阻塞和服务器请求\",{\"1\":{\"144\":1}}],[\"缓存当前页面\",{\"1\":{\"121\":1}}],[\"缓存的组件被激活时\",{\"1\":{\"107\":1}}],[\"缓存\",{\"1\":{\"106\":2},\"2\":{\"162\":1,\"197\":1}}],[\"再调用\",{\"1\":{\"137\":1}}],[\"再执行resize事件中的代码\",{\"1\":{\"134\":1}}],[\"再发送请求\",{\"1\":{\"134\":1}}],[\"再经过对比前后差异\",{\"1\":{\"125\":1}}],[\"再次进入\",{\"1\":{\"117\":1}}],[\"再次进入列表页\",{\"1\":{\"106\":1}}],[\"再返回\",{\"1\":{\"106\":1}}],[\"再统一进行更新\",{\"1\":{\"77\":1}}],[\"商详页\",{\"1\":{\"106\":2}}],[\"keep\",{\"0\":{\"105\":1}}],[\"key是对用户数据加密签名的密钥\",{\"1\":{\"118\":1}}],[\"key是每一个vnode的唯一id\",{\"1\":{\"71\":1}}],[\"key\",{\"1\":{\"118\":1}}],[\"key的作用\",{\"0\":{\"71\":1}}],[\"筛选出有权限的路由\",{\"1\":{\"104\":1}}],[\"先觉错误\",{\"0\":{\"246\":1}}],[\"先从本地获取\",{\"1\":{\"152\":1}}],[\"先从storage里面读取\",{\"1\":{\"118\":1}}],[\"先挂在不需要权限控制的路由\",{\"1\":{\"104\":1}}],[\"先执行mixin的钩子\",{\"1\":{\"74\":1}}],[\"前缀\",{\"1\":{\"207\":1}}],[\"前缀为\",{\"1\":{\"206\":1}}],[\"前台进入后台\",{\"1\":{\"117\":1}}],[\"前后端配合要求更高\",{\"1\":{\"104\":1}}],[\"前端权限归根结底是请求的发起权\",{\"1\":{\"104\":1}}],[\"菜单和路由耦合在一起\",{\"1\":{\"104\":2}}],[\"菜单和路由都有后端返回\",{\"1\":{\"104\":1}}],[\"菜单信息写死在前端\",{\"1\":{\"104\":2}}],[\"菜单与路由做一一对应\",{\"1\":{\"104\":1}}],[\"菜单与路由分离\",{\"1\":{\"104\":1}}],[\"菜单由后端返回\",{\"1\":{\"104\":1}}],[\"菜单权限\",{\"1\":{\"104\":1}}],[\"接口权限\",{\"1\":{\"104\":1}}],[\"接着对for块不断创建环境\",{\"1\":{\"31\":1}}],[\"接着推送到执行上下文栈\",{\"1\":{\"15\":1}}],[\"权限控制\",{\"1\":{\"104\":1}}],[\"错误处理\",{\"0\":{\"103\":1}}],[\"而yeild和return可以作为标识符使用\",{\"1\":{\"221\":1}}],[\"而settimeout只能设置一个固定时间间隔\",{\"1\":{\"189\":1}}],[\"而不是经过的时间来指定缓存的生命周期\",{\"1\":{\"153\":1}}],[\"而不是某个属性\",{\"1\":{\"113\":1}}],[\"而且路由不一定作为菜单显示\",{\"1\":{\"104\":2}}],[\"而是将这10次更新内容保存在本地的一个js对象中\",{\"1\":{\"102\":1}}],[\"而是把代码仓库完整地镜像下来\",{\"1\":{\"49\":1}}],[\"而通过vnode\",{\"1\":{\"102\":1}}],[\"大部分是由dom操作引起的\",{\"1\":{\"102\":1}}],[\"大量的概念横跨整个文档\",{\"1\":{\"35\":1}}],[\"页面更新是异步操作\",{\"1\":{\"125\":1}}],[\"页面不断出栈\",{\"1\":{\"121\":1}}],[\"页面不会触发更新\",{\"1\":{\"64\":1}}],[\"页面之间通过hide\",{\"1\":{\"121\":1}}],[\"页面载入后触发onshow\",{\"1\":{\"117\":1}}],[\"页面生命周期\",{\"1\":{\"117\":1}}],[\"页面的生命周期\",{\"1\":{\"116\":1}}],[\"页面的性能问题\",{\"1\":{\"102\":1}}],[\"页面加载触发\",{\"1\":{\"104\":1}}],[\"虚拟表格\",{\"1\":{\"187\":1}}],[\"虚拟列表是按需显示的一种实现\",{\"1\":{\"192\":1}}],[\"虚拟列表\",{\"1\":{\"187\":1}}],[\"虚拟dom不会立即操作dom\",{\"1\":{\"102\":1}}],[\"虚拟dom表现为一个object对象\",{\"1\":{\"101\":1}}],[\"虚拟dom是对一层真实dom的抽象\",{\"1\":{\"101\":1}}],[\"虚拟dom\",{\"0\":{\"101\":1}}],[\"虚拟节点\",{\"1\":{\"90\":1}}],[\"弹框显示内容等\",{\"1\":{\"98\":1}}],[\"下\",{\"1\":{\"246\":1}}],[\"下标后缀\",{\"1\":{\"228\":1}}],[\"下次访问相同网站的时候\",{\"1\":{\"158\":1}}],[\"下次请求时\",{\"1\":{\"118\":1}}],[\"下载打包工具匹配的gzip插件\",{\"1\":{\"167\":1}}],[\"下载小程序代码包\",{\"1\":{\"127\":1}}],[\"下载一个项目和他的整个代码历史\",{\"1\":{\"53\":1}}],[\"下拉选\",{\"1\":{\"98\":1}}],[\"作为用户在这个小程序的唯一标识\",{\"1\":{\"118\":1}}],[\"作为webcomponents技术套件的一部分\",{\"1\":{\"97\":1}}],[\"作用域插槽\",{\"1\":{\"99\":1}}],[\"作用域的分析\",{\"0\":{\"27\":1}}],[\"作用域链例子\",{\"1\":{\"20\":1}}],[\"作用域分析\",{\"0\":{\"20\":1}}],[\"作用\",{\"1\":{\"4\":2}}],[\"时间格式化\",{\"1\":{\"95\":1}}],[\"时的首选\",{\"1\":{\"45\":1}}],[\"数字打点\",{\"1\":{\"95\":1}}],[\"数据类型\",{\"0\":{\"198\":1}}],[\"数据渲染优化\",{\"0\":{\"187\":1}}],[\"数据通信的性能与数据量正相关\",{\"1\":{\"129\":1}}],[\"数据缓存能力\",{\"1\":{\"115\":1}}],[\"数据更新后\",{\"1\":{\"113\":1}}],[\"数据发生改变时\",{\"1\":{\"83\":1}}],[\"数据变化后\",{\"1\":{\"77\":1}}],[\"数据不同发生dom操作\",{\"1\":{\"71\":1}}],[\"单转义字符\",{\"1\":{\"244\":1,\"245\":1}}],[\"单引号\",{\"1\":{\"243\":1}}],[\"单个冒号表示句法\",{\"1\":{\"227\":1}}],[\"单位s\",{\"1\":{\"154\":1}}],[\"单位转换\",{\"1\":{\"95\":1}}],[\"单页应用spa是一种网络应用程序或网站的模型\",{\"1\":{\"108\":1}}],[\"单点故障\",{\"1\":{\"43\":1}}],[\"应用生命周期\",{\"1\":{\"117\":1}}],[\"应用的生命周期\",{\"1\":{\"116\":1}}],[\"应用场景\",{\"0\":{\"95\":1,\"140\":1}}],[\"应用for\",{\"1\":{\"30\":2}}],[\"双引号的写法\",{\"1\":{\"243\":1}}],[\"双线程同时运行\",{\"1\":{\"124\":1}}],[\"双花括号插值\",{\"1\":{\"93\":1}}],[\"双向绑定\",{\"1\":{\"76\":1}}],[\"图片体积上也更小\",{\"1\":{\"169\":1}}],[\"图片\",{\"1\":{\"158\":1,\"179\":1}}],[\"图片资源压缩率有限\",{\"1\":{\"128\":1}}],[\"图片懒加载\",{\"1\":{\"91\":1}}],[\"图表之类的信息\",{\"1\":{\"104\":2}}],[\"图示\",{\"1\":{\"13\":1}}],[\"钩子函数的参数\",{\"1\":{\"90\":1}}],[\"被绑定元素插入父节点时调用\",{\"1\":{\"90\":1}}],[\"称为运行时语义\",{\"1\":{\"202\":1}}],[\"称为el\",{\"1\":{\"83\":1}}],[\"称之为指令\",{\"1\":{\"89\":1}}],[\"自定义渲染器\",{\"1\":{\"111\":1}}],[\"自定义过滤器\",{\"1\":{\"92\":1}}],[\"自定义指令也存在钩子函数\",{\"1\":{\"90\":1}}],[\"自定义指令\",{\"0\":{\"89\":1},\"1\":{\"104\":1}}],[\"自定义标签属性\",{\"1\":{\"76\":1}}],[\"决定了是否阻止前端代码获取跨域请求的响应\",{\"1\":{\"88\":1}}],[\"端口相同\",{\"1\":{\"87\":1}}],[\"主动销毁后再次打开的情况\",{\"1\":{\"126\":1}}],[\"主机相同\",{\"1\":{\"87\":1}}],[\"主要的错误来源包括\",{\"1\":{\"103\":1}}],[\"主要做了如下判断\",{\"1\":{\"82\":2}}],[\"主要通过mountcomponent方法\",{\"1\":{\"80\":1}}],[\"主要分成了四个部分\",{\"1\":{\"50\":1}}],[\"跨域资源共享\",{\"1\":{\"88\":1}}],[\"跨域是浏览器基于同源策略的安全手段\",{\"1\":{\"87\":1}}],[\"跨域问题\",{\"0\":{\"87\":1}}],[\"插件是功能模块\",{\"1\":{\"86\":1}}],[\"插件使用vue\",{\"1\":{\"85\":1}}],[\"插件暴露了一个install函数\",{\"1\":{\"85\":1}}],[\"插件用来给vue添加全局功能\",{\"1\":{\"84\":1}}],[\"过多的页面会挤占微信分配给小程序的内存\",{\"1\":{\"121\":1}}],[\"过渡\",{\"1\":{\"84\":1}}],[\"过滤器处理后的结果会当作当前参数传递给tostring函数\",{\"1\":{\"96\":1}}],[\"过滤器函数总接受表达式的值作为第一个参数\",{\"1\":{\"94\":1}}],[\"过滤器\",{\"0\":{\"92\":1},\"1\":{\"84\":1}}],[\"过滤首空格\",{\"1\":{\"76\":1}}],[\"指在ecma的产生式中的以\",{\"1\":{\"218\":1}}],[\"指定语义\",{\"1\":{\"202\":1}}],[\"指令绑定的前一个值\",{\"1\":{\"90\":1}}],[\"指令绑定的元素\",{\"1\":{\"90\":1}}],[\"指令与元素解绑时调用\",{\"1\":{\"90\":1}}],[\"指令所在的组件vnode及其子vnode全部更新后调用\",{\"1\":{\"90\":1}}],[\"指令第一次绑定到元素时调用\",{\"1\":{\"90\":1}}],[\"指令\",{\"1\":{\"84\":1}}],[\"指向包含类中的类元素创建的私有名称\",{\"1\":{\"4\":1}}],[\"指向代码中创建的变量声明\",{\"1\":{\"4\":1}}],[\"指向代码中创建的标识符引用\",{\"1\":{\"4\":1}}],[\"添加vue实例方法\",{\"1\":{\"84\":1}}],[\"添加全局资源\",{\"1\":{\"84\":1}}],[\"添加全局方法或属性\",{\"1\":{\"84\":1}}],[\"添加功能\",{\"1\":{\"54\":1}}],[\"由于http\",{\"1\":{\"153\":1}}],[\"由于小程序后台授权域名无法授权微信的域名\",{\"1\":{\"118\":1}}],[\"由于每个组件的职责单一\",{\"1\":{\"84\":1}}],[\"由此可见对定义时存在的属性都进行这样的操作\",{\"1\":{\"65\":1}}],[\"调试方便\",{\"1\":{\"84\":1}}],[\"调用不仅会造成数据关系的混乱\",{\"1\":{\"132\":1}}],[\"调用wx\",{\"1\":{\"118\":1,\"119\":1}}],[\"调用updatechildren\",{\"1\":{\"82\":1}}],[\"调用$mount方法进行页面的挂载\",{\"1\":{\"80\":1}}],[\"调用createelem创建一个新节点\",{\"1\":{\"83\":1}}],[\"调用createelm创建一个新的dom节点放到newstartidx的位置\",{\"1\":{\"82\":1}}],[\"调用created钩子\",{\"1\":{\"79\":1}}],[\"调用createperiterationenvironment语义\",{\"1\":{\"31\":1}}],[\"调用beforecreate钩子\",{\"1\":{\"79\":1}}],[\"调用\",{\"1\":{\"79\":1}}],[\"调用栈\",{\"1\":{\"31\":1}}],[\"调用栈上有几个ecmascript代码执行上下文\",{\"1\":{\"20\":1}}],[\"调用forbodyevaluation\",{\"1\":{\"31\":1}}],[\"调用lexicallyscopeddeclarations收集词法声明declarations\",{\"1\":{\"29\":1}}],[\"调用lexicallyscopeddeclarations\",{\"1\":{\"16\":1}}],[\"调用lexicallydeclarednames\",{\"1\":{\"16\":1}}],[\"调用varscopeddeclarations语义收集变量声明语句vardeclarations\",{\"1\":{\"16\":1}}],[\"降低系统的耦合度\",{\"1\":{\"84\":1}}],[\"优化图片等手段\",{\"1\":{\"165\":1}}],[\"优化手段\",{\"0\":{\"127\":1}}],[\"优秀\",{\"1\":{\"123\":1}}],[\"优势\",{\"1\":{\"84\":1}}],[\"优点\",{\"1\":{\"40\":1,\"42\":1,\"43\":1,\"46\":1,\"158\":1}}],[\"找到对应的真实dom\",{\"1\":{\"83\":1}}],[\"找到暂存区域的文件\",{\"1\":{\"50\":1}}],[\"相同的响应处理过少\",{\"1\":{\"138\":1}}],[\"相同的响应事件过少\",{\"1\":{\"138\":1}}],[\"相同的响应事件\",{\"1\":{\"138\":1}}],[\"相同的事件处理\",{\"1\":{\"138\":1}}],[\"相同则调用patchvnode方法\",{\"1\":{\"83\":1}}],[\"相比h5\",{\"1\":{\"115\":1}}],[\"相当于给onscroll事件整了一个\",{\"1\":{\"76\":1}}],[\"相当于本地克隆了远程仓库项目的一个副本\",{\"1\":{\"50\":1}}],[\"相当于本地写代码的区域\",{\"1\":{\"50\":1}}],[\"订阅者watcher就会调用patch给真实dom打补丁\",{\"1\":{\"83\":1}}],[\"订阅者就会调用pacth给真实dom打补丁\",{\"1\":{\"82\":1}}],[\"总结\",{\"0\":{\"83\":1}}],[\"总来来说\",{\"1\":{\"31\":1}}],[\"老节点的end索引\",{\"1\":{\"82\":1}}],[\"老节点的start索引+1\",{\"1\":{\"82\":1}}],[\"老节点的start和新节点的end相同时\",{\"1\":{\"82\":2}}],[\"老牌的版本控制系统\",{\"1\":{\"45\":1}}],[\"处理了五种情景\",{\"1\":{\"82\":1}}],[\"子包也不建议太大\",{\"1\":{\"128\":1}}],[\"子节点不完全一致\",{\"1\":{\"82\":1}}],[\"子传父\",{\"1\":{\"60\":2}}],[\"把多个子元素的响应事件委托给父元素\",{\"1\":{\"138\":1}}],[\"把差异应用在原来的dom树上\",{\"1\":{\"125\":1}}],[\"把路由交给前端处理\",{\"1\":{\"109\":1}}],[\"把所有的旧节点删除\",{\"1\":{\"82\":1}}],[\"把一个对象中的属性方法抽取出来作为标识符绑定在环境中\",{\"1\":{\"21\":1}}],[\"所有其他码位都编码为字符串的两个码位元素\",{\"1\":{\"242\":1}}],[\"所有代码点都可以直接出现在字符串文本中\",{\"1\":{\"242\":1}}],[\"所有的节点都是全新的\",{\"1\":{\"82\":1}}],[\"所以渲染层存在多个webview线程\",{\"1\":{\"124\":1}}],[\"所以切换时页面需要重新加载\",{\"1\":{\"121\":1}}],[\"所以每次都会追踪他的变化\",{\"1\":{\"112\":1}}],[\"所以在我们修改或者删除文件的时候\",{\"1\":{\"50\":1}}],[\"所以在实现团队协作的时候\",{\"1\":{\"49\":1}}],[\"所在组件的vnode更新时调用\",{\"1\":{\"90\":1}}],[\"没有必要不停地调用去请求服务端接口\",{\"1\":{\"137\":1}}],[\"没有数据的模块可以进行骨架屏的占位\",{\"1\":{\"129\":1}}],[\"没有旧节点\",{\"1\":{\"82\":1}}],[\"没有新节点\",{\"1\":{\"82\":1}}],[\"没有发现e\",{\"1\":{\"81\":1}}],[\"退出循环\",{\"1\":{\"81\":1}}],[\"直出有限\",{\"1\":{\"181\":1}}],[\"直到需要时才进行加载\",{\"1\":{\"148\":1}}],[\"直到目标返回页\",{\"1\":{\"121\":1}}],[\"直到条件达成或循环终止条件\",{\"1\":{\"31\":1}}],[\"直接返回构建一个完成记录的结果时\",{\"1\":{\"208\":1}}],[\"直接返回应用completion\",{\"1\":{\"208\":1}}],[\"直接加载这些资源\",{\"1\":{\"158\":1}}],[\"直接拉取最新的资源\",{\"1\":{\"154\":1}}],[\"直接patchvnode\",{\"1\":{\"82\":2}}],[\"直接删除dom\",{\"1\":{\"82\":1}}],[\"直接新建所有的新dom\",{\"1\":{\"82\":1}}],[\"直接更新文本内容\",{\"1\":{\"82\":1}}],[\"直接创建新节点\",{\"1\":{\"82\":1}}],[\"直接创建新的真实节点e\",{\"1\":{\"81\":1}}],[\"直接调用patchvnode去处理这两个节点\",{\"1\":{\"82\":1}}],[\"直接createelm新建节点\",{\"1\":{\"82\":1}}],[\"直接触发旧节点的destory钩子\",{\"1\":{\"82\":1}}],[\"同样的更新10个dom节点\",{\"1\":{\"102\":1}}],[\"同源有三个部分\",{\"1\":{\"87\":1}}],[\"同时将这个真实dom移动到oldstartvnode对应的真实dom的前面\",{\"1\":{\"82\":1}}],[\"同时endindex移动到c\",{\"1\":{\"81\":1}}],[\"同一时间只能执行一次\",{\"1\":{\"78\":1}}],[\"例如null\",{\"1\":{\"215\":1}}],[\"例如node和浏览器环境就有不同的全局对象\",{\"1\":{\"35\":1}}],[\"例如个性化内容\",{\"1\":{\"154\":1}}],[\"例如vue的componet动态组件指定是一个异步组件时\",{\"1\":{\"146\":1}}],[\"例如\",{\"1\":{\"146\":1,\"181\":1}}],[\"例如onresize\",{\"1\":{\"132\":1}}],[\"例如按钮触发\",{\"1\":{\"125\":1}}],[\"例子\",{\"1\":{\"81\":1}}],[\"循环从两边向中间收拢\",{\"1\":{\"81\":1}}],[\"循环终止\",{\"1\":{\"31\":1}}],[\"比较时\",{\"1\":{\"216\":1}}],[\"比较\",{\"1\":{\"110\":1}}],[\"比较只会再同层级进行\",{\"1\":{\"81\":1}}],[\"比如\",{\"1\":{\"158\":1}}],[\"比如布局组件\",{\"1\":{\"98\":1}}],[\"比如构建流程\",{\"1\":{\"54\":1}}],[\"结束索引\",{\"1\":{\"193\":1}}],[\"结论\",{\"0\":{\"80\":1}}],[\"结构如下图所示\",{\"1\":{\"42\":1,\"43\":1,\"46\":1}}],[\"定义了特定语法产生错误的条件\",{\"1\":{\"213\":1}}],[\"定义路由的时候还有添加菜单显示标题\",{\"1\":{\"104\":2}}],[\"定义updatecomponent更新函数\",{\"1\":{\"80\":1}}],[\"定义updatecomponent渲染页面视图的方法\",{\"1\":{\"79\":1}}],[\"定义\",{\"0\":{\"94\":1},\"1\":{\"80\":1,\"202\":1,\"227\":1,\"228\":1,\"230\":1}}],[\"定义$on\",{\"1\":{\"80\":1}}],[\"定义$set\",{\"1\":{\"80\":1}}],[\"定义好组件时\",{\"1\":{\"62\":1}}],[\"都是normalcompletion\",{\"1\":{\"208\":1}}],[\"都会检查是否有更新版本\",{\"1\":{\"126\":1}}],[\"都会执行actived钩子\",{\"1\":{\"107\":1}}],[\"都会执行beforerouteenter\",{\"1\":{\"107\":1}}],[\"都会放到flushcallbacks\",{\"1\":{\"78\":1}}],[\"都需要重新编译\",{\"1\":{\"104\":2}}],[\"都需要环境记录器\",{\"1\":{\"27\":1}}],[\"无法继续展开\",{\"1\":{\"226\":1}}],[\"无法单机工作\",{\"1\":{\"43\":1}}],[\"无需特地提供\",{\"1\":{\"153\":1}}],[\"无需重新启动\",{\"1\":{\"126\":1}}],[\"无论触发多少次事件\",{\"1\":{\"135\":1}}],[\"无论是宏任务还是微任务\",{\"1\":{\"78\":1}}],[\"第五次循环\",{\"1\":{\"81\":1}}],[\"第四次循环\",{\"1\":{\"81\":1}}],[\"第三次循环\",{\"1\":{\"81\":1}}],[\"第二个参数可以是对象数据\",{\"1\":{\"90\":1}}],[\"第二个参数为执行函数上下文\",{\"1\":{\"78\":1}}],[\"第二次循环后\",{\"1\":{\"81\":1}}],[\"第一个参数是指令的名字\",{\"1\":{\"90\":1}}],[\"第一个参数是回调函数\",{\"1\":{\"78\":1}}],[\"第一次循环结束后\",{\"1\":{\"81\":1}}],[\"第一件事就是设置你的用户名和邮件地址\",{\"1\":{\"52\":1}}],[\"场景\",{\"0\":{\"78\":1,\"86\":1,\"91\":1,\"98\":1,\"106\":1}}],[\"键盘修饰符\",{\"1\":{\"76\":1}}],[\"鼠标按键修饰符\",{\"1\":{\"76\":1}}],[\"阻止事件的默认行为\",{\"1\":{\"76\":1}}],[\"阻止事件冒泡\",{\"1\":{\"76\":1}}],[\"事件代理\",{\"0\":{\"138\":1}}],[\"事件委托的要求\",{\"1\":{\"138\":1}}],[\"事件委托\",{\"0\":{\"138\":1},\"2\":{\"143\":1}}],[\"事件触发时\",{\"1\":{\"132\":1}}],[\"事件监听缓存\",{\"1\":{\"112\":1}}],[\"事件修饰符\",{\"1\":{\"76\":1}}],[\"事后都可以用任何一个镜像出来的本地仓库恢复\",{\"1\":{\"49\":1}}],[\"五种修饰符\",{\"1\":{\"76\":1}}],[\"修饰符\",{\"0\":{\"76\":1}}],[\"修改state的方法\",{\"1\":{\"60\":1}}],[\"修改bug\",{\"1\":{\"54\":1}}],[\"修改只要提交到版本控制系统\",{\"1\":{\"40\":1}}],[\"叠加型\",{\"1\":{\"75\":1}}],[\"生产环境才去配置\",{\"1\":{\"168\":1}}],[\"生命周期\",{\"0\":{\"116\":1}}],[\"生命周期钩子\",{\"1\":{\"103\":1}}],[\"生命周期函数和watch\",{\"1\":{\"75\":1}}],[\"生成这些\",{\"1\":{\"242\":1}}],[\"生成式的右侧可以使用短语\",{\"1\":{\"230\":1}}],[\"生成session并返回给小程序\",{\"1\":{\"118\":1}}],[\"生成render方法\",{\"1\":{\"79\":1}}],[\"生成的时间戳作为key\",{\"1\":{\"71\":1}}],[\"队列型\",{\"1\":{\"75\":1}}],[\"面向对象中的类\",{\"1\":{\"73\":1}}],[\"判断是否为同一个key\",{\"1\":{\"72\":1}}],[\"曾经拥有key的element如果不再出现的话\",{\"1\":{\"71\":1}}],[\"做patch或者reuse\",{\"1\":{\"71\":1}}],[\"根据http响应头内容的不同分两种\",{\"1\":{\"151\":1}}],[\"根据用户的需求\",{\"1\":{\"145\":1}}],[\"根据情况调用patchvnode进行patch重复流程\",{\"1\":{\"83\":1}}],[\"根据当前环境选择合适的方法\",{\"1\":{\"78\":1}}],[\"根据keys的顺序记录element\",{\"1\":{\"71\":1}}],[\"根据key更准确的找到对应的vnode节点\",{\"1\":{\"71\":1}}],[\"根据标识符的类型进行绑定\",{\"1\":{\"16\":1}}],[\"挂载之前\",{\"1\":{\"70\":1}}],[\"用单引号或双引号括起来\",{\"1\":{\"242\":1}}],[\"用来表示抽象操作或语法导向操作的调用绝不会返回一个abrupt\",{\"1\":{\"207\":1}}],[\"用户体验优化\",{\"0\":{\"178\":1},\"1\":{\"178\":1}}],[\"用户名\",{\"1\":{\"134\":1}}],[\"用户登陆后\",{\"1\":{\"104\":1}}],[\"用对象的属性来描述节点\",{\"1\":{\"101\":1}}],[\"用ast得到的js对象拼装成render和staticrenderfns函数\",{\"1\":{\"70\":1}}],[\"用于简单dom\",{\"1\":{\"188\":1}}],[\"用于懒加载图片或其他dom元素\",{\"1\":{\"150\":1}}],[\"用于一些常见的文本格式化\",{\"1\":{\"92\":1}}],[\"用于表示\",{\"1\":{\"24\":1}}],[\"用于跟踪运行时执行的代码\",{\"1\":{\"4\":1}}],[\"解析ip地址的方式\",{\"1\":{\"159\":1}}],[\"解析流程\",{\"1\":{\"70\":1}}],[\"解决\",{\"0\":{\"66\":1}}],[\"切换过程中合适的销毁和重新组件内部的事件监听和子组件\",{\"1\":{\"69\":1}}],[\"切换到线上某个分支\",{\"1\":{\"55\":1}}],[\"切换到本地某个分支\",{\"1\":{\"55\":1}}],[\"卸载的过程\",{\"1\":{\"69\":1}}],[\"注意\",{\"0\":{\"68\":1,\"74\":1},\"1\":{\"166\":1}}],[\"模板编译阶段过滤器表达式将会被编译为过滤器函数\",{\"1\":{\"96\":1}}],[\"模板指令的代码都会生成在render函数中\",{\"1\":{\"67\":1}}],[\"模块产生式\",{\"1\":{\"221\":1}}],[\"模块内容条目中的其中一个代换式\",{\"1\":{\"221\":1}}],[\"模块也可以为空\",{\"1\":{\"221\":1}}],[\"模块或功能\",{\"1\":{\"145\":1}}],[\"模块声明实例化\",{\"1\":{\"27\":1}}],[\"模块环境记录器\",{\"1\":{\"21\":1}}],[\"模块环境初始化\",{\"1\":{\"3\":2}}],[\"模块\",{\"1\":{\"4\":1,\"22\":1,\"24\":1}}],[\"模块执行\",{\"1\":{\"3\":2}}],[\"九成的情况是\",{\"1\":{\"66\":1}}],[\"$\",{\"1\":{\"182\":1}}],[\"$uri\",{\"1\":{\"168\":4}}],[\"$destroy生命周期\",{\"1\":{\"80\":1}}],[\"$delete\",{\"1\":{\"80\":1}}],[\"$forceupdate\",{\"1\":{\"80\":1}}],[\"$forceupdated\",{\"1\":{\"66\":1}}],[\"$emit\",{\"1\":{\"80\":1}}],[\"$emit触发自定义事件\",{\"1\":{\"60\":1}}],[\"$off等事件\",{\"1\":{\"80\":1}}],[\"$off\",{\"1\":{\"80\":1}}],[\"$options\",{\"1\":{\"67\":1,\"96\":1}}],[\"$watch等方法\",{\"1\":{\"80\":1}}],[\"$get\",{\"1\":{\"80\":1}}],[\"$mount方法\",{\"1\":{\"79\":1}}],[\"$mount方法挂载元素\",{\"1\":{\"79\":1}}],[\"合并型\",{\"1\":{\"75\":1}}],[\"合并原对象和混入对象的属性\",{\"1\":{\"66\":1}}],[\"合并分支出现冲突时\",{\"1\":{\"55\":1}}],[\"合并分支\",{\"1\":{\"55\":1}}],[\"向循环中间靠拢\",{\"1\":{\"83\":1}}],[\"向下传递事件\",{\"1\":{\"76\":1}}],[\"向下传递属性\",{\"1\":{\"60\":1}}],[\"向下捕获事件\",{\"1\":{\"76\":1}}],[\"向一个响应式对象中添加一个property\",{\"1\":{\"66\":1}}],[\"进行首次渲染\",{\"1\":{\"129\":1}}],[\"进行相应的绑定\",{\"1\":{\"29\":1}}],[\"进入下一个页面\",{\"1\":{\"117\":1}}],[\"进入if判断\",{\"1\":{\"63\":1}}],[\"原理\",{\"0\":{\"63\":1,\"65\":1,\"70\":1,\"72\":1,\"82\":1,\"96\":1,\"100\":1},\"1\":{\"113\":1}}],[\"采用一些压缩方案\",{\"1\":{\"166\":1}}],[\"采用函数返回一个全新的data形式\",{\"1\":{\"62\":1}}],[\"采用python语言实现\",{\"1\":{\"48\":1}}],[\"构建时\",{\"1\":{\"181\":1}}],[\"构建工具支持\",{\"0\":{\"180\":1}}],[\"构建组件实例\",{\"1\":{\"62\":1}}],[\"构成网络也很方便\",{\"1\":{\"45\":1}}],[\"区别\",{\"0\":{\"62\":1,\"85\":1}}],[\"异步下载新版本的代码包\",{\"1\":{\"126\":1}}],[\"异步会使运行时序变得复杂一些\",{\"1\":{\"125\":1}}],[\"异步延迟函数\",{\"1\":{\"78\":1}}],[\"异步的mutations\",{\"1\":{\"60\":1}}],[\"异常\",{\"1\":{\"16\":1}}],[\"增加服务器压力\",{\"1\":{\"132\":1}}],[\"增加一个getter的派生状态\",{\"1\":{\"60\":1}}],[\"增加环境中的内置对象\",{\"1\":{\"8\":1}}],[\"存在着若干次页面数据通信\",{\"1\":{\"125\":1}}],[\"存放共享变量\",{\"1\":{\"60\":1}}],[\"存放在私有环境记录\",{\"1\":{\"4\":1}}],[\"存放在环境记录器\",{\"1\":{\"4\":2}}],[\"存储共享变量的容器\",{\"1\":{\"60\":1}}],[\"后面跟着一个或多个冒号\",{\"1\":{\"227\":1}}],[\"后端nginx配置\",{\"1\":{\"168\":2}}],[\"后端从数据库中查找openid\",{\"1\":{\"118\":1}}],[\"后端把appid\",{\"1\":{\"118\":1}}],[\"后端接口错误\",{\"1\":{\"103\":1}}],[\"后台运行或跳转到其他页面时\",{\"1\":{\"117\":1}}],[\"后台运行一定时间\",{\"1\":{\"117\":1}}],[\"后台进入前台或重新进入页面时\",{\"1\":{\"117\":1}}],[\"后台进入前台\",{\"1\":{\"117\":1}}],[\"后代定义inject\",{\"1\":{\"60\":1}}],[\"后续每一个提交都会使用这些信息\",{\"1\":{\"52\":1}}],[\"祖先定义provide\",{\"1\":{\"60\":1}}],[\"祖孙与后代组件之间\",{\"1\":{\"60\":1}}],[\"父传子\",{\"1\":{\"60\":1}}],[\"父子组件之间\",{\"1\":{\"60\":1}}],[\"兄弟组件之间传值\",{\"1\":{\"60\":1}}],[\"兄弟组件之间\",{\"1\":{\"60\":1}}],[\"删除旧的节点\",{\"1\":{\"82\":1}}],[\"删除某个远程分支\",{\"1\":{\"55\":1}}],[\"删除本地某个分支\",{\"1\":{\"55\":1}}],[\"新增列表项\",{\"1\":{\"139\":1}}],[\"新增的属性自然不具备响应式\",{\"1\":{\"65\":1}}],[\"新旧头尾指针进行比较\",{\"1\":{\"83\":1}}],[\"新旧节点自身不一样\",{\"1\":{\"82\":1}}],[\"新旧节点自身一样\",{\"1\":{\"82\":1}}],[\"新旧节点c相同\",{\"1\":{\"81\":1}}],[\"新节点的start索引+1\",{\"1\":{\"82\":1}}],[\"新节点的end索引\",{\"1\":{\"82\":1}}],[\"新老节点的end索引\",{\"1\":{\"82\":1}}],[\"新老节点的end相同\",{\"1\":{\"82\":1}}],[\"新老节点的start索引+1\",{\"1\":{\"82\":1}}],[\"新老节点的start相同\",{\"1\":{\"82\":1}}],[\"新建一个空分支\",{\"1\":{\"55\":1}}],[\"新建一个分支\",{\"1\":{\"55\":1}}],[\"新特性\",{\"0\":{\"111\":1},\"1\":{\"54\":1}}],[\"runtime\",{\"0\":{\"202\":1},\"1\":{\"212\":1}}],[\"rules\",{\"1\":{\"182\":1}}],[\"random\",{\"1\":{\"189\":1,\"190\":1,\"191\":1}}],[\"routes\",{\"1\":{\"182\":2}}],[\"router配置路由\",{\"1\":{\"146\":1}}],[\"router\",{\"1\":{\"84\":1}}],[\"root\",{\"1\":{\"60\":1,\"168\":2}}],[\"right\",{\"1\":{\"76\":1}}],[\"r\",{\"1\":{\"55\":1,\"146\":8,\"244\":1}}],[\"reverse\",{\"1\":{\"242\":1}}],[\"recharge\",{\"1\":{\"182\":1}}],[\"record\",{\"1\":{\"20\":1,\"203\":1,\"205\":1}}],[\"rel\",{\"1\":{\"180\":1}}],[\"rel=\",{\"1\":{\"179\":4}}],[\"relaunch\",{\"1\":{\"121\":1}}],[\"react\",{\"1\":{\"182\":1}}],[\"read\",{\"1\":{\"168\":1}}],[\"realm记录器包含全局对象\",{\"1\":{\"13\":1}}],[\"realm记录器\",{\"1\":{\"13\":1}}],[\"realm包含了代码需要执行的最小资源\",{\"1\":{\"5\":1}}],[\"realm\",{\"1\":{\"4\":1}}],[\"realm提供了代码执行需要的基础资源\",{\"1\":{\"1\":1}}],[\"resolve\",{\"1\":{\"182\":2}}],[\"resource\",{\"1\":{\"180\":1}}],[\"resourcehintwebpackplugin\",{\"1\":{\"180\":2}}],[\"res\",{\"1\":{\"147\":1}}],[\"require\",{\"1\":{\"146\":8,\"147\":2,\"168\":1,\"180\":2,\"182\":2}}],[\"requestanimationframe\",{\"1\":{\"190\":1,\"191\":1}}],[\"requestanimationframe的步伐跟着系统的刷新步伐走\",{\"1\":{\"190\":1}}],[\"requestanimationframe最大的优势是由系统来决定回调函数的执行时机\",{\"1\":{\"190\":1}}],[\"request\",{\"1\":{\"118\":1}}],[\"redirectto\",{\"1\":{\"117\":1,\"121\":1}}],[\"renderer\",{\"1\":{\"182\":3}}],[\"render用于生成vnode\",{\"1\":{\"79\":1}}],[\"render方法\",{\"1\":{\"79\":1}}],[\"render函数通过表达式的值来决定是否生成dom\",{\"1\":{\"70\":1}}],[\"render和staticrenderfns函数被调用后生成虚拟vnode节点\",{\"1\":{\"70\":1}}],[\"render就可以得到渲染函数\",{\"1\":{\"67\":1}}],[\"ref\",{\"1\":{\"60\":1}}],[\"refactor\",{\"1\":{\"54\":1}}],[\"replaced\",{\"1\":{\"38\":1}}],[\"return语句\",{\"1\":{\"221\":1}}],[\"return等\",{\"1\":{\"218\":1}}],[\"returnifabrupt\",{\"1\":{\"205\":1,\"206\":1}}],[\"returnifabrupt这是一个简写的步骤\",{\"1\":{\"205\":1}}],[\"returncompletionrecord\",{\"1\":{\"203\":1}}],[\"returnstatementexpressionstatement\",{\"1\":{\"37\":5,\"221\":1}}],[\"return\",{\"1\":{\"37\":3,\"38\":3,\"133\":1,\"136\":1,\"146\":1,\"168\":2,\"189\":1,\"190\":1,\"191\":1,\"204\":1,\"205\":1,\"212\":1,\"213\":1,\"219\":1,\"221\":3}}],[\"依赖管理\",{\"1\":{\"54\":1}}],[\"测试用例修改\",{\"1\":{\"54\":1}}],[\"文本的计算结果为\",{\"1\":{\"242\":1}}],[\"文本格式化\",{\"1\":{\"95\":1}}],[\"文法符号\",{\"0\":{\"225\":1}}],[\"文法前缀参数的含义是不一样的\",{\"1\":{\"220\":1}}],[\"文法前缀参数的含义\",{\"0\":{\"220\":1}}],[\"文法参数的含义\",{\"0\":{\"219\":1}}],[\"文法参数\",{\"0\":{\"218\":1},\"1\":{\"218\":1}}],[\"文件指纹\",{\"0\":{\"157\":1}}],[\"文件状态对应的\",{\"1\":{\"50\":1}}],[\"文档修改\",{\"1\":{\"54\":1}}],[\"拉取远程仓库的分支与本地的某个分支合并\",{\"1\":{\"54\":1}}],[\"拉取远程仓库的分支与本地当前分支\",{\"1\":{\"54\":1}}],[\"查看本地和远程所有的分支\",{\"1\":{\"55\":1}}],[\"查看本地所有分支\",{\"1\":{\"55\":1}}],[\"查看远程所有的分支\",{\"1\":{\"55\":1}}],[\"查看当前分支状态\",{\"1\":{\"54\":1}}],[\"查看当前代码add后\",{\"1\":{\"54\":1}}],[\"查看现在commit提交后\",{\"1\":{\"54\":1}}],[\"默认情况下绑定事件行为会被视为动态绑定\",{\"1\":{\"112\":1}}],[\"默认插槽\",{\"1\":{\"99\":1}}],[\"默认为master分支\",{\"1\":{\"54\":1}}],[\"默认值为undefined\",{\"1\":{\"5\":1}}],[\"初始化小程序手段\",{\"1\":{\"127\":1}}],[\"初始化完成后\",{\"1\":{\"117\":1}}],[\"初始化\",{\"1\":{\"104\":1}}],[\"初始化依赖注入\",{\"1\":{\"79\":1}}],[\"初始化生命周期\",{\"1\":{\"79\":1}}],[\"初始化仓库\",{\"1\":{\"54\":1}}],[\"初始化绑定\",{\"1\":{\"29\":1}}],[\"日常基本操作\",{\"0\":{\"54\":1}}],[\"分为以下两种情况\",{\"1\":{\"82\":1}}],[\"分类\",{\"0\":{\"99\":1},\"1\":{\"60\":1}}],[\"分支更名\",{\"1\":{\"55\":1}}],[\"分支操作\",{\"0\":{\"55\":1}}],[\"分别是\",{\"1\":{\"53\":1}}],[\"分布式版本管理系统每个计算机都有一个完整仓库\",{\"1\":{\"46\":1}}],[\"分布式版本控制系统的客户端并不只是提取最新版本的文件快照\",{\"1\":{\"49\":1}}],[\"分布式版本控制系统\",{\"1\":{\"41\":1}}],[\"启动命令\",{\"0\":{\"53\":1}}],[\"u\",{\"1\":{\"244\":1,\"245\":2}}],[\"utf\",{\"1\":{\"242\":1}}],[\"u+000a\",{\"1\":{\"242\":1}}],[\"u+000d\",{\"1\":{\"242\":1}}],[\"u+005c\",{\"1\":{\"242\":1}}],[\"ul\",{\"1\":{\"189\":2,\"190\":2,\"191\":2}}],[\"ul>\",{\"1\":{\"139\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"ui库方案\",{\"0\":{\"184\":1}}],[\"use\",{\"1\":{\"182\":1,\"247\":2}}],[\"use进行注册\",{\"1\":{\"85\":1}}],[\"user\",{\"1\":{\"52\":2,\"146\":2}}],[\"updatechildren主要做了以下操作\",{\"1\":{\"83\":1}}],[\"updatecomponent主要执行初始化声明的render\",{\"1\":{\"79\":1}}],[\"update将虚拟dom生成真实dom结构\",{\"1\":{\"80\":1}}],[\"update\",{\"1\":{\"80\":1,\"90\":1}}],[\"update主要功能是调用patch\",{\"1\":{\"79\":1}}],[\"update方法\",{\"1\":{\"79\":1}}],[\"url\",{\"1\":{\"53\":1}}],[\"unicode转义\",{\"1\":{\"245\":1}}],[\"unicode\",{\"1\":{\"234\":1,\"242\":3}}],[\"uninitialized\",{\"1\":{\"23\":1}}],[\"unobserve\",{\"1\":{\"150\":1}}],[\"undate性能提高\",{\"1\":{\"110\":1}}],[\"undefined\",{\"1\":{\"23\":1,\"38\":1,\"168\":1,\"212\":1}}],[\"unbind\",{\"1\":{\"90\":1}}],[\"提前链接\",{\"1\":{\"180\":1}}],[\"提高了用户的满意度\",{\"1\":{\"183\":1}}],[\"提高资源的加载速度\",{\"1\":{\"165\":1}}],[\"提高页面的多次渲染效率主要在于正确使用setdata\",{\"1\":{\"129\":1}}],[\"提高可维护性\",{\"1\":{\"84\":1}}],[\"提供了非常完善\",{\"1\":{\"123\":1}}],[\"提供了方法的实现\",{\"1\":{\"73\":1}}],[\"提供自己的api\",{\"1\":{\"84\":1}}],[\"提供git仓库托管服务\",{\"1\":{\"49\":1}}],[\"提交审核\",{\"1\":{\"122\":1}}],[\"提交代码到本地仓库\",{\"1\":{\"54\":1}}],[\"提交时显示所有的diff信息\",{\"1\":{\"54\":1}}],[\"提交某些文件到缓冲区\",{\"1\":{\"54\":1}}],[\"提交全部文件修改到缓存区\",{\"1\":{\"51\":1,\"54\":1}}],[\"提交更新\",{\"1\":{\"50\":1}}],[\"暂存区是一个文件\",{\"1\":{\"50\":1}}],[\"暂存区\",{\"1\":{\"50\":1}}],[\"暂停\",{\"1\":{\"4\":1}}],[\"工作区\",{\"1\":{\"50\":1}}],[\"已经打开过小程序\",{\"1\":{\"126\":1}}],[\"已提交\",{\"1\":{\"50\":1}}],[\"已暂存\",{\"1\":{\"50\":1}}],[\"已修改\",{\"1\":{\"50\":1}}],[\"ms\",{\"1\":{\"168\":2}}],[\"math\",{\"1\":{\"189\":2,\"190\":2,\"191\":2}}],[\"match是否一致\",{\"1\":{\"157\":1}}],[\"match标头发送到服务器\",{\"1\":{\"157\":1}}],[\"match\",{\"1\":{\"155\":1,\"156\":1}}],[\"main\",{\"1\":{\"179\":2}}],[\"max\",{\"1\":{\"105\":1,\"154\":2}}],[\"mode\",{\"1\":{\"246\":1}}],[\"moduleitem\",{\"1\":{\"221\":1}}],[\"modulebodyopt\",{\"1\":{\"221\":1}}],[\"modules\",{\"1\":{\"182\":1}}],[\"module\",{\"1\":{\"146\":3,\"168\":1,\"180\":1,\"182\":2,\"221\":1}}],[\"modifiers\",{\"1\":{\"90\":1}}],[\"modified值放入if\",{\"1\":{\"156\":1}}],[\"modified\",{\"1\":{\"50\":1,\"155\":2,\"156\":2,\"157\":1}}],[\"mousehover等\",{\"1\":{\"132\":1}}],[\"mousemove\",{\"1\":{\"132\":1}}],[\"mountcomponent渲染组件\",{\"1\":{\"79\":1}}],[\"min\",{\"1\":{\"168\":2,\"189\":1,\"190\":1,\"191\":1}}],[\"minratio\",{\"1\":{\"168\":1}}],[\"middle\",{\"1\":{\"76\":1}}],[\"mixin\",{\"0\":{\"73\":1}}],[\"mutations\",{\"1\":{\"60\":1}}],[\"method\",{\"1\":{\"79\":1}}],[\"methods的初始化\",{\"1\":{\"79\":1}}],[\"methods\",{\"1\":{\"75\":1}}],[\"merge\",{\"1\":{\"55\":2}}],[\"mercurialhg是一种轻量级分布式版本控制系统\",{\"1\":{\"48\":1}}],[\"message\",{\"1\":{\"54\":2}}],[\"m\",{\"1\":{\"54\":1,\"55\":1}}],[\"状态情况如下\",{\"1\":{\"50\":1}}],[\"基于dom元素的事件冒泡\",{\"1\":{\"138\":1}}],[\"基于浏览器内核重构的内置解析器\",{\"1\":{\"115\":1}}],[\"基于当前分支新建分支\",{\"1\":{\"55\":1}}],[\"基于当前分支\",{\"1\":{\"55\":1}}],[\"基于\",{\"1\":{\"50\":1}}],[\"基本上都能找回\",{\"1\":{\"40\":1}}],[\"组合式api\",{\"1\":{\"111\":1}}],[\"组成字符串\",{\"1\":{\"50\":1}}],[\"组件所在页面的生命周期\",{\"1\":{\"116\":1}}],[\"组件的生命周期\",{\"1\":{\"116\":1}}],[\"组件是业务模块\",{\"1\":{\"86\":1}}],[\"组件是把图形\",{\"1\":{\"84\":1}}],[\"组件注册有全局注册和局部注册\",{\"1\":{\"85\":1}}],[\"组件有vue单文件\",{\"1\":{\"85\":1}}],[\"组件和插件的区别\",{\"0\":{\"84\":1}}],[\"组件创建时进行选项合并\",{\"1\":{\"63\":1}}],[\"组件通信\",{\"0\":{\"60\":1}}],[\"组件\",{\"1\":{\"4\":2}}],[\"哈希\",{\"1\":{\"50\":1}}],[\"散列\",{\"1\":{\"50\":1}}],[\"项目目录会隐藏一个==\",{\"1\":{\"50\":1}}],[\"项目开始\",{\"1\":{\"49\":1}}],[\"既可以让别人参与你的开源项目\",{\"1\":{\"49\":1}}],[\"仓库clone一份到自己的电脑上\",{\"1\":{\"49\":1}}],[\"他的简短含义是\",{\"1\":{\"205\":1}}],[\"他是管道式的\",{\"1\":{\"92\":1}}],[\"他们会写入你的每一次提交中\",{\"1\":{\"52\":1}}],[\"他们的版本库其实都是一样的\",{\"1\":{\"49\":1}}],[\"他只提供抽象定义\",{\"1\":{\"35\":1}}],[\"那么这条代换式存在\",{\"1\":{\"220\":1}}],[\"那么这条代换式就存在\",{\"1\":{\"220\":1}}],[\"那么非终结符中也有\",{\"1\":{\"220\":1}}],[\"那么不如使用预渲染\",{\"1\":{\"181\":1}}],[\"那么所有的clone的机器\",{\"1\":{\"49\":1}}],[\"那他很有可能是这样的\",{\"1\":{\"31\":1}}],[\"别的机器可以clone这个原始版本库\",{\"1\":{\"49\":1}}],[\"最佳实践\",{\"0\":{\"136\":1,\"139\":1,\"168\":1}}],[\"最终将这个js对象一次性attach到dom树上\",{\"1\":{\"102\":1}}],[\"最终可以通过一系列操作使这棵树映射到真实环境上\",{\"1\":{\"101\":1}}],[\"最终发布上线时如果web应用和接口服务器不在一起仍会跨域\",{\"1\":{\"88\":1}}],[\"最小化element的移动\",{\"1\":{\"71\":1}}],[\"最初是为了更好地管理linux内核开发而设计\",{\"1\":{\"49\":1}}],[\"最后得到三个列表\",{\"1\":{\"16\":1}}],[\"最后对脚本语句求值\",{\"1\":{\"15\":1}}],[\"扩展性强\",{\"1\":{\"48\":1}}],[\"具有标识的值\",{\"1\":{\"216\":1}}],[\"具有相同chunk名的模块会被打包到一起\",{\"1\":{\"146\":1}}],[\"具有闪电般快速的性能\",{\"1\":{\"47\":1}}],[\"具名插槽\",{\"1\":{\"99\":1}}],[\"具体需要看术语部分\",{\"1\":{\"35\":1}}],[\"具体实现取决于实际环境\",{\"1\":{\"35\":1}}],[\"易于学习和使用\",{\"1\":{\"48\":1}}],[\"易于学习\",{\"1\":{\"47\":1}}],[\"旨在快速高效地处理从小型到大型项目的所以事务特性\",{\"1\":{\"47\":1}}],[\"grammatical\",{\"1\":{\"218\":1}}],[\"gif哟组合更优秀的算法\",{\"1\":{\"169\":1}}],[\"gif的图片替换为webp格式的图片\",{\"1\":{\"169\":1}}],[\"gif\",{\"1\":{\"168\":2}}],[\"git自带一个git\",{\"1\":{\"52\":1}}],[\"git常用的命令\",{\"1\":{\"51\":1}}],[\"git就会修改文件的状态\",{\"1\":{\"50\":1}}],[\"git\",{\"1\":{\"50\":1,\"52\":2,\"53\":2,\"54\":9,\"55\":14}}],[\"git能够知道git用以计算校验和的机制叫做\",{\"1\":{\"50\":1}}],[\"git中所有数据在存储前都计算校验和\",{\"1\":{\"50\":1}}],[\"git==子目录\",{\"1\":{\"50\":1}}],[\"github实际就可以充当这个服务器角色\",{\"1\":{\"49\":1}}],[\"git是一个分布式版本控制软件\",{\"1\":{\"49\":1}}],[\"git是目前世界上最先进的分布式版本控制系统\",{\"1\":{\"47\":1}}],[\"gzip\",{\"1\":{\"168\":18}}],[\"gz文件访问不到的时候\",{\"1\":{\"168\":1}}],[\"gz文件合并成一个文件\",{\"1\":{\"168\":1}}],[\"gz文件\",{\"1\":{\"168\":2}}],[\"gz\",{\"1\":{\"168\":3}}],[\"gmt\",{\"1\":{\"153\":1}}],[\"getlongip\",{\"1\":{\"182\":1}}],[\"getip\",{\"1\":{\"182\":1}}],[\"getelementbyid\",{\"1\":{\"139\":2,\"189\":1,\"190\":1,\"191\":1}}],[\"getuserinfo读取用户数据\",{\"1\":{\"118\":1}}],[\"getdata\",{\"1\":{\"107\":1}}],[\"getter\",{\"1\":{\"60\":1}}],[\"glo\",{\"1\":{\"12\":5}}],[\"global\",{\"1\":{\"32\":2,\"52\":2}}],[\"globaldeclarationinstantiation\",{\"1\":{\"16\":1,\"27\":1}}],[\"globalthisvalue\",{\"1\":{\"26\":1}}],[\"globalthis\",{\"1\":{\"10\":1}}],[\"globalenv\",{\"1\":{\"5\":1}}],[\"globalobject\",{\"1\":{\"5\":1}}],[\"here\",{\"1\":{\"233\":2}}],[\"hexintegerliteral\",{\"1\":{\"226\":1}}],[\"help\",{\"1\":{\"182\":1}}],[\"headless\",{\"1\":{\"182\":2}}],[\"header中添加vary\",{\"1\":{\"168\":2}}],[\"heavy\",{\"1\":{\"146\":1}}],[\"home\",{\"1\":{\"182\":1}}],[\"host\",{\"1\":{\"7\":1}}],[\"hostdefined\",{\"1\":{\"5\":1}}],[\"hint\",{\"1\":{\"180\":1}}],[\"history的路由切换会被当成http请求\",{\"1\":{\"109\":1}}],[\"href=\",{\"1\":{\"179\":4}}],[\"http2\",{\"1\":{\"179\":2}}],[\"httpd\",{\"1\":{\"168\":2}}],[\"http\",{\"1\":{\"168\":4}}],[\"htm\",{\"1\":{\"168\":2}}],[\"htmlwebpackplugin\",{\"1\":{\"180\":2}}],[\"html$|\",{\"1\":{\"168\":1}}],[\"html文档\",{\"1\":{\"158\":1}}],[\"html5的loading属性\",{\"0\":{\"149\":1}}],[\"html\",{\"1\":{\"109\":1,\"168\":6,\"180\":3,\"182\":1}}],[\"h5的新增属性\",{\"1\":{\"149\":1}}],[\"hash\",{\"1\":{\"50\":1}}],[\"hg\",{\"1\":{\"46\":1}}],[\"可出现在终结符或非终结符之后\",{\"1\":{\"228\":1}}],[\"可视区域要渲染的数据\",{\"1\":{\"193\":1}}],[\"可视区域的结束数据索引\",{\"1\":{\"193\":1}}],[\"可视区域的起始数据索引\",{\"1\":{\"193\":1}}],[\"可u考虑设置在page对象的其他字段下\",{\"1\":{\"129\":1}}],[\"可u使用getstoragesync\",{\"1\":{\"129\":1}}],[\"可获取子组件的信息\",{\"1\":{\"99\":1}}],[\"可选\",{\"1\":{\"90\":1}}],[\"可能发生在其子vnode更新之前\",{\"1\":{\"90\":1}}],[\"可做到离线工作\",{\"1\":{\"46\":1}}],[\"可本地提交\",{\"1\":{\"46\":1}}],[\"可以使用await语句\",{\"1\":{\"221\":1}}],[\"可以使用async和await完成相同作用的事情\",{\"1\":{\"78\":1}}],[\"可以在img标签中直接使用来实现懒加载\",{\"1\":{\"149\":1}}],[\"可以在前置页面将一些有用的字段带到当前页\",{\"1\":{\"129\":1}}],[\"可以限定用户在输入时\",{\"1\":{\"137\":1}}],[\"可以轻松的获取微信提供的用户身份标识\",{\"1\":{\"118\":1}}],[\"可以从里面拿到\",{\"1\":{\"107\":1}}],[\"可以设置以下props属性\",{\"1\":{\"105\":1}}],[\"可以分为四个方面\",{\"1\":{\"104\":1}}],[\"可以操作dom\",{\"1\":{\"90\":1}}],[\"可以用computed提前过滤那些不需要显示的项\",{\"1\":{\"68\":1}}],[\"可以遵循以下的规则\",{\"1\":{\"54\":1}}],[\"可以通过git\",{\"1\":{\"50\":1}}],[\"可以离线工作\",{\"1\":{\"46\":1}}],[\"可以让你回到任何一个时间点\",{\"1\":{\"40\":1}}],[\"可以看出throw语句不可以换行\",{\"1\":{\"233\":1}}],[\"可以看出\",{\"1\":{\"37\":1,\"212\":1,\"221\":2}}],[\"可以看出分歧为forinofloopevaluation\",{\"1\":{\"30\":1}}],[\"可以表达为一个参数表达式\",{\"1\":{\"36\":1}}],[\"特别是程序的源代码\",{\"1\":{\"45\":1}}],[\"服务器会核对资源的etag与if\",{\"1\":{\"157\":1}}],[\"服务器会核对资源的修改时间是否一致\",{\"1\":{\"156\":1}}],[\"服务器\",{\"1\":{\"49\":1}}],[\"服务器的行为使其可以容纳多用户\",{\"1\":{\"45\":1}}],[\"服务端判断无效登陆状态时再返回需重新执行登录过程的消息给小程序\",{\"1\":{\"119\":1}}],[\"服务端比对session对应的记录\",{\"1\":{\"118\":1}}],[\"服务端\",{\"1\":{\"9\":1}}],[\"它表示该产生式的右侧不包含任何终结符号或非终结符号\",{\"1\":{\"231\":1}}],[\"它们表示其中之一\",{\"1\":{\"229\":1}}],[\"它执行以下步骤\",{\"1\":{\"203\":1}}],[\"它的变化不会触发dom树的重新渲染\",{\"1\":{\"191\":1}}],[\"它能保证回调函数在屏幕每一次的刷新间隔中只被执行一次\",{\"1\":{\"190\":1}}],[\"它通过显示简单的灰色块和线条\",{\"1\":{\"183\":1}}],[\"它可以出现在任何地方\",{\"1\":{\"111\":1}}],[\"它可以有效地处理任何规模的项目\",{\"1\":{\"48\":1}}],[\"它是基于客户端\",{\"1\":{\"45\":1}}],[\"它必须要接入到一个宿主环境\",{\"1\":{\"7\":1}}],[\"您可以记录源文件和文档的历史记录\",{\"1\":{\"45\":1}}],[\"使得多个\",{\"1\":{\"168\":1}}],[\"使之包含在下次提交的快照中\",{\"1\":{\"50\":1}}],[\"使用描述性短语来描述少数非终结符号\",{\"1\":{\"234\":1}}],[\"使用elementplus的骨架屏\",{\"1\":{\"184\":1}}],[\"使用prerender\",{\"1\":{\"182\":1}}],[\"使用gzip压缩\",{\"1\":{\"168\":1}}],[\"使用git和gitlab搭建版本控制环境是现在互联网公司最流行的版本控制方式\",{\"1\":{\"47\":1}}],[\"使用webpack的require\",{\"1\":{\"146\":1}}],[\"使用了旧式八进制转义\",{\"1\":{\"247\":1}}],[\"使用了treeshanking\",{\"1\":{\"112\":1}}],[\"使用了生命周期函数\",{\"1\":{\"70\":1}}],[\"使用\",{\"0\":{\"93\":1},\"1\":{\"146\":1}}],[\"使用对代码进行优化可获得系统的整体升级\",{\"1\":{\"84\":1}}],[\"使用vm\",{\"1\":{\"79\":1}}],[\"使用new\",{\"1\":{\"71\":1}}],[\"使用它\",{\"1\":{\"45\":1}}],[\"使其成为运行中的执行上下文\",{\"1\":{\"15\":1}}],[\"源码体积\",{\"1\":{\"112\":1}}],[\"源码\",{\"0\":{\"75\":1}}],[\"源代码控制软件\",{\"1\":{\"44\":1}}],[\"源文本解析结果\",{\"1\":{\"4\":1}}],[\"代理服务器都可以缓存\",{\"1\":{\"154\":1}}],[\"代理\",{\"1\":{\"88\":1}}],[\"代表工具为git\",{\"1\":{\"46\":1}}],[\"代表工具有svn\",{\"1\":{\"43\":1}}],[\"代码点\",{\"1\":{\"234\":1}}],[\"代码打包目录和以前配置的目录保持一致\",{\"1\":{\"182\":1}}],[\"代码侵入性大\",{\"1\":{\"181\":1}}],[\"代码分割是一种将代码拆分为多个小块\",{\"1\":{\"147\":1}}],[\"代码中本身逻辑错误\",{\"1\":{\"103\":1}}],[\"代码格式修改\",{\"1\":{\"54\":1}}],[\"代码重构\",{\"1\":{\"54\":1}}],[\"代码集中化管理\",{\"1\":{\"43\":1,\"46\":1}}],[\"代码创建的执行上下文还有一个词法环境\",{\"1\":{\"1\":1}}],[\"必须联网\",{\"1\":{\"43\":1}}],[\"适合多人团队协作开发\",{\"1\":{\"43\":1,\"46\":1}}],[\"适合管理文本\",{\"1\":{\"42\":1}}],[\"其语义通过语法导向操作进行表达\",{\"1\":{\"212\":1}}],[\"其他的类可以访问mixin类的方法而不必成为子类\",{\"1\":{\"73\":1}}],[\"其他修改\",{\"1\":{\"54\":1}}],[\"其他每个人都从这个\",{\"1\":{\"49\":1}}],[\"其作用是用来跟踪管理版本的\",{\"1\":{\"50\":1}}],[\"其是一个开源协作社区\",{\"1\":{\"49\":1}}],[\"其不支持远程操作\",{\"1\":{\"42\":1}}],[\"其值为undefined\",{\"1\":{\"23\":1}}],[\"缺点\",{\"1\":{\"42\":1,\"43\":1,\"46\":1,\"104\":3,\"189\":1}}],[\"很多系统中都有内置\",{\"1\":{\"42\":1}}],[\"很自然的就组成了一个作用域链\",{\"1\":{\"27\":1}}],[\"集中式版本控制系统\",{\"1\":{\"41\":1}}],[\"本地仓库\",{\"1\":{\"50\":1}}],[\"本地版本控制系统\",{\"1\":{\"41\":1}}],[\"本文只对ecma的内容进行简单的介绍\",{\"1\":{\"35\":1}}],[\"保证访问的正确性\",{\"1\":{\"159\":1}}],[\"保证了并行开发的可行\",{\"1\":{\"40\":1}}],[\"保持空白\",{\"1\":{\"159\":1}}],[\"保持接口不变的情况下\",{\"1\":{\"84\":1}}],[\"保存事件参数\",{\"1\":{\"133\":1}}],[\"保存了下次将提交的文件列表信息\",{\"1\":{\"50\":1}}],[\"保存当前上下文的词法环境oldenv\",{\"1\":{\"31\":1}}],[\"保存当前指向上下文的词法环境oldenv\",{\"1\":{\"28\":1}}],[\"通知后端开启gzip\",{\"1\":{\"167\":1}}],[\"通知相关的依赖函数\",{\"1\":{\"113\":1}}],[\"通信\",{\"0\":{\"125\":1}}],[\"通常做法是在登陆状态中保存有效期数据\",{\"1\":{\"119\":1}}],[\"通常版本控制系统都支持分支\",{\"1\":{\"40\":1}}],[\"通过分页\",{\"1\":{\"187\":1}}],[\"通过预加载关键资源\",{\"1\":{\"178\":1}}],[\"通过压缩\",{\"1\":{\"165\":1}}],[\"通过缓存资源\",{\"1\":{\"151\":1}}],[\"通过按需加载\",{\"1\":{\"144\":1}}],[\"通过防抖\",{\"1\":{\"131\":1}}],[\"通过宿主环境提供的setdata\",{\"1\":{\"125\":1}}],[\"通过getcurrentpages\",{\"1\":{\"121\":1}}],[\"通过wx\",{\"1\":{\"118\":1,\"121\":1}}],[\"通过微信提供的登录能力\",{\"1\":{\"118\":1}}],[\"通过动态重写当前页面来与用户交互\",{\"1\":{\"108\":1}}],[\"通过vue\",{\"1\":{\"90\":1}}],[\"通过服务端实现代理请求转发\",{\"1\":{\"88\":1}}],[\"通过把他们添加到vue\",{\"1\":{\"84\":1}}],[\"通过issamevnode进行判断\",{\"1\":{\"83\":1}}],[\"通过slot插槽向组件内部指定位置传递内容\",{\"1\":{\"98\":1}}],[\"通过samevnode判断节点是否一样\",{\"1\":{\"82\":1}}],[\"通过set方法合并\",{\"1\":{\"75\":1}}],[\"通过app\",{\"1\":{\"67\":1}}],[\"通过函数运行时的为组件添加属性\",{\"1\":{\"64\":1}}],[\"通过文档控制\",{\"1\":{\"40\":1}}],[\"通过该字段连接起来的所有的环境记录器共同构成一条作用域链\",{\"1\":{\"20\":1}}],[\"历史记录功能使我们不怕改错代码了\",{\"1\":{\"40\":1}}],[\"随时恢复到任意时间点\",{\"1\":{\"40\":1}}],[\"记录事件参数\",{\"1\":{\"136\":1}}],[\"记录文件所有的历史变化\",{\"1\":{\"40\":1}}],[\"记录器\",{\"1\":{\"5\":1,\"31\":1}}],[\"赋给图的初版一个版本等级\",{\"1\":{\"40\":1}}],[\"能在组件切换过程中将状态保留在内存中\",{\"1\":{\"105\":1}}],[\"能记录任何工程项目内各个模块的改动历程\",{\"1\":{\"40\":1}}],[\"能追踪工程蓝图从诞生一直到定案的过程\",{\"1\":{\"40\":1}}],[\"借此能在软件开发的过程中\",{\"1\":{\"40\":1}}],[\"verbose\",{\"1\":{\"168\":1}}],[\"version\",{\"0\":{\"251\":1},\"1\":{\"40\":1,\"168\":2}}],[\"vite\",{\"1\":{\"168\":4}}],[\"vnd\",{\"1\":{\"168\":2}}],[\"vnode\",{\"1\":{\"90\":1}}],[\"v表示穿插普通文本节点\",{\"1\":{\"100\":1}}],[\"val\",{\"1\":{\"207\":5}}],[\"value\",{\"1\":{\"90\":1,\"205\":1,\"207\":2}}],[\"variabledeclaration\",{\"1\":{\"218\":1,\"228\":1}}],[\"variableenvironment\",{\"1\":{\"4\":1}}],[\"vary\",{\"1\":{\"168\":2}}],[\"varnames\",{\"1\":{\"26\":1}}],[\"vardeclarations\",{\"1\":{\"16\":1}}],[\"vardeclarednames对语句递归的调用\",{\"1\":{\"16\":1}}],[\"vardeclarednames语义收集标识符\",{\"1\":{\"16\":1}}],[\"var\",{\"1\":{\"12\":6,\"20\":1,\"32\":2,\"133\":1,\"139\":3}}],[\"vshow函数\",{\"1\":{\"70\":1}}],[\"vm\",{\"1\":{\"70\":1,\"79\":1,\"107\":1}}],[\"vm实例为undefined\",{\"1\":{\"63\":1}}],[\"vue会在需要时加载该组件\",{\"1\":{\"146\":1}}],[\"vue3采用proxy重写了响应式系统\",{\"1\":{\"113\":1}}],[\"vue3优化\",{\"0\":{\"112\":1}}],[\"vue3\",{\"0\":{\"110\":1}}],[\"vue3中已废弃\",{\"1\":{\"92\":1}}],[\"vue权限管理\",{\"0\":{\"104\":1}}],[\"vue组件渲染到页面上需要经过templete=>render=>vnode=>dom过程\",{\"1\":{\"100\":1}}],[\"vue调用\",{\"1\":{\"80\":1}}],[\"vue的构造函数\",{\"1\":{\"79\":1}}],[\"vue将开启一个异步更新队列\",{\"1\":{\"77\":1}}],[\"vue只会更改顺序\",{\"1\":{\"71\":1}}],[\"vue就会使用就地复地原则\",{\"1\":{\"71\":1}}],[\"vue模板编译时\",{\"1\":{\"67\":1}}],[\"vue\",{\"0\":{\"252\":1},\"1\":{\"66\":1,\"78\":1,\"84\":3,\"88\":1,\"146\":6,\"168\":2}}],[\"vue最终都会通过vue\",{\"1\":{\"62\":1}}],[\"vuex\",{\"1\":{\"60\":1}}],[\"vue2使用defineproperty来劫持整个对象\",{\"1\":{\"113\":1}}],[\"vue2使用object\",{\"1\":{\"65\":1}}],[\"vue2\",{\"0\":{\"59\":1}}],[\"v\",{\"0\":{\"67\":1,\"69\":1},\"1\":{\"54\":1,\"67\":1,\"69\":5,\"70\":2,\"76\":1,\"93\":1,\"104\":1,\"244\":1}}],[\"版本等级改为\",{\"1\":{\"40\":1}}],[\"版本控制工具\",{\"2\":{\"56\":1}}],[\"版本控制系统根据类别可以分成\",{\"1\":{\"41\":1}}],[\"版本控制系统就像一台时光机器\",{\"1\":{\"40\":1}}],[\"版本控制能提供项目的设计者\",{\"1\":{\"40\":1}}],[\"版本控制也是一种软件工程技巧\",{\"1\":{\"40\":1}}],[\"版本控制\",{\"1\":{\"40\":1}}],[\"版本管理\",{\"0\":{\"40\":1}}],[\"0~3和八进制数的组合\",{\"1\":{\"245\":1}}],[\"0~9\",{\"1\":{\"244\":1}}],[\"0x和\",{\"1\":{\"226\":1}}],[\"0xhexdigits\",{\"1\":{\"226\":1}}],[\"00\",{\"1\":{\"153\":1}}],[\"07\",{\"1\":{\"153\":1}}],[\"0中\",{\"1\":{\"153\":1}}],[\"0\",{\"1\":{\"50\":1,\"168\":3,\"189\":4,\"190\":3,\"191\":3,\"242\":1,\"245\":2}}],[\"0ℤ\",{\"1\":{\"38\":1}}],[\"0𝔽\",{\"1\":{\"38\":1}}],[\"就是查询dns映射表\",{\"1\":{\"159\":1}}],[\"就到等待逻辑层的指令才能进行下一步工作\",{\"1\":{\"125\":1}}],[\"就可以获取用户的openid\",{\"1\":{\"118\":1}}],[\"就不需要创建对象\",{\"1\":{\"112\":1}}],[\"就会展示如下的伪代码\",{\"1\":{\"38\":1}}],[\"就新增了许多访问页面尺寸和位置的属性\",{\"1\":{\"10\":1}}],[\"该指令将整个代码块至于严格模式\",{\"1\":{\"247\":1}}],[\"该位置后面跟着的内容必须不属于\",{\"1\":{\"232\":1}}],[\"该位置后面跟着的内容必须属于\",{\"1\":{\"232\":1}}],[\"该位置后面不能是\",{\"1\":{\"232\":1}}],[\"该位置后面必须是\",{\"1\":{\"232\":1}}],[\"该方法的跳转不会缓存页面\",{\"1\":{\"121\":1}}],[\"该数据应该在服务端校验登陆状态和约定时间做对比\",{\"1\":{\"119\":1}}],[\"该占位符可以在后期使用自己的标记语言填充\",{\"1\":{\"97\":1}}],[\"该节点包含创建dom节点所需信息\",{\"1\":{\"70\":1}}],[\"该产生式是以下的缩写\",{\"1\":{\"37\":1}}],[\"该全局环境范围内加载的所有ecmascript代码\",{\"1\":{\"5\":1}}],[\"或语法导向操作\",{\"1\":{\"202\":1}}],[\"或者使用子包预加载技术\",{\"1\":{\"128\":1}}],[\"或关闭当前页面返回上一页wx\",{\"1\":{\"117\":1}}],[\"或系统资源占用高\",{\"1\":{\"117\":1}}],[\"或从后台进入前台显示时触发|\",{\"1\":{\"116\":1}}],[\"或称为算法\",{\"1\":{\"38\":1}}],[\"或一个参数列表通过逗号\",{\"1\":{\"36\":1}}],[\"或函数声明\",{\"1\":{\"22\":1}}],[\"参数可以为空\",{\"1\":{\"231\":1}}],[\"参数的产生式\",{\"1\":{\"231\":1}}],[\"参数化产生式的完整样子\",{\"1\":{\"37\":1}}],[\"参数化的产生式\",{\"1\":{\"37\":1,\"218\":1}}],[\"参数化的产生式是一组产生式的简写\",{\"1\":{\"37\":1}}],[\"参数列表的产生式\",{\"1\":{\"36\":1}}],[\"参数中有名为arguments的参数\",{\"1\":{\"32\":1}}],[\"非八进制十进制转义\",{\"1\":{\"245\":1,\"246\":1}}],[\"非行终结符\",{\"1\":{\"245\":1}}],[\"非转义\",{\"1\":{\"245\":1}}],[\"非转义字符\",{\"1\":{\"245\":1}}],[\"非终结\",{\"1\":{\"227\":1}}],[\"非终结符号为斜体类型\",{\"1\":{\"227\":1}}],[\"非终结符号在ecma中显示为斜体类型\",{\"1\":{\"36\":1}}],[\"非同源请求\",{\"1\":{\"87\":1}}],[\"非图形的各种逻辑均抽象为一个统一的概念来实现的开发模式\",{\"1\":{\"84\":1}}],[\"非关系组件间之间\",{\"1\":{\"60\":1}}],[\"非严格模式函数标识符会被实例化并初始化为undefined\",{\"1\":{\"16\":1}}],[\"产生式的目标结果\",{\"1\":{\"227\":1}}],[\"产生式的下标如果是\",{\"1\":{\"37\":1}}],[\"产生式的上下标\",{\"1\":{\"35\":1}}],[\"产生式用于说明或定义句子的组成结构\",{\"1\":{\"36\":1}}],[\"也称为目标符号\",{\"1\":{\"227\":1}}],[\"也称为产生式\",{\"1\":{\"227\":1}}],[\"也称为非终结符号\",{\"1\":{\"36\":1}}],[\"也没有必要\",{\"1\":{\"138\":2}}],[\"也可以实现按需加载\",{\"1\":{\"146\":1}}],[\"也可以是一个指令函数\",{\"1\":{\"90\":1}}],[\"也可以参与别人的开源项目\",{\"1\":{\"49\":1}}],[\"也是diff的一种优化策略\",{\"1\":{\"71\":1}}],[\"也从服务器仓库中拉取别人的提交\",{\"1\":{\"49\":1}}],[\"也就是作用域链的起点\",{\"1\":{\"20\":1}}],[\"也就是说agent是程序的执行环境\",{\"1\":{\"1\":1}}],[\"省略语义\",{\"1\":{\"35\":1}}],[\"伪代码\",{\"1\":{\"35\":1}}],[\"简单\",{\"1\":{\"42\":1}}],[\"简言之\",{\"1\":{\"40\":1}}],[\"简略的表达了各种含义\",{\"1\":{\"35\":1}}],[\"简述步骤\",{\"1\":{\"28\":1,\"32\":1}}],[\"概念\",{\"1\":{\"35\":1}}],[\"阅读ecma有以下难点\",{\"1\":{\"35\":1}}],[\"闭包\",{\"0\":{\"33\":1}}],[\"从而实现登录功能\",{\"1\":{\"118\":1}}],[\"从而实现两种类型标识符的隔离\",{\"1\":{\"32\":1}}],[\"从哈希表寻找key一致的vnode节点再分情况操作\",{\"1\":{\"83\":1}}],[\"从旧的vnode为key值\",{\"1\":{\"82\":1}}],[\"从提交历史恢复某个删除掉的某个分支\",{\"1\":{\"55\":1}}],[\"从结果来看lexicallydeclarednames只会收集let\",{\"1\":{\"16\":1}}],[\"碰撞\",{\"1\":{\"32\":1}}],[\"为非终结符\",{\"1\":{\"226\":1}}],[\"为什么需要\",{\"0\":{\"102\":1}}],[\"为了避免参数表达式的标识符与函数体变量声明的标识符发生\",{\"1\":{\"32\":1}}],[\"为词法声明创建一次环境记录器\",{\"1\":{\"31\":1}}],[\"表单验证\",{\"1\":{\"137\":1}}],[\"表单修饰符\",{\"1\":{\"76\":1}}],[\"表格列\",{\"1\":{\"98\":1}}],[\"表示一个可选符号\",{\"1\":{\"228\":1}}],[\"表示没有产生式的元素\",{\"1\":{\"226\":1}}],[\"表示如果目标符不带有该参数\",{\"1\":{\"220\":1}}],[\"表示如果目标符带有该参数\",{\"1\":{\"220\":1}}],[\"表示非终结符不可以带有该参数\",{\"1\":{\"220\":1}}],[\"表示非终结符可以带有该参数\",{\"1\":{\"220\":1}}],[\"表示in是in操作符还是for\",{\"1\":{\"219\":1}}],[\"表示是否可以使用return语句\",{\"1\":{\"219\":1}}],[\"表示是否可以使用无名函数\",{\"1\":{\"219\":1}}],[\"表示是否可以使用yield语句\",{\"1\":{\"219\":1}}],[\"表示是否可以使用await语句\",{\"1\":{\"219\":1}}],[\"表示是否可以使用数字分隔符\",{\"1\":{\"219\":1}}],[\"表示应用returnifabrupt\",{\"1\":{\"206\":1}}],[\"表示数据已经安全的保存在本地数据库中\",{\"1\":{\"50\":1}}],[\"表示对一个已修改文件的当前版本做了标记\",{\"1\":{\"50\":1}}],[\"表示修改了文件\",{\"1\":{\"50\":1}}],[\"表示函数的顶级作用域\",{\"1\":{\"23\":1}}],[\"表达式参数\",{\"1\":{\"32\":1}}],[\"普通参数\",{\"1\":{\"32\":1}}],[\"然后产生式的一个或多个代换式在后续行跟随\",{\"1\":{\"227\":1}}],[\"然后开始进入启动状态\",{\"1\":{\"127\":1}}],[\"然后校验有效期\",{\"1\":{\"118\":1}}],[\"然后带给服务端\",{\"1\":{\"118\":1}}],[\"然后根据对象渲染\",{\"1\":{\"112\":1}}],[\"然后再vue范围之外渲染他\",{\"1\":{\"111\":1}}],[\"然后以校验和来引用\",{\"1\":{\"50\":1}}],[\"然后递增\",{\"1\":{\"31\":1}}],[\"然后进行声明实例化\",{\"1\":{\"27\":1}}],[\"然后进行全局声明实例化\",{\"1\":{\"15\":1}}],[\"复制上一个记录器中的绑定和值\",{\"1\":{\"31\":1}}],[\"重新发起请求\",{\"1\":{\"152\":1}}],[\"重新计算延迟时间\",{\"1\":{\"132\":1}}],[\"重新计时\",{\"1\":{\"132\":1}}],[\"重新赋值\",{\"1\":{\"75\":1}}],[\"重定向方法wx\",{\"1\":{\"117\":1}}],[\"重写了虚拟dom实现\",{\"1\":{\"110\":1}}],[\"重做上一次commit\",{\"1\":{\"54\":1}}],[\"重要\",{\"1\":{\"31\":1,\"205\":1,\"207\":1,\"208\":1,\"212\":2,\"221\":1,\"234\":1}}],[\"重复\",{\"1\":{\"31\":1}}],[\"恢复词法环境为oldenv\",{\"1\":{\"31\":1}}],[\"恢复与此执行上下文的关联代码所需的任何状态\",{\"1\":{\"4\":1}}],[\"将argument\",{\"1\":{\"205\":1}}],[\"将png\",{\"1\":{\"169\":1}}],[\"将多次的setdata合并为一次setdata\",{\"1\":{\"129\":1}}],[\"将访问率低的页面放入子包内\",{\"1\":{\"128\":1}}],[\"将用户访问率高的页面放在主包内\",{\"1\":{\"128\":1}}],[\"将所有的事件拦截后\",{\"1\":{\"125\":1}}],[\"将逻辑层和视图层分开\",{\"1\":{\"124\":1}}],[\"将code作为参数传递为微信服务器指定接口\",{\"1\":{\"118\":1}}],[\"将el文本节点设置为vnode的文本节点\",{\"1\":{\"83\":1}}],[\"将当前真实dom移动到oldendvnode前面\",{\"1\":{\"82\":1}}],[\"将当前真实dom移动到oldendvnode后面\",{\"1\":{\"82\":1}}],[\"将vue的开发模型扩展到其他平台\",{\"1\":{\"111\":1}}],[\"将vnode转为真实dom\",{\"1\":{\"79\":1}}],[\"将v值给予result\",{\"1\":{\"31\":1}}],[\"将html解析成ast树\",{\"1\":{\"79\":1}}],[\"将回调函数压入\",{\"1\":{\"78\":1}}],[\"将命名变为驼峰命名法\",{\"1\":{\"76\":1}}],[\"将共有的功能以对象的方式传入mixins\",{\"1\":{\"73\":1}}],[\"将f插入到c之前\",{\"1\":{\"71\":1}}],[\"将模板template转为ast结构的js对象\",{\"1\":{\"70\":1}}],[\"将快照永久性存储到git本地仓库\",{\"1\":{\"50\":1}}],[\"将设计恢复到之前任一状态的选择权\",{\"1\":{\"40\":1}}],[\"将其转换为解析树\",{\"1\":{\"14\":1}}],[\"求值for块中的语句为result\",{\"1\":{\"31\":1}}],[\"返回的值传递给normalcompletion\",{\"1\":{\"208\":1}}],[\"返回的时候跳转到首页\",{\"1\":{\"121\":1}}],[\"返回这个完成记录\",{\"1\":{\"205\":1}}],[\"返回上一级或多级页面\",{\"1\":{\"121\":1}}],[\"返回上一个页面\",{\"1\":{\"117\":1}}],[\"返回\",{\"1\":{\"121\":1}}],[\"返回到首页\",{\"1\":{\"106\":1}}],[\"返回列表页\",{\"1\":{\"106\":1}}],[\"返回原来值\",{\"1\":{\"76\":1}}],[\"返回一个具有节流能力的函数\",{\"1\":{\"135\":1}}],[\"返回一个具有防抖能力的函数\",{\"1\":{\"132\":1}}],[\"返回一个promise对象\",{\"1\":{\"78\":1}}],[\"返回一个node节点\",{\"1\":{\"70\":1}}],[\"返回一个脚本记录器\",{\"1\":{\"14\":1}}],[\"返回result\",{\"1\":{\"31\":1}}],[\"返回v\",{\"1\":{\"31\":1}}],[\"条件\",{\"1\":{\"31\":1}}],[\"posts\",{\"0\":{\"250\":1}}],[\"png\",{\"1\":{\"168\":2}}],[\"php\",{\"1\":{\"168\":2}}],[\"plain\",{\"1\":{\"168\":2}}],[\"plugin插件\",{\"1\":{\"182\":1}}],[\"plugins\",{\"1\":{\"168\":2,\"180\":1,\"182\":1}}],[\"plugin\",{\"1\":{\"168\":4,\"180\":2,\"182\":1}}],[\"pending用于标识\",{\"1\":{\"78\":1}}],[\"periterationlets\",{\"1\":{\"31\":1}}],[\"parameters\",{\"1\":{\"218\":1}}],[\"parent\",{\"1\":{\"60\":1}}],[\"pass\",{\"1\":{\"168\":2}}],[\"passive\",{\"1\":{\"76\":1}}],[\"path\",{\"1\":{\"168\":2,\"182\":6}}],[\"patchvnode方法做了以下操作\",{\"1\":{\"83\":1}}],[\"patchvnode后\",{\"1\":{\"82\":2}}],[\"patchvnode\",{\"1\":{\"82\":1}}],[\"patch方法接受参数\",{\"1\":{\"82\":1}}],[\"patch函数通过虚拟dom算法利用vnode节点创建真实dom节点\",{\"1\":{\"70\":1}}],[\"pagecount\",{\"1\":{\"189\":4,\"190\":4,\"191\":4}}],[\"page\",{\"1\":{\"189\":1,\"190\":1,\"191\":1}}],[\"pagemodel全部以栈的形式进行管理\",{\"1\":{\"120\":1}}],[\"pages\",{\"1\":{\"117\":4}}],[\"puppeteerrenderer\",{\"1\":{\"182\":1}}],[\"public\",{\"1\":{\"154\":1,\"180\":1}}],[\"pull\",{\"1\":{\"51\":1,\"54\":2}}],[\"push\",{\"1\":{\"51\":1,\"55\":1,\"179\":3}}],[\"private\",{\"1\":{\"154\":1}}],[\"privateenvironment\",{\"1\":{\"4\":1}}],[\"preset\",{\"1\":{\"182\":1}}],[\"presets\",{\"1\":{\"182\":1}}],[\"prerender\",{\"1\":{\"182\":1}}],[\"prerenderspaplugin\",{\"1\":{\"182\":3}}],[\"preload\",{\"1\":{\"179\":4,\"180\":1}}],[\"pre\",{\"1\":{\"117\":1}}],[\"preventdefault方法\",{\"1\":{\"76\":1}}],[\"prevent\",{\"1\":{\"76\":1}}],[\"production\",{\"1\":{\"168\":1}}],[\"province\",{\"1\":{\"146\":2}}],[\"provide与inject\",{\"1\":{\"60\":1}}],[\"proxy劫持整个对象的基本操作\",{\"1\":{\"113\":1}}],[\"proxy可以对整个对象进行监听\",{\"1\":{\"113\":1}}],[\"proxy\",{\"1\":{\"88\":1,\"168\":2}}],[\"prototype上实现\",{\"1\":{\"84\":1}}],[\"property\",{\"1\":{\"168\":1}}],[\"prop\",{\"1\":{\"76\":1}}],[\"props\",{\"1\":{\"75\":1}}],[\"props传递\",{\"1\":{\"60\":1}}],[\"project\",{\"1\":{\"53\":1}}],[\"process\",{\"1\":{\"10\":1,\"168\":1}}],[\"有单引号\",{\"1\":{\"243\":1}}],[\"有局限性\",{\"1\":{\"181\":1}}],[\"有效期是通过expires来指定的\",{\"1\":{\"153\":1}}],[\"有效减轻服务端压力\",{\"1\":{\"137\":1}}],[\"有一些事件会频繁触发\",{\"1\":{\"132\":1}}],[\"有很多的操作序列被简化成简单的词汇存在于各种代换式中\",{\"1\":{\"35\":1}}],[\"有以下简述步骤\",{\"1\":{\"31\":1}}],[\"有的语句的求值过程中\",{\"1\":{\"27\":1}}],[\"当文法定义中的冒号后面跟着\",{\"1\":{\"229\":1}}],[\"当文法参数放在代换式左侧时\",{\"1\":{\"220\":1}}],[\"当文件被修改后\",{\"1\":{\"157\":1}}],[\"当资源加载完成时\",{\"1\":{\"184\":1}}],[\"当资源到期时\",{\"1\":{\"155\":1}}],[\"当浏览器请求一个网站的时候\",{\"1\":{\"158\":1}}],[\"当web应用获取资源时\",{\"1\":{\"152\":1}}],[\"当缓存过期时\",{\"1\":{\"151\":2,\"156\":1,\"157\":1}}],[\"当元素进入视口时才加载相关资源\",{\"1\":{\"150\":1}}],[\"当元素自身时触发处理函数\",{\"1\":{\"76\":1}}],[\"当用户点击到子包的目录时\",{\"1\":{\"128\":1}}],[\"当视图存在交互时\",{\"1\":{\"125\":1}}],[\"当静态内容大到一定量级时候\",{\"1\":{\"112\":1}}],[\"当数据发生改变时\",{\"1\":{\"82\":1}}],[\"当组件存在与mixin对象相同的选项时\",{\"1\":{\"74\":1}}],[\"当组件使用mixins对象的选项是所有的mixins对象的选项都将被混入该组件本身的选项中来\",{\"1\":{\"73\":1}}],[\"当置于不同的标签中\",{\"1\":{\"67\":1}}],[\"当需要做强制更新\",{\"1\":{\"66\":1}}],[\"当我们修改文件的时候\",{\"1\":{\"50\":1}}],[\"当我们通过git\",{\"1\":{\"50\":1}}],[\"当做了第一次改变后\",{\"1\":{\"40\":1}}],[\"当函数调用时\",{\"1\":{\"32\":1}}],[\"当false\",{\"1\":{\"31\":1}}],[\"当在for中使用let\",{\"1\":{\"31\":1}}],[\"当前上下文的词法环境恢复为oldenv\",{\"1\":{\"28\":1}}],[\"设置缓存的最大有效期\",{\"1\":{\"154\":1}}],[\"设置一个合适的时间间隔\",{\"1\":{\"137\":1}}],[\"设置了缓存的组件会多出来两个生命周期钩子\",{\"1\":{\"105\":1}}],[\"设置全局错误处理函数\",{\"1\":{\"103\":1}}],[\"设置新旧vnode的头尾指针\",{\"1\":{\"83\":1}}],[\"设置display属性\",{\"1\":{\"70\":1}}],[\"设置提交代码的用户信息命令如下\",{\"1\":{\"52\":1}}],[\"设置为它真正的值\",{\"1\":{\"205\":1}}],[\"设置为\",{\"1\":{\"32\":1,\"205\":1}}],[\"设置当前上下文的词法环境为loopenv\",{\"1\":{\"31\":1}}],[\"设置当前上下文的词法环境为blockenv\",{\"1\":{\"28\":1}}],[\"设置scriptcontext的词法环境\",{\"1\":{\"15\":1}}],[\"块级声明实例化\",{\"1\":{\"27\":1}}],[\"需要使用resourcehintwebpackplugin插件\",{\"1\":{\"180\":1}}],[\"需要压缩的最小值\",{\"1\":{\"168\":1}}],[\"需要将对应的处理状态呈现给用户\",{\"1\":{\"125\":1}}],[\"需要自身后端调用微信服务器获取用户信息\",{\"1\":{\"118\":1}}],[\"需要更新10个dom节点\",{\"1\":{\"102\":1}}],[\"需要创建newstrtidx和newendidx之间的所有节点\",{\"1\":{\"81\":1}}],[\"需要创建环境记录器\",{\"1\":{\"27\":1}}],[\"需要先解析脚本\",{\"1\":{\"14\":1}}],[\"字符串文本位于指令\",{\"1\":{\"247\":1}}],[\"字符串文本是\",{\"1\":{\"242\":1}}],[\"字符串形式的指令表达式\",{\"1\":{\"90\":1}}],[\"字符串列表\",{\"1\":{\"26\":1}}],[\"字段应当代替操作的返回值使用\",{\"1\":{\"207\":1}}],[\"字段指向另一个环境记录器\",{\"1\":{\"20\":1}}],[\"字段上\",{\"1\":{\"16\":3}}],[\"字段\",{\"1\":{\"5\":1,\"23\":1,\"25\":1,\"26\":1}}],[\"中文件的内容或目录结构计算出来\",{\"1\":{\"50\":1}}],[\"中的定义进行\",{\"1\":{\"242\":1}}],[\"中的每个参数都经过组合\",{\"1\":{\"37\":1}}],[\"中的绑定\",{\"1\":{\"26\":1}}],[\"中才能发挥作用\",{\"1\":{\"7\":1}}],[\"此时await\",{\"1\":{\"221\":1}}],[\"此时小程序需要重新加载启动\",{\"1\":{\"126\":1}}],[\"此操作用于强调正在返回一个完成记录\",{\"1\":{\"203\":1}}],[\"此插件不能使用太高的版本\",{\"1\":{\"168\":1}}],[\"此字段拥有强大的缓存控制能力\",{\"1\":{\"154\":1}}],[\"此外\",{\"1\":{\"32\":1,\"40\":1}}],[\"此环境记录是否为with语句创建\",{\"1\":{\"25\":1}}],[\"此范围使用的全局对象\",{\"1\":{\"5\":1}}],[\"否则不存在\",{\"1\":{\"220\":2}}],[\"否则没有\",{\"1\":{\"220\":1}}],[\"否则报错\",{\"1\":{\"168\":1}}],[\"否则只会监听自定义事件\",{\"1\":{\"76\":1}}],[\"否则直接设置display\",{\"1\":{\"70\":1}}],[\"否则为表达式中的默认值\",{\"1\":{\"32\":1}}],[\"否则为undefined\",{\"1\":{\"32\":1}}],[\"否则\",{\"1\":{\"23\":1,\"152\":1,\"205\":1}}],[\"的定义\",{\"1\":{\"227\":2}}],[\"的定义从被定义非终结名称\",{\"1\":{\"227\":1}}],[\"的定义时\",{\"1\":{\"38\":1}}],[\"的\",{\"1\":{\"181\":1}}],[\"的模块进行预加载\",{\"1\":{\"180\":1}}],[\"的方法\",{\"1\":{\"147\":1}}],[\"的重要组成部分\",{\"1\":{\"45\":1}}],[\"的组合\",{\"1\":{\"36\":1,\"218\":1}}],[\"的外部作用域\",{\"1\":{\"24\":1}}],[\"的newtarget参数的值\",{\"1\":{\"23\":1}}],[\"的标识符\",{\"1\":{\"16\":1}}],[\"是以下的缩写\",{\"1\":{\"229\":1}}],[\"是以下的缩写variabledeclaration\",{\"1\":{\"228\":1}}],[\"是否禁用压缩\",{\"1\":{\"168\":1}}],[\"是否在http\",{\"1\":{\"168\":2}}],[\"是否删除原有静态资源文件\",{\"1\":{\"168\":1}}],[\"是否执行\",{\"1\":{\"135\":1}}],[\"是否是文本节点\",{\"1\":{\"82\":1}}],[\"是web组件内的一个占位符\",{\"1\":{\"97\":1}}],[\"是源配置管理\",{\"1\":{\"45\":1}}],[\"是维护工程蓝图的标准作法\",{\"1\":{\"40\":1}}],[\"是\",{\"1\":{\"23\":1}}],[\"说明该用户没有注册\",{\"1\":{\"118\":1}}],[\"说明\",{\"1\":{\"23\":1,\"25\":1,\"26\":1}}],[\"附加字段\",{\"1\":{\"23\":1,\"25\":1,\"26\":1}}],[\"一条产生式可以绑定多条语法导向操作\",{\"1\":{\"212\":1}}],[\"一般情况下只要不是\",{\"1\":{\"208\":1}}],[\"一般情况下建议开启\",{\"1\":{\"168\":2}}],[\"一般在git仓库目录中\",{\"1\":{\"50\":1}}],[\"一秒之内可能执行几十次\",{\"1\":{\"132\":1}}],[\"一次操作时\",{\"1\":{\"102\":1}}],[\"一键copy的功能\",{\"1\":{\"91\":1}}],[\"一系列的http头组成\",{\"1\":{\"88\":1}}],[\"一样时\",{\"1\":{\"82\":1}}],[\"一旦发生变化\",{\"1\":{\"79\":1}}],[\"一切回到合并前的状态\",{\"1\":{\"55\":1}}],[\"一种通过同层的树节点进行比较的高效算法\",{\"1\":{\"81\":1}}],[\"一种简单的版本控制形式如下\",{\"1\":{\"40\":1}}],[\"一种声明式环境记录\",{\"1\":{\"23\":1,\"24\":1}}],[\"一个包含它\",{\"1\":{\"228\":1}}],[\"一个包含修饰符的对象\",{\"1\":{\"90\":1}}],[\"一个省略可选元素\",{\"1\":{\"228\":1}}],[\"一个\",{\"1\":{\"205\":1}}],[\"一个完成记录\",{\"1\":{\"203\":1}}],[\"一个节流函数具有以下要点\",{\"1\":{\"135\":1}}],[\"一个防抖函数具有以下要点\",{\"1\":{\"132\":1}}],[\"一个小程序存在多个界面\",{\"1\":{\"124\":1}}],[\"一个页面只会调用一次\",{\"1\":{\"117\":1}}],[\"一个库\",{\"1\":{\"84\":1}}],[\"一个普通的js对象\",{\"1\":{\"73\":1}}],[\"一个git项目的初始有两个途径\",{\"1\":{\"53\":1}}],[\"一个ecmascript全局环境\",{\"1\":{\"5\":1}}],[\"一个realm由一组内置对象\",{\"1\":{\"5\":1}}],[\"一个agent记录器和一个执行线程\",{\"1\":{\"2\":1}}],[\"一个执行线程\",{\"1\":{\"1\":1}}],[\"常见的字段有\",{\"1\":{\"154\":1}}],[\"常量\",{\"1\":{\"22\":1}}],[\"常用于绑定块级语句内的标识符\",{\"1\":{\"21\":1}}],[\"对该位置后面紧跟的内容进行限制\",{\"1\":{\"232\":1}}],[\"对非可见区域中的数据不渲染或部分渲染的技术\",{\"1\":{\"192\":1}}],[\"对大量的数据分批渲染\",{\"1\":{\"188\":1}}],[\"对调试很有用\",{\"1\":{\"182\":1}}],[\"对按需加载\",{\"1\":{\"180\":1}}],[\"对超过10kb的文件进行压缩\",{\"1\":{\"168\":1}}],[\"对这些静态文件的加载速度也会得到提升\",{\"1\":{\"166\":1}}],[\"对不参与更新的元素\",{\"1\":{\"112\":1}}],[\"对会发生变化的地方增加了flag标记\",{\"1\":{\"112\":1}}],[\"对性能会有影响\",{\"1\":{\"104\":1}}],[\"对应的index序列为value值的哈希表中寻找到与newstartvnode一致key的旧的vnode节点\",{\"1\":{\"82\":1}}],[\"对新旧vnode进行diff\",{\"1\":{\"72\":1}}],[\"对参数标识符进行实例化\",{\"1\":{\"32\":1}}],[\"对函数进行声明实例化\",{\"1\":{\"32\":1}}],[\"对其求值\",{\"1\":{\"31\":1}}],[\"对标识符进行对应的绑定\",{\"1\":{\"31\":1}}],[\"对declarations中的元素\",{\"1\":{\"29\":1}}],[\"对块中语句挨个执行\",{\"1\":{\"28\":1}}],[\"对象或函数都可以\",{\"1\":{\"63\":1}}],[\"对象环境记录\",{\"1\":{\"26\":1}}],[\"对象环境记录绑定一组字符串标识符名称\",{\"1\":{\"25\":1}}],[\"对象环境记录器\",{\"1\":{\"21\":1}}],[\"对象\",{\"1\":{\"23\":1,\"25\":1,\"26\":1}}],[\"对于脚本内容的情况返回undefined\",{\"1\":{\"212\":1}}],[\"对于大量数据渲染的时候\",{\"1\":{\"187\":1}}],[\"对于一些不经常变的内容\",{\"1\":{\"158\":1}}],[\"对于事件的分发处理\",{\"1\":{\"125\":1}}],[\"对于每个小程序\",{\"1\":{\"118\":1}}],[\"对于以上\",{\"1\":{\"71\":1}}],[\"对于多人协作项目\",{\"1\":{\"40\":1}}],[\"对于vardeclarations中的标识符\",{\"1\":{\"16\":1}}],[\"对于functionstoinitialize\",{\"1\":{\"16\":1}}],[\"对于lexdeclarations中的标识符\",{\"1\":{\"16\":1}}],[\"声明式环境记录绑定其范围内包含的声明所定义的一组标识符\",{\"1\":{\"22\":1}}],[\"声明式环境记录器\",{\"1\":{\"21\":1,\"26\":1}}],[\"声明实例化\",{\"1\":{\"16\":1}}],[\"绑定值\",{\"1\":{\"90\":1}}],[\"绑定了事件以后只能触发一次\",{\"1\":{\"76\":1}}],[\"绑定标识符\",{\"1\":{\"31\":2}}],[\"绑定模块顶层代码的标识符\",{\"1\":{\"21\":1}}],[\"绑定函数体内的标识符\",{\"1\":{\"21\":1}}],[\"绑定全局顶层代码的标识符\",{\"1\":{\"21\":1}}],[\"绑定到全局环境记录器的\",{\"1\":{\"16\":2}}],[\"这一短语\",{\"1\":{\"231\":1}}],[\"这一特性使得cvs成为位于不同地点的人同时处理数据文件\",{\"1\":{\"45\":1}}],[\"这意味着\",{\"1\":{\"221\":1}}],[\"这里是求值语义\",{\"1\":{\"212\":1}}],[\"这里是给html\",{\"1\":{\"168\":1}}],[\"这样就不会引起丢帧现象\",{\"1\":{\"190\":1}}],[\"这样就可以相对的节约宽带\",{\"1\":{\"166\":1}}],[\"这种方式压缩后的文件少\",{\"1\":{\"168\":1}}],[\"这种方式是默认的\",{\"1\":{\"168\":1}}],[\"这种做法需要将本地的登陆状态发送到服务端\",{\"1\":{\"119\":1}}],[\"这个时间不一定和屏幕的刷新时间相同\",{\"1\":{\"189\":1}}],[\"这个新的chunk会被webpack通过jsonp来异步加载\",{\"1\":{\"147\":1}}],[\"这个过程就是热启动\",{\"1\":{\"126\":1}}],[\"这个函数的作用是从this\",{\"1\":{\"96\":1}}],[\"这类反馈应该通知给开发者的逻辑层\",{\"1\":{\"125\":1}}],[\"这么一来\",{\"1\":{\"49\":1}}],[\"这是一个由40个十六进制字符\",{\"1\":{\"50\":1}}],[\"这是版本控制系统的基本能力\",{\"1\":{\"40\":1}}],[\"这是with语句和全局对象所使用的记录器\",{\"1\":{\"21\":1}}],[\"这说明一个参数列表\",{\"1\":{\"36\":1}}],[\"这些比较的算法操作决定了ecmascript\",{\"1\":{\"216\":1}}],[\"这些规则与语法的产生式相关联\",{\"1\":{\"213\":1}}],[\"这些静态node\",{\"1\":{\"112\":1}}],[\"这些名称直接对应于其绑定对象的属性名称\",{\"1\":{\"25\":1}}],[\"这些标识符可能是变量\",{\"1\":{\"22\":1}}],[\"这些内置对象会帮助实现最基础的语言功能\",{\"1\":{\"8\":1}}],[\"这些内置对象至少包括一个全局对象以及所有标准定义的固有对象\",{\"1\":{\"8\":1}}],[\"这就是执行上下文的代码查找变量的起点\",{\"1\":{\"20\":1}}],[\"<=\",{\"1\":{\"189\":1,\"190\":1,\"191\":1}}],[\"<el\",{\"1\":{\"184\":1}}],[\"<link\",{\"1\":{\"179\":4}}],[\"<li>列表项<\",{\"1\":{\"139\":6}}],[\"<img\",{\"1\":{\"149\":1}}],[\"<component\",{\"1\":{\"146\":1}}],[\"<template>\",{\"1\":{\"146\":1,\"184\":1}}],[\"<script>\",{\"1\":{\"139\":1,\"146\":1,\"184\":1}}],[\"<ul\",{\"1\":{\"139\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"<button\",{\"1\":{\"139\":1}}],[\"<body>\",{\"1\":{\"139\":1}}],[\"<原分支名>\",{\"1\":{\"55\":1}}],[\"<新分支名><提交id>\",{\"1\":{\"55\":1}}],[\"<新分支名>\",{\"1\":{\"55\":4}}],[\"<分支名>\",{\"1\":{\"55\":5}}],[\"<本地分支名>\",{\"1\":{\"54\":1}}],[\"<远程库名>\",{\"1\":{\"55\":2}}],[\"<远程分支名>\",{\"1\":{\"54\":2}}],[\"<远程仓库名>\",{\"1\":{\"54\":2}}],[\"<具体文件路径+全名>\",{\"1\":{\"54\":1}}],[\"<\",{\"1\":{\"20\":1,\"139\":3,\"146\":2,\"168\":4,\"184\":2,\"189\":1,\"190\":1,\"191\":1}}],[\"环境记录绑定的对象\",{\"1\":{\"25\":1}}],[\"环境记录器存放着标识符的绑定\",{\"1\":{\"21\":1}}],[\"环境记录器\",{\"1\":{\"20\":1}}],[\"环境会初始化一系列的内置对象\",{\"1\":{\"8\":1}}],[\"关闭所有的页面\",{\"1\":{\"121\":1}}],[\"关闭当前页面\",{\"1\":{\"121\":1}}],[\"关于\",{\"1\":{\"79\":1}}],[\"关于提交信息的格式\",{\"1\":{\"54\":1}}],[\"关于函数的环境记录器的指向问题\",{\"1\":{\"32\":1}}],[\"关于严格模式\",{\"1\":{\"16\":1}}],[\"关联代码使用的内置值\",{\"1\":{\"5\":1}}],[\"关联代码来源的模块记录器\",{\"1\":{\"4\":1}}],[\"实现原理\",{\"0\":{\"124\":1}}],[\"实现\",{\"0\":{\"90\":1}}],[\"实例挂载过程\",{\"0\":{\"79\":1}}],[\"实例化\",{\"1\":{\"32\":1}}],[\"实例化函数对象\",{\"1\":{\"29\":1}}],[\"实例化的过程中\",{\"1\":{\"27\":1}}],[\"实例化相应的函数对象\",{\"1\":{\"16\":1}}],[\"实际上是成为全局对象的属性\",{\"1\":{\"16\":2}}],[\"并强制实施上述规则\",{\"1\":{\"247\":1}}],[\"并指示要排除的扩展来指定不允许某些扩展\",{\"1\":{\"230\":1}}],[\"并称为产生式的静态语义\",{\"1\":{\"213\":1}}],[\"并使用其结果\",{\"1\":{\"208\":1}}],[\"并使他指向旧有的\",{\"1\":{\"27\":1}}],[\"并返回一个完成记录\",{\"1\":{\"203\":1}}],[\"并更新资源的有效期\",{\"1\":{\"155\":1}}],[\"并更新到页面中\",{\"1\":{\"79\":1}}],[\"并不需要等到用户点击到子包页面后再下载子包\",{\"1\":{\"128\":1}}],[\"并同时用客户端本地的包进行启动\",{\"1\":{\"126\":1}}],[\"并确保这个新的property同样是响应式的\",{\"1\":{\"66\":1}}],[\"并切换为这个分支\",{\"1\":{\"55\":1}}],[\"并写提交信息\",{\"1\":{\"54\":1}}],[\"并包括指定文件的新变化\",{\"1\":{\"54\":1}}],[\"并没有主次之分\",{\"1\":{\"49\":1}}],[\"并提供简单直观的界面\",{\"1\":{\"48\":1}}],[\"并为每次改动编上序号\",{\"1\":{\"40\":1}}],[\"并把变量声明的标识符绑定在这个环境当中\",{\"1\":{\"32\":1}}],[\"并把执行上下文的词法环境指向该记录器\",{\"1\":{\"32\":1}}],[\"并完成环境记录器的绑定\",{\"1\":{\"29\":1}}],[\"并且结果中的完成记录的\",{\"1\":{\"207\":1}}],[\"并且可以采用分包加载的操作\",{\"1\":{\"128\":1}}],[\"并且至少包含签名\",{\"1\":{\"101\":1}}],[\"并且组件在系统中是被复用的\",{\"1\":{\"84\":1}}],[\"并且加入父节点\",{\"1\":{\"82\":1}}],[\"并且渲染到页面中\",{\"1\":{\"80\":1}}],[\"并且最大程度在同适当的地方对同类型的element\",{\"1\":{\"71\":1}}],[\"并且各自把各自的提交推送到服务器仓库里\",{\"1\":{\"49\":1}}],[\"并且\",{\"1\":{\"32\":1}}],[\"并且没有本地的this值\",{\"1\":{\"23\":1}}],[\"并且如果函数不是一个箭头函数\",{\"1\":{\"23\":1}}],[\"并绑定到全局环境记录器的\",{\"1\":{\"16\":1}}],[\"并扩展全局对象的属性和方法\",{\"1\":{\"8\":1}}],[\"dns解析\",{\"1\":{\"180\":1}}],[\"dns查询过程大约消耗20毫秒\",{\"1\":{\"159\":1}}],[\"directed\",{\"1\":{\"202\":1}}],[\"directive方法进行注册\",{\"1\":{\"90\":1}}],[\"directives\",{\"1\":{\"75\":1}}],[\"dirname\",{\"1\":{\"182\":3}}],[\"disable\",{\"1\":{\"168\":1}}],[\"dist\",{\"1\":{\"168\":2,\"182\":3}}],[\"diff创建了a的真实节点\",{\"1\":{\"81\":1}}],[\"diff后建立c的真实节点\",{\"1\":{\"81\":1}}],[\"diff后将他作为第一个真实节点\",{\"1\":{\"81\":1}}],[\"diff算法优化\",{\"1\":{\"112\":1}}],[\"diff算法\",{\"0\":{\"81\":1}}],[\"diff\",{\"1\":{\"54\":2}}],[\"d与c\",{\"1\":{\"71\":1}}],[\"date\",{\"1\":{\"71\":1}}],[\"dataset\",{\"1\":{\"150\":1}}],[\"data\",{\"1\":{\"75\":1,\"79\":1,\"146\":1}}],[\"data初始化时\",{\"1\":{\"63\":1}}],[\"data属性为何是一个函数\",{\"0\":{\"61\":1}}],[\"declarations2\",{\"1\":{\"213\":2}}],[\"declarations1\",{\"1\":{\"213\":2}}],[\"declarativerecord\",{\"1\":{\"16\":1,\"26\":1}}],[\"dependencies\",{\"1\":{\"147\":1}}],[\"default\",{\"1\":{\"146\":2,\"168\":1,\"219\":1}}],[\"defineconfig\",{\"1\":{\"168\":2}}],[\"defineproperty无法劫持到对象的删除和添加属性的操作\",{\"1\":{\"113\":1}}],[\"defineproperty和proxy实现的区别\",{\"1\":{\"113\":1}}],[\"defineproperty实现的数据响应式\",{\"1\":{\"65\":1}}],[\"definereactive新增属性的响应式\",{\"1\":{\"66\":1}}],[\"deleteoriginalassets\",{\"1\":{\"168\":1}}],[\"delegation\",{\"0\":{\"138\":1}}],[\"delay\",{\"1\":{\"136\":2}}],[\"debounce\",{\"1\":{\"133\":1}}],[\"deactivated\",{\"1\":{\"105\":1}}],[\"d\",{\"1\":{\"55\":1}}],[\"documentfragment是dom节点\",{\"1\":{\"191\":1}}],[\"document\",{\"1\":{\"139\":3,\"150\":1,\"189\":2,\"190\":2,\"191\":3}}],[\"docs\",{\"1\":{\"54\":1}}],[\"dom是很慢的\",{\"1\":{\"102\":1}}],[\"dom元素依然存在\",{\"1\":{\"69\":1}}],[\"dom\",{\"1\":{\"9\":1}}],[\"函数\",{\"1\":{\"146\":1}}],[\"函数调用时\",{\"1\":{\"133\":1}}],[\"函数调用中使用的this值\",{\"1\":{\"23\":1}}],[\"函数定义处进行声明实例化的时候\",{\"1\":{\"32\":1}}],[\"函数体内有名为arguments的函数或标识符为arguments的词法声明语句\",{\"1\":{\"32\":1}}],[\"函数是箭头函数\",{\"1\":{\"32\":1}}],[\"函数被调用时会触发函数的内部方法\",{\"1\":{\"32\":1}}],[\"函数求值\",{\"0\":{\"32\":1}}],[\"函数声明实例化\",{\"1\":{\"27\":1}}],[\"函数声明和变量声明的绑定名称\",{\"1\":{\"26\":1}}],[\"函数声明的标识符\",{\"1\":{\"16\":1}}],[\"函数对象\",{\"1\":{\"23\":1}}],[\"函数环境记录器\",{\"1\":{\"21\":1}}],[\"函数执行完毕后重置定时器\",{\"1\":{\"136\":1}}],[\"函数执行\",{\"1\":{\"3\":1}}],[\"只等于它本身\",{\"1\":{\"216\":1}}],[\"只对可见区域进行渲染\",{\"1\":{\"192\":1}}],[\"只是用来改善少数营销页面\",{\"1\":{\"181\":1}}],[\"只在每两秒钟响应一次联想\",{\"1\":{\"137\":1}}],[\"只在update\",{\"1\":{\"90\":2}}],[\"只需窗口调整完后\",{\"1\":{\"134\":1}}],[\"只需用户最后一次输入完\",{\"1\":{\"134\":1}}],[\"只需要将后台的小程序切换到前台\",{\"1\":{\"126\":1}}],[\"只会执行一次\",{\"1\":{\"135\":1}}],[\"只会被创建一次\",{\"1\":{\"112\":1}}],[\"只会处理declaration\",{\"1\":{\"16\":1}}],[\"只调用一次\",{\"1\":{\"90\":2}}],[\"只影响实例本身和使用插槽的子组件\",{\"1\":{\"66\":1}}],[\"只要有一台电脑充当服务器的角色\",{\"1\":{\"49\":1}}],[\"只有主线程执行完才会去检查事件队列中的任务是否需要执行\",{\"1\":{\"189\":1}}],[\"只有旧节点有子节点\",{\"1\":{\"82\":1}}],[\"只有新节点有子节点\",{\"1\":{\"82\":1}}],[\"只有一个原始版仓库\",{\"1\":{\"49\":1}}],[\"只有执行到对应的位置\",{\"1\":{\"16\":1}}],[\"只提供抽象定义\",{\"1\":{\"35\":1}}],[\"才能知道确切的值\",{\"1\":{\"16\":1}}],[\"不能跟8\",{\"1\":{\"245\":1}}],[\"不能跟八进制数\",{\"1\":{\"245\":2}}],[\"不能包含以下之一\",{\"1\":{\"243\":1}}],[\"不能使用yeild\",{\"1\":{\"221\":1}}],[\"不具有标识的值\",{\"1\":{\"216\":1}}],[\"不进行强缓存\",{\"1\":{\"154\":1}}],[\"不强制缓存\",{\"1\":{\"154\":1}}],[\"不需要node\",{\"1\":{\"181\":1}}],[\"不需要冒泡\",{\"1\":{\"138\":1}}],[\"不需要深度遍历\",{\"1\":{\"113\":1}}],[\"不过期\",{\"1\":{\"119\":1}}],[\"不使用的内容都会被摇掉\",{\"1\":{\"112\":1}}],[\"不使用key会依次比较\",{\"1\":{\"71\":1}}],[\"不缓存\",{\"1\":{\"106\":1}}],[\"不会跨层级比较\",{\"1\":{\"81\":1}}],[\"不会处理函数和类中的\",{\"1\":{\"16\":1}}],[\"不可更改\",{\"1\":{\"52\":1}}],[\"不可变的绑定\",{\"1\":{\"29\":1}}],[\"不同浏览器的缓存机制不同\",{\"1\":{\"159\":1}}],[\"不同时使用使用在同一个标签上\",{\"1\":{\"68\":1}}],[\"不同状态的文件在git中处于不同的工作区域\",{\"1\":{\"50\":1}}],[\"不同的执行上下文可能有不同的realm\",{\"1\":{\"4\":1}}],[\"不为空\",{\"1\":{\"31\":1}}],[\"不等于初始化\",{\"1\":{\"16\":1}}],[\"创建documentfragment\",{\"1\":{\"191\":1}}],[\"创建newstrtidx和newendidx之间的所有节点\",{\"1\":{\"81\":1}}],[\"创建b的真实节点\",{\"1\":{\"81\":1}}],[\"创建一个新的对象\",{\"1\":{\"66\":1}}],[\"创建或在当前目录初始化一个git代码库\",{\"1\":{\"53\":1}}],[\"创建的函数环境记录器的outenv就会使用这个值\",{\"1\":{\"32\":1}}],[\"创建arguments对象\",{\"1\":{\"32\":1}}],[\"创建函数的执行上下文以及函数环境记录器\",{\"1\":{\"32\":1}}],[\"创建记录器\",{\"1\":{\"31\":2}}],[\"创建新的环境记录器loopenv\",{\"1\":{\"31\":1}}],[\"创建新的声明式环境记录器blockenv\",{\"1\":{\"28\":1}}],[\"创建此环境记录的函数对象\",{\"1\":{\"23\":1}}],[\"创建ecmascript代码执行上下文\",{\"1\":{\"15\":1}}],[\"创建全局执行上下文\",{\"1\":{\"13\":1}}],[\"每条产生式的目标符实例都可以通过调用自身的语法导向操作\",{\"1\":{\"212\":1}}],[\"每页\",{\"1\":{\"191\":1}}],[\"每页多少条\",{\"1\":{\"189\":1,\"191\":1}}],[\"每次都会协商缓存\",{\"1\":{\"154\":1}}],[\"每次冷启动时\",{\"1\":{\"126\":1}}],[\"每次组件渲染时\",{\"1\":{\"107\":1}}],[\"每次路由跳转都要做权限判断\",{\"1\":{\"104\":1}}],[\"每次路由跳转都要做判断\",{\"1\":{\"104\":3}}],[\"每次路由跳转前做校验\",{\"1\":{\"104\":1}}],[\"每个页面可以看成一个pagemodel\",{\"1\":{\"120\":1}}],[\"每个组件的实例都会共用一个内存地址\",{\"1\":{\"62\":1}}],[\"每个计算机都是一个完整仓库\",{\"1\":{\"46\":1}}],[\"每个环境记录器都有一个\",{\"1\":{\"20\":1}}],[\"每个agent至多只有一个正在实际执行代码的执行上下文\",{\"1\":{\"4\":1}}],[\"每个agent包含一个执行上下文栈\",{\"1\":{\"1\":1}}],[\"每个agent对于一个js程序\",{\"1\":{\"1\":1}}],[\"每一段脚本执行前\",{\"1\":{\"14\":1}}],[\"abrupt\",{\"1\":{\"205\":1,\"208\":1}}],[\"abstract\",{\"1\":{\"202\":1}}],[\"about\",{\"1\":{\"181\":1}}],[\"abort\",{\"1\":{\"55\":1}}],[\"and\",{\"1\":{\"213\":1}}],[\"animated=\",{\"1\":{\"184\":1}}],[\"anonymous\",{\"1\":{\"179\":1}}],[\"accept\",{\"1\":{\"168\":2}}],[\"activated\",{\"1\":{\"105\":1}}],[\"actions\",{\"1\":{\"60\":1}}],[\"api\",{\"1\":{\"168\":2}}],[\"application\",{\"1\":{\"168\":10}}],[\"apply\",{\"1\":{\"133\":1,\"136\":1}}],[\"appendchild\",{\"1\":{\"139\":1,\"189\":1,\"190\":1,\"191\":2}}],[\"appsecret\",{\"1\":{\"118\":1}}],[\"app\",{\"1\":{\"117\":5}}],[\"age=604800\",{\"1\":{\"154\":1}}],[\"age\",{\"1\":{\"154\":1}}],[\"agent标识符\",{\"1\":{\"5\":1}}],[\"agentsignifier\",{\"1\":{\"5\":1}}],[\"agent是程序的执行环境\",{\"1\":{\"2\":1}}],[\"agent集群中的agent可以共享内存\",{\"1\":{\"1\":1}}],[\"ajax\",{\"1\":{\"132\":1}}],[\"algorithm\",{\"1\":{\"168\":2}}],[\"alive判断是否需要缓存\",{\"1\":{\"106\":1}}],[\"alive\",{\"0\":{\"105\":1}}],[\"alt=\",{\"1\":{\"149\":1}}],[\"alt\",{\"1\":{\"13\":1,\"15\":1,\"16\":1,\"20\":1,\"32\":2,\"49\":1,\"50\":1,\"126\":1}}],[\"attrs\",{\"1\":{\"101\":1}}],[\"attrs与listeners\",{\"1\":{\"60\":1}}],[\"assert\",{\"1\":{\"203\":1,\"205\":1,\"207\":1}}],[\"assign\",{\"1\":{\"66\":2}}],[\"assignmentexpression\",{\"1\":{\"36\":2}}],[\"assignmentexpressionargumentlist\",{\"1\":{\"36\":1}}],[\"as=\",{\"1\":{\"179\":4}}],[\"asyncchunks\",{\"1\":{\"180\":1}}],[\"asynccomponent\",{\"1\":{\"146\":3}}],[\"async\",{\"1\":{\"76\":1}}],[\"amend\",{\"1\":{\"54\":1}}],[\"address\",{\"1\":{\"52\":1}}],[\"add\",{\"1\":{\"51\":1,\"54\":2}}],[\"a\",{\"1\":{\"32\":3,\"38\":1,\"40\":1,\"55\":1,\"203\":1,\"204\":2,\"205\":2,\"207\":1}}],[\"args\",{\"1\":{\"136\":2}}],[\"argument\",{\"1\":{\"38\":3,\"205\":6}}],[\"argumentlist\",{\"1\":{\"36\":3}}],[\"arguments\",{\"1\":{\"32\":1,\"133\":1,\"136\":1}}],[\"arg\",{\"1\":{\"32\":2,\"90\":1,\"133\":2}}],[\"await作为关键字使用\",{\"1\":{\"221\":1}}],[\"await\",{\"1\":{\"30\":2,\"219\":1,\"231\":1}}],[\"固有对象\",{\"1\":{\"13\":1}}],[\"⑦\",{\"1\":{\"12\":1}}],[\"⑥\",{\"1\":{\"12\":1}}],[\"7\",{\"1\":{\"12\":1,\"229\":1,\"247\":1}}],[\"⑤\",{\"1\":{\"12\":1}}],[\"6666\",{\"1\":{\"168\":2}}],[\"6\",{\"1\":{\"12\":1,\"38\":1,\"168\":1,\"229\":1}}],[\"位于块内的声明语句\",{\"1\":{\"12\":1}}],[\"位于函数体内声明语句\",{\"1\":{\"12\":1}}],[\"④\",{\"1\":{\"12\":1}}],[\"t\",{\"1\":{\"244\":1}}],[\"ttf\",{\"1\":{\"168\":2}}],[\"ttf$|\",{\"1\":{\"168\":1}}],[\"type\",{\"1\":{\"180\":1}}],[\"type=\",{\"1\":{\"179\":1}}],[\"types\",{\"1\":{\"168\":2}}],[\"typeerror\",{\"1\":{\"168\":1,\"204\":2}}],[\"timer\",{\"1\":{\"133\":3,\"136\":4}}],[\"timer=null\",{\"1\":{\"133\":1}}],[\"timerfunc\",{\"1\":{\"78\":1}}],[\"tappromise\",{\"1\":{\"168\":1}}],[\"tag\",{\"1\":{\"101\":1}}],[\"target\",{\"1\":{\"32\":3,\"139\":1,\"150\":3}}],[\"t表示渲染插槽的函数\",{\"1\":{\"100\":1}}],[\"try\",{\"1\":{\"168\":2}}],[\"trim\",{\"1\":{\"76\":1}}],[\"true\",{\"1\":{\"12\":1,\"38\":1,\"168\":1,\"184\":1,\"215\":1}}],[\"toplevellexicallyscopeddeclarations\",{\"1\":{\"213\":2}}],[\"to\",{\"1\":{\"207\":1}}],[\"total\",{\"1\":{\"189\":4,\"190\":4,\"191\":4}}],[\"touch\",{\"1\":{\"84\":1}}],[\"tortoisehg是一个免费的分布式源代码管理工具\",{\"1\":{\"48\":1}}],[\"tortoisesvn是一款非常易于使用的跨平台的版本控制\",{\"1\":{\"44\":1}}],[\"toboolean方法的抽象定义\",{\"1\":{\"38\":1}}],[\"thorw的代换式\",{\"1\":{\"233\":1}}],[\"throwstatement\",{\"1\":{\"233\":1}}],[\"throwcompletion\",{\"1\":{\"204\":1}}],[\"throw\",{\"1\":{\"204\":1,\"233\":1}}],[\"throttle\",{\"1\":{\"136\":1}}],[\"threshold\",{\"1\":{\"168\":2}}],[\"then\",{\"1\":{\"146\":1,\"147\":1}}],[\"the\",{\"1\":{\"38\":1,\"213\":1}}],[\"this\",{\"1\":{\"38\":1,\"66\":2,\"133\":1,\"136\":1}}],[\"thisbindingstatus\",{\"1\":{\"23\":1}}],[\"thisvalue\",{\"1\":{\"23\":1}}],[\"this绑定\",{\"1\":{\"23\":1}}],[\"template\",{\"1\":{\"180\":1}}],[\"template>\",{\"1\":{\"146\":1,\"184\":1}}],[\"templatemap\",{\"1\":{\"5\":1}}],[\"teleport\",{\"1\":{\"111\":1}}],[\"test\",{\"1\":{\"54\":1,\"168\":1,\"182\":1}}],[\"text\",{\"1\":{\"13\":1,\"15\":1,\"16\":1,\"20\":1,\"32\":2,\"49\":1,\"50\":1,\"126\":1,\"168\":6}}],[\"identifiernamebut\",{\"1\":{\"230\":1}}],[\"identifier\",{\"1\":{\"230\":1}}],[\"identifier词法的产生式\",{\"1\":{\"230\":1}}],[\"id=\",{\"1\":{\"139\":2,\"189\":1,\"190\":1,\"191\":1}}],[\"ie对dns记录默认的缓存时间为30分钟\",{\"1\":{\"159\":1}}],[\"img\",{\"1\":{\"150\":3}}],[\"image\",{\"1\":{\"149\":1,\"168\":6,\"179\":1}}],[\"import\",{\"1\":{\"146\":3,\"147\":1,\"168\":2,\"180\":1}}],[\"import和\",{\"1\":{\"22\":1}}],[\"isintersecting\",{\"1\":{\"150\":1}}],[\"is=\",{\"1\":{\"146\":1}}],[\"is\",{\"1\":{\"38\":3,\"203\":1,\"205\":2,\"207\":1}}],[\"iswithenvironment\",{\"1\":{\"25\":1}}],[\"i<10\",{\"1\":{\"31\":1}}],[\"i++\",{\"1\":{\"20\":1,\"31\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"i\",{\"1\":{\"20\":4,\"31\":1,\"189\":3,\"190\":3,\"191\":3}}],[\"if原理\",{\"1\":{\"70\":1}}],[\"if的状态更改\",{\"1\":{\"69\":1}}],[\"if是真正的条件渲染\",{\"1\":{\"69\":1}}],[\"if切换有一个局部编译\",{\"1\":{\"69\":1}}],[\"if隐藏是将dom元素整个添加或删除\",{\"1\":{\"69\":1}}],[\"if先进行判断\",{\"1\":{\"67\":1}}],[\"if高\",{\"1\":{\"67\":1}}],[\"if和v\",{\"0\":{\"67\":1,\"69\":1}}],[\"if\",{\"1\":{\"12\":1,\"38\":2,\"104\":1,\"133\":1,\"136\":1,\"146\":1,\"150\":1,\"155\":2,\"156\":1,\"168\":1,\"189\":1,\"190\":1,\"191\":1,\"205\":1}}],[\"invalid\",{\"1\":{\"247\":1}}],[\"inject\",{\"1\":{\"180\":1,\"182\":1}}],[\"indexpath\",{\"1\":{\"182\":1}}],[\"index\",{\"1\":{\"168\":8,\"180\":3,\"182\":2,\"189\":2,\"190\":2,\"191\":2}}],[\"install\",{\"1\":{\"168\":2}}],[\"inserted\",{\"1\":{\"90\":1}}],[\"intersectionobserver\",{\"1\":{\"150\":1}}],[\"intrinsics\",{\"1\":{\"5\":1}}],[\"include\",{\"1\":{\"105\":1,\"180\":1}}],[\"initdata方法\",{\"1\":{\"79\":1}}],[\"initstate方法完成props\",{\"1\":{\"79\":1}}],[\"initstate\",{\"1\":{\"79\":1}}],[\"init方法\",{\"1\":{\"79\":1,\"80\":1}}],[\"init\",{\"1\":{\"53\":2,\"54\":1,\"79\":1}}],[\"init创建或者git\",{\"1\":{\"50\":1}}],[\"initializeropt\",{\"1\":{\"228\":1}}],[\"initializer\",{\"1\":{\"218\":1,\"228\":1}}],[\"initializeenvironment\",{\"1\":{\"27\":1}}],[\"initialized或\",{\"1\":{\"23\":1}}],[\"innertext\",{\"1\":{\"189\":1,\"190\":1,\"191\":1}}],[\"innerhtml\",{\"1\":{\"139\":1}}],[\"inner\",{\"1\":{\"12\":2}}],[\"in\",{\"1\":{\"8\":1,\"30\":2,\"37\":3,\"38\":1,\"218\":3,\"219\":3}}],[\"5\",{\"1\":{\"12\":1,\"20\":1,\"32\":1,\"229\":1}}],[\"404\",{\"1\":{\"249\":1}}],[\"4~7和八进制数的组合\",{\"1\":{\"245\":1}}],[\"4k\",{\"1\":{\"168\":2}}],[\"4\",{\"1\":{\"12\":1,\"32\":1,\"229\":1}}],[\"③\",{\"1\":{\"12\":1}}],[\"fragment\",{\"1\":{\"191\":3}}],[\"framents\",{\"1\":{\"111\":1}}],[\"freeip\",{\"1\":{\"182\":1}}],[\"from\",{\"1\":{\"168\":2}}],[\"found\",{\"1\":{\"249\":1}}],[\"foo\",{\"1\":{\"182\":1}}],[\"font\",{\"1\":{\"168\":4,\"179\":2}}],[\"fontobject\",{\"1\":{\"168\":2}}],[\"formalparameters\",{\"1\":{\"231\":1}}],[\"foreach\",{\"1\":{\"150\":1}}],[\"for比v\",{\"1\":{\"67\":1}}],[\"for优先级比v\",{\"1\":{\"67\":1}}],[\"for的优先级\",{\"0\":{\"67\":1}}],[\"forstatement\",{\"1\":{\"31\":1}}],[\"forloopevaluation语义应用的其中一个代换式\",{\"1\":{\"31\":1}}],[\"forloopevaluation\",{\"1\":{\"30\":1}}],[\"for和for\",{\"1\":{\"30\":1}}],[\"for循环在标准中分为\",{\"1\":{\"30\":1}}],[\"for声明实例化\",{\"1\":{\"27\":1}}],[\"fordeclarationbindinginstantiation\",{\"1\":{\"27\":1}}],[\"for\",{\"1\":{\"20\":1,\"30\":4,\"31\":2,\"189\":1,\"190\":1,\"191\":1}}],[\"f函数全名为resolvefilter\",{\"1\":{\"96\":1}}],[\"firefox对dns记录默认的缓存时间为1分钟\",{\"1\":{\"159\":1}}],[\"filters中找出注册的过滤器并返回\",{\"1\":{\"96\":1}}],[\"filters\",{\"1\":{\"75\":1}}],[\"files\",{\"1\":{\"168\":2}}],[\"filename\",{\"1\":{\"168\":2,\"180\":1,\"182\":1}}],[\"file2\",{\"1\":{\"54\":1}}],[\"file1\",{\"1\":{\"54\":1}}],[\"fix\",{\"1\":{\"54\":1}}],[\"feat\",{\"1\":{\"54\":1}}],[\"false\",{\"1\":{\"38\":1,\"168\":2,\"182\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"f\",{\"1\":{\"32\":1,\"50\":1,\"244\":1}}],[\"fn\",{\"1\":{\"12\":4,\"32\":9,\"133\":2,\"136\":2}}],[\"functiondeclarationinstantiation\",{\"1\":{\"27\":1}}],[\"functionobject\",{\"1\":{\"23\":1}}],[\"functionstoinitialize\",{\"1\":{\"16\":1}}],[\"function\",{\"1\":{\"4\":1,\"12\":2,\"32\":4,\"133\":2,\"136\":2,\"139\":2,\"147\":1,\"189\":1,\"190\":2,\"191\":2,\"247\":1}}],[\"3\",{\"1\":{\"12\":1,\"32\":2,\"38\":1,\"229\":1}}],[\"20\",{\"1\":{\"189\":1,\"190\":1,\"191\":1}}],[\"2015\",{\"1\":{\"153\":1}}],[\"28\",{\"1\":{\"153\":1}}],[\"21\",{\"1\":{\"153\":1}}],[\"24b9da6552252987aa493b52f8696cd6d3b00373\",{\"1\":{\"50\":1}}],[\"2\",{\"1\":{\"12\":1,\"32\":2,\"146\":1,\"168\":2,\"179\":1,\"229\":1}}],[\"1~7和八进制数的组合\",{\"1\":{\"245\":1}}],[\"11\",{\"1\":{\"242\":1}}],[\"16\",{\"1\":{\"168\":2,\"242\":1}}],[\"18\",{\"1\":{\"168\":2}}],[\"10240\",{\"1\":{\"168\":2}}],[\"100000\",{\"1\":{\"189\":1,\"190\":1,\"191\":1}}],[\"1000\",{\"1\":{\"20\":1}}],[\"1已被广泛使用\",{\"1\":{\"153\":1}}],[\"1\",{\"1\":{\"12\":1,\"20\":1,\"32\":1,\"38\":1,\"50\":1,\"66\":1,\"82\":3,\"153\":2,\"168\":8,\"212\":1,\"242\":2}}],[\"==\",{\"1\":{\"133\":1,\"168\":1}}],[\"=oldenv\",{\"1\":{\"28\":1}}],[\"=>\",{\"1\":{\"20\":1,\"133\":1,\"136\":1,\"146\":10,\"147\":2,\"150\":2,\"168\":1,\"189\":1}}],[\"=\",{\"1\":{\"12\":7,\"20\":1,\"32\":6,\"133\":2,\"136\":4,\"139\":7,\"146\":5,\"150\":3,\"168\":2,\"180\":3,\"182\":4,\"189\":9,\"190\":9,\"191\":10,\"232\":2}}],[\"程序执行过程\",{\"0\":{\"12\":1}}],[\"程序初始化操作\",{\"1\":{\"3\":1}}],[\"程序初始化\",{\"1\":{\"3\":1}}],[\"crossorigin=\",{\"1\":{\"179\":1}}],[\"created\",{\"1\":{\"204\":1}}],[\"createdocumentfragment\",{\"1\":{\"191\":1}}],[\"createelement\",{\"1\":{\"139\":1,\"189\":1,\"190\":1,\"191\":1}}],[\"createrenderer\",{\"1\":{\"111\":1}}],[\"c\",{\"1\":{\"168\":2}}],[\"css和js文件\",{\"1\":{\"179\":1}}],[\"css和js等文件\",{\"1\":{\"158\":1}}],[\"css\",{\"1\":{\"168\":2,\"179\":2}}],[\"css$|\",{\"1\":{\"168\":1}}],[\"cdn\",{\"1\":{\"154\":1}}],[\"curindex\",{\"1\":{\"189\":3,\"190\":3,\"191\":3}}],[\"curtotal\",{\"1\":{\"189\":4,\"190\":4,\"191\":4}}],[\"currentcomponent\",{\"1\":{\"146\":2}}],[\"curr\",{\"1\":{\"117\":1}}],[\"custom\",{\"1\":{\"84\":1}}],[\"canvas\",{\"2\":{\"197\":1}}],[\"canvas优化性能\",{\"1\":{\"187\":1}}],[\"cannot\",{\"1\":{\"168\":1}}],[\"cache\",{\"1\":{\"152\":1,\"154\":2}}],[\"catch\",{\"1\":{\"147\":1}}],[\"camel\",{\"1\":{\"76\":1}}],[\"capture\",{\"1\":{\"76\":1}}],[\"callback\",{\"1\":{\"147\":1}}],[\"callbacks是异步操作队列\",{\"1\":{\"78\":1}}],[\"call\",{\"1\":{\"32\":1}}],[\"c与f\",{\"1\":{\"71\":1}}],[\"chainwebpack\",{\"1\":{\"168\":1}}],[\"change事件之后进行同步\",{\"1\":{\"76\":1}}],[\"chrome对dns记录默认的缓存时间为1分钟\",{\"1\":{\"159\":1}}],[\"chunks\",{\"1\":{\"180\":1}}],[\"chunk\",{\"1\":{\"147\":2}}],[\"chunkname\",{\"1\":{\"147\":1}}],[\"chunkname3\",{\"1\":{\"146\":2}}],[\"chunkname1\",{\"1\":{\"146\":2}}],[\"check\",{\"1\":{\"182\":2}}],[\"checksession检验微信登陆状态是否过期\",{\"1\":{\"119\":1}}],[\"checkout\",{\"1\":{\"51\":1,\"55\":4}}],[\"children\",{\"1\":{\"101\":1}}],[\"chore\",{\"1\":{\"54\":1}}],[\"cvs是版本控制系统\",{\"1\":{\"45\":1}}],[\"cvs\",{\"1\":{\"43\":1}}],[\"cli项目\",{\"1\":{\"168\":1}}],[\"cleartimeout\",{\"1\":{\"133\":1}}],[\"clearimmediate\",{\"1\":{\"10\":1}}],[\"clone\",{\"1\":{\"51\":1}}],[\"clone一个项目到本地\",{\"1\":{\"50\":1}}],[\"clone一个项目的时候\",{\"1\":{\"50\":1}}],[\"class\",{\"1\":{\"12\":2,\"22\":1,\"32\":2}}],[\"color\",{\"1\":{\"139\":1}}],[\"cors\",{\"1\":{\"88\":1}}],[\"completion\",{\"1\":{\"203\":1,\"205\":3,\"207\":2,\"208\":1}}],[\"completionrecord\",{\"1\":{\"203\":1}}],[\"company\",{\"1\":{\"182\":1}}],[\"comp\",{\"1\":{\"168\":2}}],[\"compressionplugin\",{\"1\":{\"168\":2}}],[\"compression\",{\"1\":{\"168\":6}}],[\"components\",{\"1\":{\"146\":5}}],[\"component>\",{\"1\":{\"146\":1}}],[\"componentupdated可使用\",{\"1\":{\"90\":2}}],[\"componentupdated\",{\"1\":{\"90\":1}}],[\"component\",{\"1\":{\"75\":1}}],[\"computed\",{\"1\":{\"75\":1}}],[\"commit\",{\"1\":{\"51\":1,\"54\":3}}],[\"committed\",{\"1\":{\"50\":1}}],[\"concatenation\",{\"1\":{\"213\":1}}],[\"container\",{\"1\":{\"190\":2,\"191\":2}}],[\"container1\",{\"1\":{\"189\":2}}],[\"contact\",{\"1\":{\"181\":1}}],[\"control的优先级高于expires\",{\"1\":{\"152\":1}}],[\"control\",{\"0\":{\"251\":1},\"1\":{\"40\":1,\"152\":1,\"154\":1}}],[\"connection\",{\"1\":{\"146\":1}}],[\"configurewebpack\",{\"1\":{\"168\":1}}],[\"config\",{\"1\":{\"52\":2,\"88\":1,\"168\":4}}],[\"config的工具来帮助设置控制git外观和行为的配置变量\",{\"1\":{\"52\":1}}],[\"console\",{\"1\":{\"20\":1,\"32\":2}}],[\"const时\",{\"1\":{\"31\":1}}],[\"const做相应的可变\",{\"1\":{\"29\":1}}],[\"construct\",{\"1\":{\"23\":2}}],[\"const声明语句\",{\"1\":{\"16\":1}}],[\"const\",{\"1\":{\"12\":2,\"32\":2,\"146\":5,\"150\":2,\"168\":1,\"180\":2,\"182\":3}}],[\"code一起发送到微信服务器\",{\"1\":{\"118\":1}}],[\"code\",{\"1\":{\"4\":1}}],[\"opt\",{\"1\":{\"228\":1}}],[\"options\",{\"1\":{\"182\":1}}],[\"options是用户传递的配置项\",{\"1\":{\"79\":1}}],[\"operationname\",{\"1\":{\"206\":2,\"207\":2}}],[\"operations\",{\"1\":{\"202\":2}}],[\"output\",{\"1\":{\"182\":1}}],[\"outerenv\",{\"1\":{\"20\":1,\"28\":1}}],[\"oct\",{\"1\":{\"153\":1}}],[\"observe\",{\"1\":{\"150\":1}}],[\"observer\",{\"1\":{\"150\":4}}],[\"objectrecord\",{\"1\":{\"16\":2,\"26\":2}}],[\"object\",{\"1\":{\"8\":1,\"66\":1,\"121\":6,\"204\":1}}],[\"objects\",{\"1\":{\"8\":1}}],[\"oldvnode\",{\"1\":{\"90\":1}}],[\"oldvnode和vnode\",{\"1\":{\"82\":1}}],[\"oldvalue\",{\"1\":{\"90\":1}}],[\"orphan\",{\"1\":{\"55\":1}}],[\"or\",{\"1\":{\"38\":1}}],[\"of123456789\",{\"1\":{\"229\":1}}],[\"of1\",{\"1\":{\"229\":1}}],[\"of\",{\"1\":{\"30\":4,\"38\":1,\"168\":1,\"213\":3,\"229\":1}}],[\"on\",{\"1\":{\"168\":4}}],[\"onclick\",{\"1\":{\"139\":2}}],[\"once\",{\"1\":{\"76\":1,\"189\":3,\"190\":3,\"191\":3}}],[\"onhdie\",{\"1\":{\"117\":1}}],[\"onhdie=>\",{\"1\":{\"117\":1}}],[\"onshow\",{\"1\":{\"117\":2}}],[\"onshow=>\",{\"1\":{\"117\":3}}],[\"onready\",{\"1\":{\"117\":2}}],[\"onlaunch重新开始执行\",{\"1\":{\"117\":1}}],[\"onlaunch=>\",{\"1\":{\"117\":2}}],[\"onload=>\",{\"1\":{\"117\":2}}],[\"on监听事件\",{\"1\":{\"60\":1}}],[\"one\",{\"1\":{\"38\":1,\"229\":3}}],[\"onblur等等\",{\"1\":{\"10\":1}}],[\"ondrag\",{\"1\":{\"10\":1}}],[\"while\",{\"1\":{\"227\":1}}],[\"whilestatement\",{\"1\":{\"227\":1}}],[\"while语句的产生式\",{\"1\":{\"227\":1,\"228\":1}}],[\"woff2\",{\"1\":{\"179\":2}}],[\"woff\",{\"1\":{\"168\":2}}],[\"woff$\",{\"1\":{\"168\":1}}],[\"wed\",{\"1\":{\"153\":1}}],[\"webp提供有损压缩和无损压缩两种方案\",{\"1\":{\"169\":1}}],[\"webp比png\",{\"1\":{\"169\":1}}],[\"webpack方案\",{\"0\":{\"182\":1}}],[\"webpack\",{\"1\":{\"168\":2,\"180\":2}}],[\"webpack等构建工具提供了代码分割的支持\",{\"1\":{\"147\":1}}],[\"web服务端的node\",{\"1\":{\"7\":1}}],[\"web客户端的浏览器\",{\"1\":{\"7\":1}}],[\"wait\",{\"1\":{\"133\":2}}],[\"watch\",{\"1\":{\"79\":1}}],[\"wx\",{\"1\":{\"118\":2,\"121\":5}}],[\"window\",{\"1\":{\"10\":2,\"190\":1,\"191\":1}}],[\"n\",{\"1\":{\"244\":1}}],[\"npm\",{\"1\":{\"168\":2}}],[\"nginx\",{\"1\":{\"88\":1,\"168\":2}}],[\"next\",{\"1\":{\"117\":3}}],[\"next方法中可以拿到组件实例\",{\"1\":{\"107\":1}}],[\"nexttick\",{\"0\":{\"77\":1},\"1\":{\"78\":1}}],[\"newly\",{\"1\":{\"204\":1}}],[\"new\",{\"1\":{\"80\":1,\"139\":3,\"150\":1,\"168\":1,\"180\":2,\"182\":2}}],[\"newproperty1\",{\"1\":{\"66\":1}}],[\"newtarget\",{\"1\":{\"23\":2}}],[\"navigator\",{\"1\":{\"146\":1}}],[\"navigateback\",{\"1\":{\"121\":2}}],[\"navigateto\",{\"1\":{\"121\":1}}],[\"navigationback\",{\"1\":{\"117\":1}}],[\"native\",{\"1\":{\"76\":1}}],[\"name\",{\"1\":{\"52\":2,\"53\":1,\"90\":1,\"168\":2}}],[\"nan\",{\"1\":{\"38\":1}}],[\"number\",{\"1\":{\"76\":1}}],[\"number等\",{\"1\":{\"8\":1}}],[\"null\",{\"1\":{\"38\":1,\"133\":1,\"136\":2}}],[\"nonzerodigit\",{\"1\":{\"229\":3}}],[\"none\",{\"1\":{\"69\":1,\"155\":1,\"156\":1,\"157\":2}}],[\"no\",{\"1\":{\"154\":2,\"233\":2}}],[\"notreservedword\",{\"1\":{\"230\":1}}],[\"not\",{\"1\":{\"156\":1,\"157\":1,\"230\":1,\"249\":1}}],[\"notify通知所有的订阅者watcher\",{\"1\":{\"82\":1}}],[\"note\",{\"1\":{\"38\":1}}],[\"normalcompletion或throwcompletion的结果时\",{\"1\":{\"208\":1}}],[\"normal\",{\"1\":{\"32\":1,\"207\":1}}],[\"node环境\",{\"1\":{\"181\":1}}],[\"node\",{\"1\":{\"9\":1,\"10\":1,\"112\":1,\"168\":1,\"182\":1}}],[\"be\",{\"1\":{\"207\":2,\"213\":2}}],[\"bar\",{\"1\":{\"182\":1}}],[\"babel\",{\"1\":{\"182\":2}}],[\"base\",{\"1\":{\"168\":1}}],[\"blue\",{\"1\":{\"139\":1}}],[\"blockenv\",{\"1\":{\"28\":1}}],[\"blockdeclarationinstantiation\",{\"1\":{\"27\":1}}],[\"block\",{\"1\":{\"12\":3}}],[\"btn\",{\"1\":{\"139\":4}}],[\"bind表达式\",{\"1\":{\"93\":1}}],[\"bindingidentifierbindingidentifier\",{\"1\":{\"228\":1}}],[\"bindingidentifier\",{\"1\":{\"218\":1,\"228\":1}}],[\"binding\",{\"1\":{\"90\":1}}],[\"bindingobject\",{\"1\":{\"25\":1}}],[\"bind\",{\"1\":{\"90\":1}}],[\"bind修饰符\",{\"1\":{\"76\":1}}],[\"branch\",{\"1\":{\"55\":7}}],[\"b\",{\"1\":{\"32\":2,\"38\":1,\"40\":1,\"55\":1,\"244\":1}}],[\"body\",{\"1\":{\"180\":1}}],[\"body>\",{\"1\":{\"139\":1}}],[\"boolean\",{\"1\":{\"25\":1,\"38\":1}}],[\"bom\",{\"1\":{\"9\":1}}],[\"but\",{\"1\":{\"230\":1}}],[\"button>\",{\"1\":{\"139\":1}}],[\"buymeal\",{\"1\":{\"182\":1}}],[\"bundle\",{\"1\":{\"182\":1}}],[\"buffers\",{\"1\":{\"168\":2}}],[\"buffer\",{\"1\":{\"10\":1}}],[\"built\",{\"1\":{\"8\":1}}],[\"会加载各种各样的资源\",{\"1\":{\"158\":1}}],[\"会协商服务器资源是否修改\",{\"1\":{\"155\":1}}],[\"会有一定的延时\",{\"1\":{\"125\":1}}],[\"会关闭其他的非tabar的页面\",{\"1\":{\"121\":1}}],[\"会触发onready方法\",{\"1\":{\"117\":1}}],[\"会触发组件的生命周期\",{\"1\":{\"69\":1}}],[\"会被销毁\",{\"1\":{\"117\":1}}],[\"会被直接innerhtml\",{\"1\":{\"112\":1}}],[\"会被直接remove或者destoryed\",{\"1\":{\"71\":1}}],[\"会用createstaticvnode方法在客户端去生成一个static\",{\"1\":{\"112\":1}}],[\"会做静态提升\",{\"1\":{\"112\":1}}],[\"会合并为一个数组\",{\"1\":{\"74\":1}}],[\"会将指令系统转为可执行的render函数\",{\"1\":{\"67\":1}}],[\"会保留之前分支的所有文件\",{\"1\":{\"55\":1}}],[\"会提交哪些内容\",{\"1\":{\"54\":1}}],[\"会提供两类重要的宿主对象\",{\"1\":{\"9\":1}}],[\"会add哪些内容\",{\"1\":{\"54\":1}}],[\"会ordinaryfunctioncreate创建函数对象\",{\"1\":{\"32\":1}}],[\"会在函数环境记录器上再创建一个声明式环境记录器\",{\"1\":{\"32\":1}}],[\"会收集自身区域的标识符并绑定到相应的环境记录器\",{\"1\":{\"27\":1}}],[\"会忽略所有的函数声明\",{\"1\":{\"16\":1}}],[\"会创建迭代器的内置对象方法\",{\"1\":{\"3\":1}}],[\"浏览器什么都不会做\",{\"1\":{\"159\":1}}],[\"浏览器会将他们保存在本地的文件中\",{\"1\":{\"158\":1}}],[\"浏览器会依次执行10次更新操作\",{\"1\":{\"102\":1}}],[\"浏览器窗口大小改变后\",{\"1\":{\"134\":1}}],[\"浏览器宿主的全局对象window\",{\"1\":{\"10\":1}}],[\"浏览器\",{\"1\":{\"9\":1}}],[\"宿主可以提供任何ecmascript对象值\",{\"1\":{\"26\":1}}],[\"宿主对象\",{\"1\":{\"8\":1}}],[\"宿主环境会被wxml转为对应的js对象\",{\"1\":{\"125\":1}}],[\"宿主环境\",{\"0\":{\"7\":1},\"1\":{\"8\":1}}],[\"宿主环境保留字段\",{\"1\":{\"5\":1}}],[\"宿主环境中有多个agent\",{\"1\":{\"1\":1}}],[\"俗称\",{\"1\":{\"8\":1}}],[\"则表示该生成式是受限生成式\",{\"1\":{\"233\":1}}],[\"则上次间隔的函数执行完成\",{\"1\":{\"136\":1}}],[\"则会指向fn定义环境\",{\"1\":{\"133\":1}}],[\"则不允许使用该生成式\",{\"1\":{\"233\":1}}],[\"则不加载某些资源\",{\"1\":{\"146\":1}}],[\"则不应使用setdata来设置这些数据\",{\"1\":{\"129\":1}}],[\"则不用像集中版本管理那样因为断网情况而无法工作\",{\"1\":{\"46\":1}}],[\"则发生了跨域\",{\"1\":{\"87\":1}}],[\"则发出警告\",{\"1\":{\"63\":1}}],[\"则执行updatechildren函数比较子节点\",{\"1\":{\"83\":1}}],[\"则将vnode的子节点真实化后添加到el\",{\"1\":{\"83\":1}}],[\"则删除el子节点\",{\"1\":{\"83\":1}}],[\"则没有节点可以复用\",{\"1\":{\"82\":1}}],[\"则处理比较更新子节点\",{\"1\":{\"82\":1}}],[\"则解析模板文件\",{\"1\":{\"79\":1}}],[\"则初始化为这个值\",{\"1\":{\"32\":2}}],[\"则\",{\"1\":{\"23\":1}}],[\"则这是一个箭头函数\",{\"1\":{\"23\":1}}],[\"则提供一个\",{\"1\":{\"23\":1}}],[\"则抛出\",{\"1\":{\"16\":1}}],[\"则在全局对象上新增了进程属性globalthis\",{\"1\":{\"10\":1}}],[\"则可以依据自身的业务需求\",{\"1\":{\"8\":1}}],[\"则值为null\",{\"1\":{\"4\":1}}],[\"如\",{\"1\":{\"204\":1}}],[\"如字体\",{\"1\":{\"179\":1}}],[\"如运行中线程和基础库的初始化\",{\"1\":{\"127\":1}}],[\"如定时器或播放音乐|\",{\"1\":{\"116\":1}}],[\"如网络通讯状态\",{\"1\":{\"115\":1}}],[\"如何获取合适的高度\",{\"1\":{\"193\":1}}],[\"如何比对出的结果用来更新真实dom\",{\"1\":{\"72\":1}}],[\"如何阅读ecma标准\",{\"0\":{\"35\":1}}],[\"如git\",{\"1\":{\"50\":1}}],[\"如下\",{\"1\":{\"50\":1}}],[\"如下所示\",{\"1\":{\"36\":1}}],[\"如系统设置\",{\"1\":{\"42\":1}}],[\"如以下中的underfined\",{\"1\":{\"38\":1}}],[\"如果在指示位置的输入流中出现\",{\"1\":{\"233\":1}}],[\"如果在句法的生成式的部分右侧出现短语\",{\"1\":{\"233\":1}}],[\"如果产生式的右侧出现\",{\"1\":{\"231\":1}}],[\"如果存在return则存在\",{\"1\":{\"221\":1}}],[\"如果存在子节点\",{\"1\":{\"82\":1}}],[\"如果目标符有该参数\",{\"1\":{\"220\":1}}],[\"如果完成记录\",{\"1\":{\"205\":1}}],[\"如果调研服务器端渲染\",{\"1\":{\"181\":1}}],[\"如果dns查询很多\",{\"1\":{\"159\":1}}],[\"如果用户开启了数据节省模式\",{\"1\":{\"146\":1}}],[\"如果用户一直在输入中\",{\"1\":{\"137\":1}}],[\"如果子元素之间\",{\"1\":{\"138\":2}}],[\"如果定时器为空\",{\"1\":{\"136\":1}}],[\"如果函数内部操作了dom\",{\"1\":{\"132\":1}}],[\"如果函数调用的时候有赋值\",{\"1\":{\"32\":2}}],[\"如果事件连续触发\",{\"1\":{\"132\":1}}],[\"如果有就直接用\",{\"1\":{\"152\":1}}],[\"如果有\",{\"1\":{\"126\":1}}],[\"如果有transition就执行\",{\"1\":{\"70\":1}}],[\"如果渲染层工作较快完成\",{\"1\":{\"125\":1}}],[\"如果过期\",{\"1\":{\"119\":1}}],[\"如果路由很多\",{\"1\":{\"104\":1}}],[\"如果两者都有子节点\",{\"1\":{\"83\":1}}],[\"如果oldvnode没有子节点而vnode有\",{\"1\":{\"83\":1}}],[\"如果oldvnode有子节点而vnode没有\",{\"1\":{\"83\":1}}],[\"如果都有文本节点且不相等\",{\"1\":{\"83\":1}}],[\"如果不满足以上四种情况\",{\"1\":{\"82\":1}}],[\"如果不使用key\",{\"1\":{\"71\":1}}],[\"如果是一个子元素\",{\"1\":{\"138\":1}}],[\"如果是\",{\"1\":{\"82\":1}}],[\"如果是为组件只能是一个函数\",{\"1\":{\"61\":1}}],[\"如果没有查到记录\",{\"1\":{\"118\":1}}],[\"如果没有提供render函数\",{\"1\":{\"79\":1}}],[\"如果没有设置key则为undefined\",{\"1\":{\"72\":1}}],[\"如果无法解析\",{\"1\":{\"76\":1}}],[\"如果相同选项为生命周期钩子\",{\"1\":{\"74\":1}}],[\"如果使用key\",{\"1\":{\"71\":2}}],[\"如果条件出现在循环内部\",{\"1\":{\"68\":1}}],[\"如果类型不是函数\",{\"1\":{\"63\":1}}],[\"如果采用对象的data\",{\"1\":{\"62\":1}}],[\"如果test\",{\"1\":{\"31\":1}}],[\"如果层层嵌套\",{\"1\":{\"27\":1}}],[\"如果此环境记录是由\",{\"1\":{\"23\":1}}],[\"如果值是lexical\",{\"1\":{\"23\":1}}],[\"如果词法声明和变量声明的连接有重复项\",{\"1\":{\"16\":1}}],[\"如果正在求值脚本\",{\"1\":{\"4\":1}}],[\"如果正在求值函数对象的代码\",{\"1\":{\"4\":1}}],[\"如window\",{\"1\":{\"10\":2}}],[\"如array\",{\"1\":{\"8\":1}}],[\"在代码块内使用严格模式\",{\"0\":{\"247\":1}}],[\"在\",{\"1\":{\"246\":1}}],[\"在ecma中使用黑色粗体表示\",{\"1\":{\"226\":1}}],[\"在比较相等性时\",{\"1\":{\"216\":1}}],[\"在标准上查看\",{\"1\":{\"216\":1}}],[\"在标准中\",{\"1\":{\"215\":1}}],[\"在标准中文法定义了语句的结构\",{\"1\":{\"212\":1}}],[\"在标准中声明的返回完成记录的抽象操作和所有内置函数中\",{\"1\":{\"208\":1}}],[\"在标准中可以找到六种声明实例化操作\",{\"1\":{\"27\":1}}],[\"在以下情况不适用\",{\"1\":{\"208\":1}}],[\"在抽象操作和语法导向操作调用时\",{\"1\":{\"206\":1}}],[\"在被调用时\",{\"1\":{\"203\":1}}],[\"在运行时调用的算法\",{\"1\":{\"202\":1}}],[\"在js中\",{\"1\":{\"189\":1}}],[\"在js对象中\",{\"1\":{\"101\":1}}],[\"在构建时简单的生成针对特定路由的静态html文件\",{\"1\":{\"181\":1}}],[\"在webpack中配置资源预加载\",{\"1\":{\"180\":1}}],[\"在webpack中通过require\",{\"1\":{\"147\":1}}],[\"在dns查询过程中\",{\"1\":{\"159\":1}}],[\"在diff比较的过程中\",{\"1\":{\"81\":1}}],[\"在框架中\",{\"1\":{\"146\":1}}],[\"在工程化环境中还有以下方式\",{\"1\":{\"146\":1}}],[\"在一些列出所有替代方案不切实际的情况下\",{\"1\":{\"234\":1}}],[\"在一定时间间隔内\",{\"1\":{\"135\":1}}],[\"在一段时间内再次打开\",{\"1\":{\"126\":1}}],[\"在连续触发时\",{\"1\":{\"132\":2,\"135\":2}}],[\"在n秒内函数只能执行一次\",{\"1\":{\"132\":1}}],[\"在每个小程序页面的生命周期中\",{\"1\":{\"125\":1}}],[\"在任何逻辑层和视图层之间的数据传递都是线程间的通信\",{\"1\":{\"125\":1}}],[\"在任何时候\",{\"1\":{\"4\":1}}],[\"在逻辑层发生数据变更的时候\",{\"1\":{\"125\":1}}],[\"在逻辑位置写模板代码\",{\"1\":{\"111\":1}}],[\"在这个环境下执行的都是有关小程序业务逻辑的代码\",{\"1\":{\"124\":1}}],[\"在小程序中调用微信的api完成支付功能\",{\"1\":{\"123\":1}}],[\"在小程序中\",{\"1\":{\"118\":1,\"124\":1}}],[\"在http\",{\"1\":{\"153\":1}}],[\"在html中slot元素\",{\"1\":{\"97\":1}}],[\"在history模式下的问题\",{\"1\":{\"109\":1}}],[\"在keep\",{\"1\":{\"106\":1}}],[\"在全局路由守卫中调用addroutes添加路由\",{\"1\":{\"104\":1}}],[\"在路由上标记相应的权限信息\",{\"1\":{\"104\":1}}],[\"在选项filters中定义\",{\"1\":{\"94\":1}}],[\"在vue中提供了一套数据驱动视图更为方便的操作\",{\"1\":{\"89\":1}}],[\"在进行patchvnode\",{\"1\":{\"82\":1}}],[\"在修改数据之后立即使用这个方法\",{\"1\":{\"77\":1}}],[\"在下次dom更新循环结束之后执行延迟回调\",{\"1\":{\"77\":1}}],[\"在递归合并的时候组件的选项会覆盖mixin的选项\",{\"1\":{\"74\":1}}],[\"在某个地方写错了迫使vue实例重新渲染\",{\"1\":{\"66\":1}}],[\"在实例中可以定义为对象或函数\",{\"1\":{\"61\":1}}],[\"在我们安装完git之后\",{\"1\":{\"52\":1}}],[\"在相关领域代码的全局代码中\",{\"1\":{\"26\":1}}],[\"在程序运行前\",{\"1\":{\"8\":1}}],[\"join\",{\"1\":{\"182\":2}}],[\"jpeg\",{\"1\":{\"168\":2}}],[\"jpg\",{\"1\":{\"149\":1,\"169\":2,\"179\":1}}],[\"javascript\",{\"1\":{\"168\":6}}],[\"javascript必须依赖一个宿主环境才能实现完整的功能\",{\"1\":{\"1\":1}}],[\"jwt验证\",{\"1\":{\"104\":1}}],[\"js运算并不是性能的瓶颈\",{\"1\":{\"187\":1}}],[\"jsx\",{\"1\":{\"182\":2}}],[\"js$|\",{\"1\":{\"168\":1}}],[\"js中配置插件\",{\"1\":{\"168\":2}}],[\"jscore线程运行js脚本\",{\"1\":{\"124\":1}}],[\"js是单线程的\",{\"1\":{\"124\":1}}],[\"js文件配置\",{\"1\":{\"88\":1}}],[\"jsonp\",{\"1\":{\"88\":1}}],[\"js框架\",{\"2\":{\"58\":1,\"114\":1,\"130\":1}}],[\"js宿主\",{\"1\":{\"10\":1}}],[\"js则会提供与服务端操作相关的对象\",{\"1\":{\"9\":1}}],[\"js\",{\"1\":{\"7\":1,\"146\":1,\"179\":2,\"182\":3}}],[\"last\",{\"1\":{\"156\":1}}],[\"lazy修饰符\",{\"1\":{\"76\":1}}],[\"lazy\",{\"1\":{\"76\":1,\"149\":1}}],[\"lineterminator\",{\"1\":{\"233\":3}}],[\"li\",{\"1\":{\"139\":4,\"189\":4,\"190\":4,\"191\":4}}],[\"li>\",{\"1\":{\"139\":6}}],[\"listen\",{\"1\":{\"168\":2}}],[\"list\",{\"1\":{\"139\":5,\"213\":1}}],[\"l是vue的列表渲染函数\",{\"1\":{\"67\":1}}],[\"lookahead\",{\"1\":{\"232\":5}}],[\"loop\",{\"1\":{\"189\":3,\"190\":3,\"191\":3}}],[\"loopcontinues为false\",{\"1\":{\"31\":1}}],[\"location\",{\"1\":{\"168\":4,\"179\":1}}],[\"localhost\",{\"1\":{\"168\":4}}],[\"loader\",{\"1\":{\"182\":2}}],[\"loadedmodules\",{\"1\":{\"5\":1}}],[\"loading=\",{\"1\":{\"149\":1,\"184\":1}}],[\"loading\",{\"1\":{\"146\":2,\"184\":1}}],[\"login\",{\"1\":{\"118\":2,\"182\":1}}],[\"log\",{\"1\":{\"20\":1,\"32\":2}}],[\"level\",{\"1\":{\"168\":2}}],[\"length\",{\"1\":{\"168\":2}}],[\"left\",{\"1\":{\"76\":1}}],[\"lexicaldeclarationexpressionopt\",{\"1\":{\"31\":1}}],[\"lexical\",{\"1\":{\"23\":1}}],[\"lexicalenvironment\",{\"1\":{\"4\":1}}],[\"lexdeclarations\",{\"1\":{\"16\":2}}],[\"let\",{\"1\":{\"12\":6,\"22\":1,\"29\":1,\"31\":1,\"32\":4,\"133\":1,\"136\":2,\"189\":8,\"190\":8,\"191\":9,\"207\":2,\"213\":2}}],[\"列表项高不一定是固定的\",{\"1\":{\"193\":1}}],[\"列表项高度\",{\"1\":{\"193\":1}}],[\"列表数据\",{\"1\":{\"140\":1}}],[\"列表页的某些数据=>详情页\",{\"1\":{\"129\":1}}],[\"列表页应该缓存\",{\"1\":{\"106\":1}}],[\"列表页\",{\"1\":{\"106\":2}}],[\"列表\",{\"1\":{\"5\":2}}],[\"范围的全局环境\",{\"1\":{\"5\":1}}],[\"全局只触发一次|\",{\"1\":{\"116\":1}}],[\"全局守卫里\",{\"1\":{\"104\":1}}],[\"全局路由守卫里\",{\"1\":{\"104\":3}}],[\"全局混入来添加一些组件选项\",{\"1\":{\"84\":1}}],[\"全局混入\",{\"1\":{\"73\":1}}],[\"全局声明实例化\",{\"1\":{\"27\":1}}],[\"全局声明实例化以后的调用栈\",{\"1\":{\"15\":1,\"16\":1}}],[\"全局作用域中this返回的值\",{\"1\":{\"26\":1}}],[\"全局环境记录用于表示所有在同一个realm中处理的ecmascript\",{\"1\":{\"26\":1}}],[\"全局环境记录器\",{\"1\":{\"5\":1,\"13\":1,\"21\":1}}],[\"全局代码中的函数声明\",{\"1\":{\"26\":1}}],[\"全局代码\",{\"1\":{\"12\":1,\"32\":1}}],[\"全局对象\",{\"1\":{\"5\":1,\"26\":1}}],[\"拥有此realm的agent代理\",{\"1\":{\"5\":1}}],[\"含义\",{\"1\":{\"5\":1,\"132\":1,\"135\":1,\"138\":1}}],[\"值时\",{\"1\":{\"242\":1}}],[\"值或特征相同意味着相等\",{\"1\":{\"216\":1}}],[\"值\",{\"1\":{\"5\":1,\"23\":1,\"25\":1,\"26\":1,\"242\":1}}],[\"值为该函数对象\",{\"1\":{\"4\":1}}],[\"以上表示\",{\"1\":{\"230\":1,\"231\":1}}],[\"以下的是一般运行时语义\",{\"1\":{\"202\":1}}],[\"以下情况不需要创建\",{\"1\":{\"32\":1}}],[\"以下情况会创建执行上下文\",{\"1\":{\"3\":1}}],[\"以占位符形式展示页面结构的技术\",{\"1\":{\"183\":1}}],[\"以防\",{\"1\":{\"168\":1}}],[\"以便按需加载\",{\"1\":{\"147\":1}}],[\"以js对象作为基础的树\",{\"1\":{\"101\":1}}],[\"以此类推\",{\"1\":{\"40\":1}}],[\"以及本次会话密钥session\",{\"1\":{\"118\":1}}],[\"以及一些特别的定时器方法globalthis\",{\"1\":{\"10\":1}}],[\"以及许多事件监听方法\",{\"1\":{\"10\":1}}],[\"以及其他相关状态和资源组成\",{\"1\":{\"5\":1}}],[\"es规范类型\",{\"0\":{\"238\":1}}],[\"es语言类型\",{\"0\":{\"236\":1}}],[\"es语言值\",{\"1\":{\"23\":1}}],[\"early\",{\"1\":{\"213\":1}}],[\"eot$|\",{\"1\":{\"168\":1}}],[\"etag的值放入if\",{\"1\":{\"157\":1}}],[\"etag会得到更新\",{\"1\":{\"157\":1}}],[\"etag标头的值是服务器生成的任意值\",{\"1\":{\"157\":1}}],[\"error\",{\"1\":{\"213\":1}}],[\"err\",{\"1\":{\"147\":1}}],[\"e\",{\"1\":{\"139\":2}}],[\"else\",{\"1\":{\"146\":1,\"205\":1}}],[\"el\",{\"1\":{\"90\":1}}],[\"element\",{\"1\":{\"84\":1}}],[\"encoding\",{\"1\":{\"168\":2}}],[\"entry\",{\"1\":{\"150\":5,\"182\":1}}],[\"entries\",{\"1\":{\"150\":2}}],[\"ensure和import\",{\"1\":{\"147\":1}}],[\"ensure\",{\"1\":{\"146\":4,\"147\":1}}],[\"ensure技术\",{\"1\":{\"146\":1}}],[\"endindex移动到b\",{\"1\":{\"81\":1}}],[\"env\",{\"1\":{\"32\":1,\"168\":2}}],[\"environment\",{\"1\":{\"7\":1,\"20\":1,\"32\":1}}],[\"e与d\",{\"1\":{\"71\":1}}],[\"event\",{\"0\":{\"138\":1},\"1\":{\"76\":2}}],[\"eventbus\",{\"1\":{\"60\":1}}],[\"eval函数声明实例化\",{\"1\":{\"27\":1}}],[\"evaldeclarationinstantiation\",{\"1\":{\"27\":1}}],[\"evaluationscript\",{\"1\":{\"212\":1}}],[\"evaluation\",{\"1\":{\"4\":1}}],[\"emit触发事件\",{\"1\":{\"60\":1}}],[\"email\",{\"1\":{\"52\":2}}],[\"empty\",{\"1\":{\"38\":1,\"212\":1,\"231\":2}}],[\"exception\",{\"1\":{\"204\":1}}],[\"exclude\",{\"1\":{\"105\":1,\"182\":1}}],[\"extensions\",{\"1\":{\"182\":1}}],[\"extend\",{\"1\":{\"62\":1}}],[\"ext\",{\"1\":{\"168\":1}}],[\"expires\",{\"1\":{\"153\":2}}],[\"expires标头使用明确的时间\",{\"1\":{\"153\":1}}],[\"exports\",{\"1\":{\"168\":1,\"180\":1,\"182\":1}}],[\"export\",{\"1\":{\"146\":1,\"168\":1}}],[\"express\",{\"1\":{\"88\":1}}],[\"expression\",{\"1\":{\"32\":1,\"90\":1,\"227\":1,\"233\":1}}],[\"expressionopt\",{\"1\":{\"31\":1}}],[\"example\",{\"1\":{\"32\":2,\"149\":1}}],[\"ecma对普通脚本的定义\",{\"1\":{\"221\":1}}],[\"ecma语言值\",{\"1\":{\"216\":1}}],[\"ecma语言值以粗体显示\",{\"1\":{\"215\":1}}],[\"ecma规范类型值\",{\"1\":{\"216\":1}}],[\"ecma通过算法或描述性要求来表达的额外规则\",{\"1\":{\"213\":1}}],[\"ecma在抽象操作\",{\"1\":{\"38\":1}}],[\"ecma中的语言值以粗体表示\",{\"1\":{\"38\":1}}],[\"ecma中的携带文法参数产生式如下所示\",{\"1\":{\"37\":1}}],[\"ecma中的产生式\",{\"1\":{\"36\":1}}],[\"ecma是一个js标准\",{\"1\":{\"35\":1}}],[\"ecmascript\",{\"1\":{\"24\":1,\"242\":1}}],[\"ecmascript执行上下文的词法环境组件指向一个环境记录器\",{\"1\":{\"20\":1}}],[\"ecmascript有两种常见的宿主\",{\"1\":{\"7\":1}}],[\"ecmascript并不是一门能够独立运行的编程语言\",{\"1\":{\"7\":1}}],[\"ecmascript代码的执行上下文还有额外的三个组件\",{\"1\":{\"4\":1}}],[\"ecma标准\",{\"0\":{\"18\":1},\"2\":{\"6\":1,\"11\":1,\"17\":1,\"19\":1,\"34\":1,\"39\":1,\"199\":1,\"201\":1,\"209\":1,\"217\":1,\"222\":1,\"224\":1,\"235\":1,\"237\":1,\"239\":1,\"241\":1,\"248\":1}}],[\"solidus\",{\"1\":{\"242\":1}}],[\"sourcecharacter\",{\"1\":{\"234\":1}}],[\"someobject\",{\"1\":{\"66\":1}}],[\"someobject=object\",{\"1\":{\"66\":1}}],[\"syntax\",{\"1\":{\"202\":1}}],[\"syntaxerror\",{\"1\":{\"16\":1}}],[\"skeleton\",{\"1\":{\"184\":1}}],[\"ssg\",{\"2\":{\"174\":1}}],[\"ssg静态站点生成\",{\"0\":{\"172\":1}}],[\"ssr\",{\"1\":{\"181\":2},\"2\":{\"177\":1}}],[\"ssr服务端渲染\",{\"0\":{\"175\":1}}],[\"ssr优化\",{\"1\":{\"112\":1}}],[\"ssr速度提高2~3倍\",{\"1\":{\"110\":1}}],[\"since标头发送到服务器\",{\"1\":{\"156\":1}}],[\"since和etag\",{\"1\":{\"155\":1}}],[\"src\",{\"1\":{\"150\":2,\"182\":1}}],[\"src=\",{\"1\":{\"149\":1}}],[\"savedata\",{\"1\":{\"146\":1}}],[\"switchtab\",{\"1\":{\"121\":1}}],[\"spa\",{\"0\":{\"108\":1},\"1\":{\"108\":1,\"182\":2}}],[\"slot本质上是返回vnode的函数\",{\"1\":{\"100\":1}}],[\"slot\",{\"0\":{\"97\":1}}],[\"s函数的全称是tostring\",{\"1\":{\"96\":1}}],[\"show切换\",{\"1\":{\"121\":1}}],[\"show原理\",{\"1\":{\"70\":1}}],[\"show隐藏是为元素添加css属性display\",{\"1\":{\"69\":1}}],[\"show\",{\"0\":{\"69\":1}}],[\"sha\",{\"1\":{\"50\":1}}],[\"sciptbody\",{\"1\":{\"221\":1}}],[\"sciptbodyopt\",{\"1\":{\"221\":1}}],[\"scm\",{\"1\":{\"45\":1}}],[\"scroll\",{\"1\":{\"132\":1}}],[\"scrolly\",{\"1\":{\"10\":1}}],[\"script\",{\"1\":{\"179\":2,\"221\":1}}],[\"script>\",{\"1\":{\"139\":1,\"146\":1}}],[\"script共享的最外层作用域\",{\"1\":{\"26\":1}}],[\"scriptcontext\",{\"1\":{\"15\":1}}],[\"scriptormodule\",{\"1\":{\"4\":1}}],[\"screenx\",{\"1\":{\"10\":1}}],[\"seq\",{\"1\":{\"219\":1,\"232\":1}}],[\"semantics\",{\"0\":{\"202\":1},\"1\":{\"212\":1}}],[\"seo更彻底\",{\"1\":{\"181\":1}}],[\"seo\",{\"1\":{\"181\":1}}],[\"server\",{\"1\":{\"168\":4,\"179\":1}}],[\"segment\",{\"1\":{\"146\":2}}],[\"session\",{\"1\":{\"118\":1}}],[\"self\",{\"1\":{\"76\":1}}],[\"section\",{\"1\":{\"38\":1}}],[\"set方法会调用dep\",{\"1\":{\"82\":1}}],[\"set\",{\"1\":{\"66\":1,\"205\":1,\"207\":1,\"232\":4}}],[\"settimeout任务被放进事件队列中\",{\"1\":{\"189\":1}}],[\"settimeout的执行时间并不是确定的\",{\"1\":{\"189\":1}}],[\"settimeout会导致明显的闪屏现象\",{\"1\":{\"189\":1}}],[\"settimeout\",{\"1\":{\"20\":1,\"133\":1,\"136\":1,\"189\":1}}],[\"setimmediate\",{\"1\":{\"10\":1}}],[\"strict\",{\"1\":{\"246\":1,\"247\":2}}],[\"string字面量\",{\"0\":{\"242\":1}}],[\"string类型\",{\"0\":{\"240\":1}}],[\"string\",{\"1\":{\"38\":1,\"147\":2,\"242\":3}}],[\"store\",{\"1\":{\"154\":1}}],[\"stoppropagation方法\",{\"1\":{\"76\":1}}],[\"stop\",{\"1\":{\"76\":1}}],[\"styles\",{\"1\":{\"179\":1}}],[\"style\",{\"1\":{\"54\":1,\"139\":1,\"179\":1}}],[\"startindex已经大于endindex\",{\"1\":{\"81\":2}}],[\"startindex移动到b\",{\"1\":{\"81\":1}}],[\"startindex移动到a\",{\"1\":{\"81\":1}}],[\"startindex移动到e\",{\"1\":{\"81\":1}}],[\"staged\",{\"1\":{\"50\":1,\"54\":1}}],[\"staticdir\",{\"1\":{\"182\":1}}],[\"status\",{\"1\":{\"54\":1}}],[\"status进行查询\",{\"1\":{\"50\":1}}],[\"statementlistitem\",{\"1\":{\"213\":2,\"221\":1}}],[\"statementlist\",{\"1\":{\"37\":5,\"213\":3,\"221\":2}}],[\"statement\",{\"1\":{\"31\":1,\"227\":1}}],[\"state\",{\"1\":{\"4\":1,\"60\":1}}],[\"step\",{\"1\":{\"38\":1}}],[\"脚本产生式\",{\"1\":{\"221\":1}}],[\"脚本可以为空\",{\"1\":{\"221\":1}}],[\"脚本的语法导向操作\",{\"1\":{\"212\":1}}],[\"脚本记录器\",{\"1\":{\"4\":1}}],[\"脚本求值\",{\"1\":{\"3\":1}}],[\"脚本执行\",{\"1\":{\"3\":1}}],[\"正在运行的执行上下文始终是该栈顶部元素\",{\"1\":{\"3\":1}}],[\"包括的一系列参数\",{\"1\":{\"218\":1}}],[\"包括的\",{\"1\":{\"37\":1}}],[\"包括一个执行上下文栈\",{\"1\":{\"2\":1}}],[\"包含可选符号的替代项实际上指定了两个代换式\",{\"1\":{\"228\":1}}],[\"包含小程序的图标\",{\"1\":{\"127\":1}}],[\"包含余下属性的对象\",{\"1\":{\"90\":1}}],[\"包含组件中任意选项功能\",{\"1\":{\"73\":1}}],[\"包含了未在props中声明的值\",{\"1\":{\"60\":1}}],[\"包含所有在相关领域代码中的全局代码声明的绑定\",{\"1\":{\"26\":1}}],[\"包含内置绑定\",{\"1\":{\"26\":1}}],[\"包含一个realm\",{\"1\":{\"1\":1}}],[\"执行这些逻辑\",{\"1\":{\"212\":1}}],[\"执行函数\",{\"1\":{\"136\":1}}],[\"执行函数体中的语句\",{\"1\":{\"32\":1}}],[\"执行以上的顺序\",{\"1\":{\"117\":1}}],[\"执行顺序如下\",{\"1\":{\"117\":1}}],[\"执行过程\",{\"0\":{\"117\":1}}],[\"执行的结果保存到vnode中的text属性中\",{\"1\":{\"96\":1}}],[\"执行createperiterationenvironment\",{\"1\":{\"31\":1}}],[\"执行blockdeclarationinstantiation\",{\"1\":{\"28\":1}}],[\"执行\",{\"1\":{\"4\":1}}],[\"执行上下文的关联代码所需的资源的realm记录器\",{\"1\":{\"4\":1}}],[\"执行上下文栈用于跟踪执行上下文\",{\"1\":{\"3\":1}}],[\"执行上下文是代码的执行环境\",{\"1\":{\"1\":1}}],[\"执行环境\",{\"0\":{\"1\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,Mt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=St[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
